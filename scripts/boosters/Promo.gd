# Content autogenerated. Data from digimoncardgame.fandom.com

static func register_cards():

	CardDB.register_booster("Promo", "Promo: Promotional Cards")
	CardDB.add_card(P_001.new())
	CardDB.add_card(P_002.new())
	CardDB.add_card(P_003.new())
	CardDB.add_card(P_004.new())
	CardDB.add_card(P_004_B.new())
	CardDB.add_card(P_005.new())
	CardDB.add_card(P_006.new())
	CardDB.add_card(P_007.new())
	CardDB.add_card(P_008.new())
	CardDB.add_card(P_009.new())
	CardDB.add_card(P_010.new())
	CardDB.add_card(P_011.new())
	CardDB.add_card(P_012.new())
	CardDB.add_card(P_013.new())
	CardDB.add_card(P_014.new())
	CardDB.add_card(P_015.new())
	CardDB.add_card(P_016.new())
	CardDB.add_card(P_017.new())
	CardDB.add_card(P_018.new())
	CardDB.add_card(P_019.new())
	CardDB.add_card(P_020.new())
	CardDB.add_card(P_021.new())
	CardDB.add_card(P_022.new())
	CardDB.add_card(P_023.new())
	CardDB.add_card(P_024.new())
	CardDB.add_card(P_025.new())
	CardDB.add_card(P_026.new())
	CardDB.add_card(P_027.new())
	CardDB.add_card(P_028.new())
	CardDB.add_card(P_028_B.new())
	CardDB.add_card(P_029.new())
	CardDB.add_card(P_030.new())
	CardDB.add_card(P_031.new())
	CardDB.add_card(P_032.new())
	CardDB.add_card(P_033.new())
	CardDB.add_card(P_034.new())
	CardDB.add_card(P_035.new())
	CardDB.add_card(P_035_B.new())
	CardDB.add_card(P_035_C.new())
	CardDB.add_card(P_036.new())
	CardDB.add_card(P_036_B.new())
	CardDB.add_card(P_036_C.new())
	CardDB.add_card(P_037.new())
	CardDB.add_card(P_037_B.new())
	CardDB.add_card(P_037_C.new())
	CardDB.add_card(P_038.new())
	CardDB.add_card(P_038_B.new())
	CardDB.add_card(P_038_C.new())
	CardDB.add_card(P_039.new())
	CardDB.add_card(P_039_B.new())
	CardDB.add_card(P_039_C.new())
	CardDB.add_card(P_040.new())
	CardDB.add_card(P_040_B.new())
	CardDB.add_card(P_040_C.new())
	CardDB.add_card(P_041.new())
	CardDB.add_card(P_042.new())
	CardDB.add_card(P_043.new())
	CardDB.add_card(P_044.new())
	CardDB.add_card(P_045.new())
	CardDB.add_card(P_046.new())
	CardDB.add_card(P_047.new())
	CardDB.add_card(P_048.new())
	CardDB.add_card(P_049.new())
	CardDB.add_card(P_050.new())
	CardDB.add_card(P_051.new())
	CardDB.add_card(P_052.new())
	CardDB.add_card(P_053.new())
	CardDB.add_card(P_054.new())
	CardDB.add_card(P_055.new())
	CardDB.add_card(P_056.new())
	CardDB.add_card(P_057.new())

class P_001 extends Card:
	func _init():
		name = "Agumon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-001"
		play_cost = 5
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Reptile"
		power = 3000
		effect_text = "[On Play] Delete 1 of your opponent's Digimon with 3000 DP or less."

class P_002 extends Card:
	func _init():
		name = "Biyomon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-002"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Bird"
		power = 2000
		inherited_effect_text = "[Your Turn] When this Digimon deletes one of your opponent's Digimon in battle and survives, trigger [Draw 1]."
		notes = "Piyomon"

class P_003 extends Card:
	func _init():
		name = "Gabumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-003"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Reptile"
		power = 3000
		effect_text = "[On Play] Trash the bottom digivolution card of 1 of your opponent's Digimon."

class P_004 extends Card:
	func _init():
		name = "Gomamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-004"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 1000
		inherited_effect_text = "[Your Turn] [Once Per Turn] When one of your opponent's digivolution cards is trashed, gain 1 memory."
		ruling = [
					"You use an effect that reads \"Return 1 of your opponent's Digimon to their hand. Trash all of the digivolution cards of that Digimon\" to return an opponent's Digimon to their hand. When your opponent's digivolution cards are trashed as a result, can you activate this card's effect?",
					"No, you can't. \"Trash all of the digivolution cards of those Digimon\" is an explanation of what happens to the digivolution cards of the Digimon when it returns to their hand. It doesn't count as trashing digivolution for the purposes of this card's effect.",
					"I use [De-Digivolve] while I have this Digimon as a digivolution card. Can I use the inherited effect of [Gomamon]?",
					"No, you cannot activate the effect of [Gomamon].",
					"My opponent trashes a digivolution card with one of their effects like [Omnimon X] or [Digiburst]. Can I use this card's effect?",
					"Yes, you can.",
]

class P_004_B extends Card:
	func _init():
		name = "Gomamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-004 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 1000
		inherited_effect_text = "[Your Turn] [Once Per Turn] When one of your opponent's digivolution cards is trashed, gain 1 memory."
		ruling = [
					"You use an effect that reads \"Return 1 of your opponent's Digimon to their hand. Trash all of the digivolution cards of that Digimon\" to return an opponent's Digimon to their hand. When your opponent's digivolution cards are trashed as a result, can you activate this card's effect?",
					"No, you can't. \"Trash all of the digivolution cards of those Digimon\" is an explanation of what happens to the digivolution cards of the Digimon when it returns to their hand. It doesn't count as trashing digivolution for the purposes of this card's effect.",
					"I use [De-Digivolve] while I have this Digimon as a digivolution card. Can I use the inherited effect of [Gomamon]?",
					"No, you cannot activate the effect of [Gomamon].",
					"My opponent trashes a digivolution card with one of their effects like [Omnimon X] or [Digiburst]. Can I use this card's effect?",
					"Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo"

class P_005 extends Card:
	func _init():
		name = "Patamon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-005"
		play_cost = 4
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Mammal"
		power = 2000
		effect_text = "[On Play] If you have 1 or fewer security cards, trigger [Recovery +1]."

class P_006 extends Card:
	func _init():
		name = "Gatomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-006"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Holy Beast"
		power = 4000
		inherited_effect_text = "[Your Turn] While you have 3 or more security cards, this Digimon gets +1000 DP."
		notes = "Tailmon"

class P_007 extends Card:
	func _init():
		name = "Garurumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-007"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Beast"
		power = 4000
		inherited_effect_text = "[When Attacking] If this Digimon has [Garurumon], trigger [Draw 1]."

class P_008 extends Card:
	func _init():
		name = "WereGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-008"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 2
		digivolve_level = 4
		digimon_type = "Beastkin"
		power = 6000
		effect_text = "[When Attacking] [Once Per Turn] If this Digimon has a [Garurumon] digivolution card, unsuspend this Digimon."
		inherited_effect_text = "[Your Turn] While you have 8 or more cards in your hand, this Digimon gains [Security Attack +1]."

class P_009 extends Card:
	func _init():
		name = "Agumon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-009"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Reptile"
		power = 2000
		inherited_effect_text = "[Your Turn] While this Digimon has [Greymon], it gets +2000 DP."

class P_010 extends Card:
	func _init():
		name = "Greymon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-010"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Dinosaur"
		power = 5000
		effect_text = "[Your Turn] While this Digimon has an [Agumon] digivolution card, it gains [Security Attack +1]."
		ruling = [
					"Does this card's effect apply if it has [Agumon Expert] or [ToyAgumon] as a digivolution card?",
					"No. This card's effect only applies if a card with the exact name [Agumon] is one of its digivolution cards. Despite [Agumon Expert], [ToyAgumon], and other Digimon cards having [Agumon] in their names, the effect doesn't apply if it isn't an exact match.",
]

class P_011 extends Card:
	func _init():
		name = "Veedramon Zero"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-011"
		play_cost = 6
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Mythical Dragon"
		power = 5000
		effect_text = "[When Attacking] If you have a blue Tamer in play, you may trash the top 3 cards of your deck to give this Digimon +2000 DP for the turn."
		inherited_effect_text = "[When Attacking] You may place 3 non-Digi-Egg cards from your trash at the bottom of your deck in any order to activate [Draw 1]."
		ruling = [
					"Do I always have to use this card's effect when I attack?",
					"No. The effect is voluntary.",
					"Can I use this card's [When Attacking] effect to trash 6 cards from the top of my deck and give this card +4000 DP?",
					"No, you can't.",
					"I attack with this card and activate its [When Attacking] effect to get +2000 DP. I then unsuspend this card using a card effect and attack again. Can I use the [When Attacking] effect again to get an additional +2000 DP?",
					"Yes, you can.",
					"Can I activate this card's inherited effect when I have 2 or less non-Digi-Egg cards in my trash?",
					"No, you can't.",
					"When using this card's inherited effect to return cards from my trash to the bottom of my deck, is my opponent allowed to check what cards I am returning to my deck?",
					"Yes. Cards in your trash are considered public information, so please let your opponent confirm which cards you're returning to your deck before you do so.",
					"Can I use this card's inherited effect to return 3 non-Digi-Egg cards to the bottom of my deck but not activate [Draw 1]?",
					"No, you can't.",
]

class P_012 extends Card:
	func _init():
		name = "Tai Kamiya (V-Tamer)"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-012"
		play_cost = 2
		effect_text = "[Main] If you have a Digimon with [Veedramon], you may suspend this Tamer to activate one of the following effects:\n·Trigger [Draw 1].\n·1 of your Digimon gets +1000 DP for the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"At what timing does this card's [Main] effect activate?",
					"You can activate it at any time during your Main Phase, much like you would an Option card.",
					"Can I use this card's effect if I have a Digimon [Veedramon] in my breeding area?",
					"No, it doesn't check Digimon in the breeding area.",
					"If I have two copies of this Tamer as well as one [Veedramon] in play in my battle area, can I active the effects of both Tamers?",
					"Yes, you can.",
					"If I have one [Veedramon] in play in my battle area, can I use this card's effect to make a Digimon that doesn't have [Veedramon] in its name get +1000 DP?",
					"Yes, you can.",
]
		notes = "Yagami Taichi (Digimon Adventure V-Tamer 01)"

class P_013 extends Card:
	func _init():
		name = "Keramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-013"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.UNKNOWN
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Unidentified"
		power = 2000
		inherited_effect_text = "[Opponent Turn] This Digimon gets +1000 DP."

class P_014 extends Card:
	func _init():
		name = "Kurisarimon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-014"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.UNKNOWN
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Unidentified"
		power = 5000
		effect_text = "[Blocker].\n [When Attacking] Lose 2 memory."
		notes = "Chrysalimon"

class P_015 extends Card:
	func _init():
		name = "Infermon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-015"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.UNKNOWN
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 3
		digivolve_level = 4
		digimon_type = "Unidentified"
		power = 7000
		effect_text = "[On Play] Trigger [De-Digivolve 1]."

class P_016 extends Card:
	func _init():
		name = "Diaboromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-016"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Unidentified"
		power = 11000
		effect_text = "[Your Turn] For each [Diaboromon] you have in play, this Digimon gets [Security Attack +1]."
		ruling = [
					"Does a [Diaboromon] token count as 1 [Diaboromon] for this card's effect?",
					"Yes, it does.",
					"Does this card itself count as 1 [Diaboromon] for its effect?",
					"Yes, it does.",
]
		notes = "Diablomon"

class P_017 extends Card:
	func _init():
		name = "DemiDevimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-017"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Evil"
		power = 2000
		effect_text = "[On Play] Trash the top 2 cards of your deck."
		ruling = [
					"Do I always have to activate this card's effect?",
					"Yes, as long as you are able to.",
]
		notes = "PicoDevimon"

class P_018 extends Card:
	func _init():
		name = "Devimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-018"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Fallen Angel"
		power = 3000
		effect_text = "[On Play] Delete 1 of your opponent's level 3 Digimon."

class P_019 extends Card:
	func _init():
		name = "Myotismon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-019"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 3
		digivolve_level = 4
		digimon_type = "Undead"
		power = 7000
		inherited_effect_text = "[Retaliation]."
		notes = "Vamdemon"

class P_020 extends Card:
	func _init():
		name = "VenomMyotismon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-020"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Dark Animal"
		power = 11000
		effect_text = "[On Deletion] You may play a purple Digimon Card with a level of 4 or less from your trash without paying its memory cost. Any [On Play] effects on Digimon played with this effect don't activate."
		notes = "VenomVamdemon"

class P_021 extends Card:
	func _init():
		name = "A New World"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-021"
		play_cost = 0
		effect_text = "[Main] If you have [Mimi Tachikawa] in play, you may play a [Palmon] from your hand without paying its memory cost to return 1 of your [Mimi Tachikawa] cards to it's owner's hand."
		sec_effect_text = "[Security] Add this card to your hand."

class P_022 extends Card:
	func _init():
		name = "DNA Digivolution - Hearts United"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-022"
		play_cost = 0
		effect_text = "[Main] If you have [Davis Motomiya] and [Ken Ichijoji] in play, you may place 1 [ExVeemon] and 1 [Stingmon] from your hand at the bottom of your deck in any order to play 1 [Paildramon] from your hand without paying its memory cost."
		sec_effect_text = "[Security] Add this card to your hand."
		notes = "Jogress Evolution Now, Unite Our Hearts"

class P_023 extends Card:
	func _init():
		name = "Patamon's Confession"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-023"
		play_cost = 0
		effect_text = "[Main] If you have [T.K. Takaishi] in play, place 1 of your [Patamon] at the bottom of your security stack face down. Trash that Digimon's digivolution cards."
		sec_effect_text = "[Security] Add this card to your hand."

class P_024 extends Card:
	func _init():
		name = "Tai's Growing Up!"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-024"
		play_cost = 0
		effect_text = "[Main] If you have [Tai Kamiya] in play, place 1 of your [Agumon] at the bottom of its owner's deck to trigger [Draw 3]. Trash that Digimon's digivolution cards."
		sec_effect_text = "[Security] Add this card to your hand."
		ruling = [
					"Can I place an [Agumon] from my hand on the bottom of my deck for this card's effect?",
					"No, it must be from the battle area.",
]
		notes = "Taichi, you're big"

class P_025 extends Card:
	func _init():
		name = "GranKuwagamon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-025"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.FREE
		digivolve_color = ColorGroup.GREEN
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Insectoid"
		power = 11000
		effect_text = "[Main] [Digiburst 2].\n·1 of your digimon gains [Security Attack +1] for the turn."

class P_026 extends Card:
	func _init():
		name = "BlackWarGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-026"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Dragonkin"
		power = 11000
		effect_text = "[Main] [Digiburst 2].\n·Unsuspend this Digimon."

class P_027 extends Card:
	func _init():
		name = "MetalGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-027"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "[Main] [Digiburst 2].\n·Use a purple Option card with a memory cost of 7 or less in your hand without paying its memory cost."
		ruling = [
					"I have a [Lilithmon] and [MaloMyotismon] and then I use this card's effect to [Digiburst] [Ghostmon], what is the order of the effects when I use [Heat Viper] with this card?",
					"The order of effects goes [MaloMyotismon] and then [Ghostmon] or [Lilithmon].",
					"I have a [Lilithmon] and [MaloMyotismon] and then I use this card's effect to [Digiburst] [Ghostmon], when do I use their effects when I use [Heat Viper] with this card?",
					"The order of effects ''must'' go [Ghostmon], [Lilithmon], and [MaloMyotismon].",
]

class P_028 extends Card:
	func _init():
		name = "Pulsemon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-028"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Beastkin"
		power = 2000
		effect_text = "[On Play] If you have 3 or more security cards, trigger [Draw 1]. If you have 3 or fewer security cards, gain 1 memory."

class P_028_B extends Card:
	func _init():
		name = "Pulsemon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-028 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Beastkin"
		power = 2000
		effect_text = "[On Play] If you have 3 or more security cards, trigger [Draw 1]. If you have 3 or fewer security cards, gain 1 memory."
		is_parallel = true
		notes = "parallel promo"

class P_029 extends Card:
	func _init():
		name = "Agunimon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-029"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VARIABLE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Wizard"
		power = 4000
		effect_text = "[When Attacking] This Digimon can digivolve into an [AncientGreymon] in your hand for a memory cost of 2, ignoring its digivolution requirements. If it does, delete this Digimon at the end of the turn."
		inherited_effect_text = "[Your Turn] When digivolving this Digimon into an [AncientGreymon] in your hand, reduce its digivolution cost by 2."
		notes = "Agnimon"

class P_030 extends Card:
	func _init():
		name = "Lobomon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-030"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VARIABLE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Warrior"
		power = 4000
		effect_text = "[When Digivolved] This Digimon can digivolve into an [AncientGarurumon] in your hand for a memory cost of 1, ignoring its digivolution requirements. If it does, delete this Digimon at the end of the turn."
		inherited_effect_text = "[Your Turn] When digivolving this Digimon into an [AncientGarurumon] in your hand, reduce its digivolution cost by 2."
		ruling = [
					"I digivolve [Gomamon] into [Lobomon]. The memory passes over to 1 when I use the latter's effect to digivolve into [AncientGarurumon]. My opponent has a [ToyAgumon]. As my turn '''is ending''', AncientGarurumon is deleted and [Gomamon]'s effect gives me +1 memory moving my memory back to 0. What happens?",
					"Even though [[End of Turn Procedures]] have started, when your memory moves back to 0, you no longer continue ending your turn, [End of Your Turn] and [End of All Turns] would happen twice in this instance as you would end your turn twice.",
]
		notes = "Wolfmon"

class P_031 extends Card:
	func _init():
		name = "Gatomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-031"
		play_cost = 6
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Holy Beast"
		power = 5000
		effect_text = "[Opponent Turn] While you have a purple Digimon in play, this Digimon gains [Blocker].\n[On Play] If you have 3 or fewer security cards, trigger [Recovery +1]."
		notes = "Tailmon"

class P_032 extends Card:
	func _init():
		name = "Palmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-032"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.GREEN
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Vegetation"
		power = 2000
		inherited_effect_text = "[Your Turn] When this card is trashed due to activating this Digimon's [Digiburst], 1 of your Digimon gains [Jamming] for the turn."

class P_033 extends Card:
	func _init():
		name = "Sunarizamon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-033"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[Your Turn] All of your black Digimon with 13000 DP or more gain [Piercing]."
		inherited_effect_text = "[Your Turn] While this Digimon is black and has 13000 DP or more, this Digimon gains [Security Attack +1]."

class P_034 extends Card:
	func _init():
		name = "DemiDevimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-034"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Evil"
		power = 2000
		inherited_effect_text = "[On Deletion] If you have 7 or more Digimon cards with Devimon in your trash, you may play 1 [DanDevimon] from your trash without paying its memory cost."
		notes = "PicoDevimon"

class P_035 extends Card:
	func _init():
		name = "Red Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "P-035"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 red Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."

class P_035_B extends Card:
	func _init():
		name = "Red Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "P-035 (B)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 red Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_035_C extends Card:
	func _init():
		name = "Red Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "P-035 (C)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 red Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_036 extends Card:
	func _init():
		name = "Blue Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "P-036"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 blue Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."

class P_036_B extends Card:
	func _init():
		name = "Blue Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "P-036 (B)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 blue Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_036_C extends Card:
	func _init():
		name = "Blue Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "P-036 (C)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 blue Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_037 extends Card:
	func _init():
		name = "Yellow Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "P-037"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 yellow Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."

class P_037_B extends Card:
	func _init():
		name = "Yellow Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "P-037 (B)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 yellow Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_037_C extends Card:
	func _init():
		name = "Yellow Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "P-037 (C)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 yellow Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_038 extends Card:
	func _init():
		name = "Green Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.SR
		id = "P-038"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 green Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."

class P_038_B extends Card:
	func _init():
		name = "Green Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.SR
		id = "P-038 (B)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 green Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_038_C extends Card:
	func _init():
		name = "Green Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.SR
		id = "P-038 (C)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 green Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_039 extends Card:
	func _init():
		name = "Black Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "P-039"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 black Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."

class P_039_B extends Card:
	func _init():
		name = "Black Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "P-039 (B)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 black Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_039_C extends Card:
	func _init():
		name = "Black Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "P-039 (C)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 black Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo"

class P_040 extends Card:
	func _init():
		name = "Purple Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "P-040"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 purple Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		notes = "Violet Memory Boost!!"

class P_040_B extends Card:
	func _init():
		name = "Purple Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "P-040 (B)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 purple Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo Violet Memory Boost!!"

class P_040_C extends Card:
	func _init():
		name = "Purple Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "P-040 (C)"
		play_cost = 3
		effect_text = "[Main] Reveal the top 4 cards of your deck. Add 1 purple Digimon card among them to your hand. Place the remaining cards at the bottom of your deck in any order. Then, place this card in your battle area.\n[Main] [Delay]\n·Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		is_parallel = true
		notes = "parallel promo Violet Memory Boost!!"

class P_041 extends Card:
	func _init():
		name = "Guilmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-041"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digivolve_color = ColorGroup.RED
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[When Attacking] Trigger [Draw 1]."

class P_042 extends Card:
	func _init():
		name = "Gabumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-042"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[On Play] Reveal the top 5 cards of your deck. Add 1 Tamer card among them to your hand. Place the cards at the bottom of your deck in any order."

class P_043 extends Card:
	func _init():
		name = "Kudamon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-043"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 0
		digivolve_level = 2
		digimon_type = "Holy Beast"
		power = 2000
		effect_text = "[On Play] You may return 1 [Kentaurosmon] from your trash to the bottom of your deck to trigger [Recovery +1]."
		inherited_effect_text = "[On Deletion] 1 of your opponent's Digimon gets -1000 DP for the turn."

class P_044 extends Card:
	func _init():
		name = "HerculesKabuterimon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-044"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.GREEN
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Insectoid"
		power = 11000
		effect_text = "[When Digivolved] Suspend 1 of your opponent's Digimon, or 2 of your opponent's Digimon with 5000 DP or less."
		notes = "HerakleKabuterimon"

class P_045 extends Card:
	func _init():
		name = "Kurisarimon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.P
		id = "P-045"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.UNKNOWN
		digivolve_color = ColorGroup.BLACK
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Unidentified"
		power = 5000
		inherited_effect_text = "[All Turns] All of your Digimon with the same name as this Digimon gain [Decoy]."
		notes = "Chrysalimon"

class P_046 extends Card:
	func _init():
		name = "Wizardmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.P
		id = "P-046"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.PURPLE
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Wizard"
		power = 5000
		inherited_effect_text = "[Your Turn] [Once Per Turn] When you use an option card, gain 1 memory."
		notes = "Wizarmon"

class P_047 extends Card:
	func _init():
		name = "AeroVeedramon Zero"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-047"
		play_cost = 8
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 3
		digivolve_level = 4
		digimon_type = "Holy Dragon"
		power = 7000
		effect_text = "[When Digivolved] Trash 3 cards from the top of your deck. Then, if you have a Tamer in play, this Digimon gets +3000 DP for the turn."
		inherited_effect_text = "[When Attacking] You may place 3 non Digi-Egg cards from your trash at the bottom of your deck in any order to give this Digimon +2000 DP for the turn."
		notes = "AeroV-dramon Zero"

class P_048 extends Card:
	func _init():
		name = "UlforceVeedramon Zero"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-048"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 4
		digivolve_level = 5
		digimon_type = "Holy Warrior"
		power = 13000
		effect_text = "[When Digivolved] You may place 3 non Digi-Egg cards from your trash at the bottom of your deck in any order to unsuspend this Digimon and 1 of your Tamers.\n[Your Turn] [Once Per Turn] When you return cards from your trash to your deck, gain 1 memory."
		notes = "UlforceV-dramon Zero"

class P_049 extends Card:
	func _init():
		name = "Phoenixmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-049"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Holy Beast"
		power = 11000
		effect_text = "[When Digivolved] If you have a Tamer in play, this Digimon gains [Security Attack +1] for the turn.\n[Your Turn] [Once Per Turn] When this Digimon is blocked, trash the top card of your opponent's security stack."
		notes = "Hououmon"

class P_050 extends Card:
	func _init():
		name = "WarGreymon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.P
		id = "P-050"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.RED
		digivolve_cost = 4
		digivolve_level = 5
		digimon_type = "Dragonkin"
		power = 12000
		effect_text = "[When Digivolved] If you have a Tamer in play, delete 1 of your opponent's Digimon with 13000 DP or more. \n[When Attacking] Delete 1 of your opponent's Digimon with 4000 DP or less"

class P_051 extends Card:
	func _init():
		name = "MetalGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-051"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Cyborg"
		power = 1100
		effect_text = "[When Digivolved] If you have a Tamer in play, [Draw 2].\n[Opponent Turn] This Digimon can't be attacked."

class P_052 extends Card:
	func _init():
		name = "Vikemon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.P
		id = "P-052"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.FREE
		digivolve_color = ColorGroup.BLUE
		digivolve_cost = 4
		digivolve_level = 5
		digimon_type = "Beastkin"
		power = 1100
		effect_text = "[When Digivolved] If you have a Tamer in play, up to 3 of your opponent's Digimon with no digivolution cards can't attack until the end of your opponent's next turn.\n[When Attacking] [Once Per Turn] Return 1 of your opponent's Digimon with no digivolution cards to its owner's hand."

class P_053 extends Card:
	func _init():
		name = "Ophanimon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-053"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Throne"
		power = 1100
		effect_text = "[When Digivolved] If you have a Tamer in play, 1 of your opponent's Digimon gets -5000 DP for the turn.\n[When Attacking] 1 of your opponent's Digimon and all of your opponent's Security Digimon get -2000 DP for the turn."

class P_054 extends Card:
	func _init():
		name = "Seraphimon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.P
		id = "P-054"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.YELLOW
		digivolve_cost = 4
		digivolve_level = 5
		digimon_type = "Seraph"
		power = 1100
		effect_text = "[When Digivolved] If you have a Tamer in play, [Recovery +1].\n[On Deletion] [Recovery +1]."

class P_055 extends Card:
	func _init():
		name = "HerculesKabuterimon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-055"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color = ColorGroup.GREEN
		digivolve_cost = 3
		digivolve_level = 5
		digimon_type = "Insectoid"
		power = 11000
		effect_text = "[When Digivolved] If you have a Tamer in play, suspend 1 of your opponent's Digimon. \n[Your Turn] When this Digimon deletes an opponent's Digimon in battle and survives, gain 1 memory."
		notes = "HerakleKabuterimon"

class P_056 extends Card:
	func _init():
		name = "Rosemon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-056"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.GREEN
		digivolve_cost = 4
		digivolve_level = 5
		digimon_type = "Fairy"
		power = 12000
		effect_text = "[Digisorption -2]\n[When Digivolved] If you have a Tamer in play, 1 of your opponent's Digimon can't attack or block until the end of their next turn."

class P_057 extends Card:
	func _init():
		name = "Tyrannomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.P
		id = "P-057"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digivolve_color = ColorGroup.GREEN
		digivolve_cost = 2
		digivolve_level = 3
		digimon_type = "Dinosaur"
		power = 4000
		effect_text = "[Your Turn] This Digimon gets +3000 DP"
		inherited_effect_text = "[Your Turn] While this Digimon is level 6 or higher, it gets +2000 DP."

