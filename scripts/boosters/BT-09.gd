# Content autogenerated. Data from digimoncardgame.fandom.com

static func register_cards():

	CardDB.register_booster("BT-09", "BT-09: X Record")
	CardDB.add_card(BT9_001.new())
	CardDB.add_card(BT9_002.new())
	CardDB.add_card(BT9_003.new())
	CardDB.add_card(BT9_004.new())
	CardDB.add_card(BT9_005.new())
	CardDB.add_card(BT9_006.new())
	CardDB.add_card(BT9_007.new())
	CardDB.add_card(BT9_008.new())
	CardDB.add_card(BT9_009.new())
	CardDB.add_card(BT9_010.new())
	CardDB.add_card(BT9_011.new())
	CardDB.add_card(BT9_012.new())
	CardDB.add_card(BT9_013.new())
	CardDB.add_card(BT9_014.new())
	CardDB.add_card(BT9_015.new())
	CardDB.add_card(BT9_016.new())
	CardDB.add_card(BT9_017.new())
	CardDB.add_card(BT9_018.new())
	CardDB.add_card(BT9_019.new())
	CardDB.add_card(BT9_020.new())
	CardDB.add_card(BT9_021.new())
	CardDB.add_card(BT9_022.new())
	CardDB.add_card(BT9_023.new())
	CardDB.add_card(BT9_024.new())
	CardDB.add_card(BT9_025.new())
	CardDB.add_card(BT9_026.new())
	CardDB.add_card(BT9_027.new())
	CardDB.add_card(BT9_028.new())
	CardDB.add_card(BT9_029.new())
	CardDB.add_card(BT9_030.new())
	CardDB.add_card(BT9_031.new())
	CardDB.add_card(BT9_032.new())
	CardDB.add_card(BT9_033.new())
	CardDB.add_card(BT9_034.new())
	CardDB.add_card(BT9_035.new())
	CardDB.add_card(BT9_036.new())
	CardDB.add_card(BT9_037.new())
	CardDB.add_card(BT9_038.new())
	CardDB.add_card(BT9_039.new())
	CardDB.add_card(BT9_040.new())
	CardDB.add_card(BT9_041.new())
	CardDB.add_card(BT9_042.new())
	CardDB.add_card(BT9_043.new())
	CardDB.add_card(BT9_044.new())
	CardDB.add_card(BT9_045.new())
	CardDB.add_card(BT9_046.new())
	CardDB.add_card(BT9_047.new())
	CardDB.add_card(BT9_048.new())
	CardDB.add_card(BT9_049.new())
	CardDB.add_card(BT9_050.new())
	CardDB.add_card(BT9_051.new())
	CardDB.add_card(BT9_052.new())
	CardDB.add_card(BT9_053.new())
	CardDB.add_card(BT9_054.new())
	CardDB.add_card(BT9_055.new())
	CardDB.add_card(BT9_056.new())
	CardDB.add_card(BT9_057.new())
	CardDB.add_card(BT9_058.new())
	CardDB.add_card(BT9_059.new())
	CardDB.add_card(BT9_060.new())
	CardDB.add_card(BT9_061.new())
	CardDB.add_card(BT9_062.new())
	CardDB.add_card(BT9_063.new())
	CardDB.add_card(BT9_064.new())
	CardDB.add_card(BT9_065.new())
	CardDB.add_card(BT9_066.new())
	CardDB.add_card(BT9_067.new())
	CardDB.add_card(BT9_068.new())
	CardDB.add_card(BT9_069.new())
	CardDB.add_card(BT9_070.new())
	CardDB.add_card(BT9_071.new())
	CardDB.add_card(BT9_072.new())
	CardDB.add_card(BT9_073.new())
	CardDB.add_card(BT9_074.new())
	CardDB.add_card(BT9_075.new())
	CardDB.add_card(BT9_076.new())
	CardDB.add_card(BT9_077.new())
	CardDB.add_card(BT9_078.new())
	CardDB.add_card(BT9_079.new())
	CardDB.add_card(BT9_080.new())
	CardDB.add_card(BT9_081.new())
	CardDB.add_card(BT9_082.new())
	CardDB.add_card(BT9_083.new())
	CardDB.add_card(BT9_084.new())
	CardDB.add_card(BT9_085.new())
	CardDB.add_card(BT9_086.new())
	CardDB.add_card(BT9_087.new())
	CardDB.add_card(BT9_088.new())
	CardDB.add_card(BT9_089.new())
	CardDB.add_card(BT9_090.new())
	CardDB.add_card(BT9_091.new())
	CardDB.add_card(BT9_092.new())
	CardDB.add_card(BT9_093.new())
	CardDB.add_card(BT9_094.new())
	CardDB.add_card(BT9_095.new())
	CardDB.add_card(BT9_096.new())
	CardDB.add_card(BT9_097.new())
	CardDB.add_card(BT9_098.new())
	CardDB.add_card(BT9_099.new())
	CardDB.add_card(BT9_100.new())
	CardDB.add_card(BT9_101.new())
	CardDB.add_card(BT9_102.new())
	CardDB.add_card(BT9_103.new())
	CardDB.add_card(BT9_104.new())
	CardDB.add_card(BT9_105.new())
	CardDB.add_card(BT9_106.new())
	CardDB.add_card(BT9_107.new())
	CardDB.add_card(BT9_108.new())
	CardDB.add_card(BT9_109.new())
	CardDB.add_card(BT9_110.new())
	CardDB.add_card(BT9_111.new())
	CardDB.add_card(BT9_112.new())

class BT9_001 extends Card:
	func _init():
		name = "Koromon"
		type = Type.DIGITAMA
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT9-001"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] While this Digimon has [Agumon], or [Greymon] in its name, it gets +1000 DP."

class BT9_002 extends Card:
	func _init():
		name = "Puyoyomon"
		type = Type.DIGITAMA
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT9-002"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When an effect adds a card to your hand, this Digimon gets +1000 DP for the turn."
		ruling = [
					"Q: Does this effect activate when I return my own Digimon to my hand?",
					"A: Yes, it will activate.",
					"Q: Does this effect activate when a card effect allows you to draw and trash card from your hand?",
					"A: Yes, it will activate.",
					"Q: Does this card's effect activate if my card effect performs a digivolution and draws from its digivolution bonus?",
					"A: No, it is not treated as drawing from an effect.",
]

class BT9_003 extends Card:
	func _init():
		name = "Tokomon (X Antibody)"
		type = Type.DIGITAMA
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT9-003"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser/X Antibody"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When a card is added to your security stack, 1 of your opponent's Digimon get -1000 DP for the turn."
		ruling = [
					"Q: Will this card effect activate during the timing of “Add a card from your security to your hand, then perform <Recovery +1 (Deck)>” ?",
					"A: Yes, it will activate.",
]

class BT9_004 extends Card:
	func _init():
		name = "Motimon"
		type = Type.DIGITAMA
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT9-004"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] While this Digimon has [Insectoid] in its traits, it gets +1000 DP."
		notes = "Mochimon"

class BT9_005 extends Card:
	func _init():
		name = "Tumblemon"
		type = Type.DIGITAMA
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT9-005"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Rock"
		inherited_effect_text = "[Opponent's Turn] While this Digimon has <Blocker>, it gets +1000 DP."
		notes = "Goromon"

class BT9_006 extends Card:
	func _init():
		name = "Pagumon"
		type = Type.DIGITAMA
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT9-006"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[When Attacking] You may trash 1 card from your hand to give this Digimon +1000 DP for the turn."

class BT9_007 extends Card:
	func _init():
		name = "Minidekachimon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT9-007"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Mini Dragon"
		power = 3000

class BT9_008 extends Card:
	func _init():
		name = "Agumon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT9-008"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dinosaur/X Antibody"
		power = 2000
		effect_text = "[On Play] [When Digivolving] Reveal 3 cards from the top of your deck. Add 1 [X Antibody] and 1 card with [Greymon], or [Omnimon] in its name among them to your hand. Place the remaining cards at the bottom of your deck in any order."

class BT9_009 extends Card:
	func _init():
		name = "Guilmon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT9-009"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Dragon/X Antibody"
		power = 3000
		effect_text = "[When Digivolving] Delete 1 of your opponent's Digimon with 3000 DP or less."
		inherited_effect_text = "[Your Turn] Add 1000 to the maximum DP you can choose with DP-based delete effects."
		ruling = [
					"Q: What does the effect \"Add +1000 DP to the maximum DP of your effects that delete Digimon\" mean?",
					"A: This effect refers to deletion effect that states \"Delete Digimon with X DP or less\" and \"Select opponent’s Digimon with the total of X or less\". This effect enables the player to increase the limit by 1000 DP. However, this effect does not apply to effects such as \"Delete the Digimon that has lower DP than this Digimon\".",
					"Q: Does this card's inherited effect increase the minimum DP deletion of [BT3-109 Plasma Stake] from 12000 DP to 13000 DP?",
					"A: No, it does not. It only affects the maximum DP, so [BT3-109 Plasma Stake] will still delete only Digimon with 12000 DP or more.",
]

class BT9_010 extends Card:
	func _init():
		name = "Atamadekachimon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT9-010"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Dinosaur"
		power = 7000

class BT9_011 extends Card:
	func _init():
		name = "Growlmon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT9-011"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Dragon/X Antibody"
		power = 6000
		inherited_effect_text = "[Your Turn] Add 1000 to the maximum DP you can choose with DP-based deletion effects."
		ruling = [
					"Q: What does the effect \"Add +1000 DP to the maximum DP of your effects that delete Digimon\" mean?",
					"A: This effect refers to deletion effect that states \"Delete Digimon with X DP or less\" and \"Select opponent’s Digimon with the total of X or less\". This effect enables the player to increase the limit by 1000 DP. However, this effect does not apply to effects such as \"Delete the Digimon that has lower DP than this Digimon\".",
					"Q: Does this card's inherited effect increase the minimum DP deletion of [BT3-109 Plasma Stake] from 12000 DP to 13000 DP?",
					"A: No, it does not. It only affects the maximum DP, so [BT3-109 Plasma Stake] will still delete only Digimon with 12000 DP or more.",
]
		notes = "Growmon (X Antibody)"

class BT9_012 extends Card:
	func _init():
		name = "Greymon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT9-012"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dinosaur/X Antibody"
		power = 6000
		inherited_effect_text = "[All Turns] When this Digimon has [Greymon], or [Omnimon] in its name and an effect would delete it or return it to your hand or deck, you may trash 2 cards of the same level in this Digimon’s digivolution cards to prevent it from leaving play."
		ruling = [
					"Q: Does the effect of this card, \"by trashing 2 cards with the same level\", require the 2 cards to be the same level as the current Digimon?",
					"A: No, the effect states to trash 2 cards from the digivolution cards that have the same level. For example, by trashing 2 level 5 Digimon cards from its digivolution cards, this Digimon will not be deleted or returned to the deck/hand.",
					"Q: Is it possible to trash this card when activating this card’s inherited effect?",
					"A: Yes, you can.",
					"Q: Can this inherited effect activate when this Digimon’s DP reaches 0?",
					"A: No, it can’t. Due to the fact that when the Digimon’s DP becomes 0 and it will be deleted due to rules and not the effect of the card. It will not be considered as deleted by card effect.",
					"Q: This card is chosen to be deleted by [BT5-106 Demonic Disaster], if it uses its [All Turns] effect to prevent its deletion do I still get to unsuspend a Digimon?",
					"A: No, you cannot unsuspend a Digimon if the Digimon is not deleted.",
					"Q: My opponent's Digimon with <Piercing> attacked my Digimon, and my Digimon lost the battle. I then activate my Digimon's [All Turns] inherited effect to prevent it from being deleted. What happens to my opponent's <Piercing>?",
					"A: As the requirement of \"when this Digimon attacks and deletes an opponent's Digimon and survives the battle\" of <Piercing> was not met, it does not activate.",
					"Q: My Digimon has <Piercing> gained from an effect such as [BT1-091 Scrap Claw] and battles a Digimon with equal DP. I activate [All Turns] to prevent it from being deleted. Does <Piercing> trigger?",
					"A: Yes, because the Digimon will still have <Piercing> and it deleted a Digimon battle and survived it will trigger.",
					"Q: This card has <Piercing> from [EX1-008 MetalGreymon] in its digivolution cards, this card attacks a Digimon with equal DP and uses its [All Turns] effect to prevent its deletion by trashing [EX1-008 MetalGreymon]. Does <Piercing> still trigger?",
					"A: No, it lost <Piercing> before the timing it would trigger and if it doesn't trigger it cannot activate.",
]

class BT9_013 extends Card:
	func _init():
		name = "OmniShoutmon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT9-013"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dragonkin/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] <Blitz> (If your opponent has 1 or more memory, this Digimon may attack).\n[Your Turn] While this Digimon has [OmniShoutmon] or [X Antibody] in its digivolution cards, this Digimon can also attack your opponent's unsuspended Digimon."
		ruling = [
					"Q: The effect of \"When you have [OmniShoutmon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [OmniShoutmon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]
		notes = "OmegaShoutmon X Antibody"

class BT9_014 extends Card:
	func _init():
		name = "WarGrowlmon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT9-014"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Cyborg/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] Until the end of your opponent's turn, 2 of their Digimon gain \"[On Deletion] Lose 1 memory.\" Then, if [WarGrowlmon] or [X Antibody] is in this Digimon's digivolution cards, choose any number of your opponent's Digimon whose total DP adds up to 6000 or less and delete them."
		ruling = [
					"Q: The effect of \"If you have [WarGrowlmon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it's required to meet the condition you have cards with [WarGrowlmon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]
		notes = "MegaloGrowmon (X Antibody)"

class BT9_015 extends Card:
	func _init():
		name = "MetalGreymon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT9-015"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] This Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card) until the end of your opponent's turn. Then, if this Digimon has [MetalGreymon] or [X Antibody] in its digivolution cards, this Digimon gets +3000 DP until the end of your opponent's turn."
		ruling = [
					"Q: The effect of \"If you have [MetalGreymon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [MetalGreymon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
					"Q: After I digivolve this Digimon, if I place the card [X Antibody] under this card’s digivolution cards in the same turn, do I get +3000 DP due to its effect?",
					"A: No, since this effect activates and checks for the card named [MetalGreymon] or [X Antibody] when digivolving, this Digimon does not gain +3000 DP if you place the card [X Antibody] under this card’s digivolution cards after digivolving it.",
]

class BT9_016 extends Card:
	func _init():
		name = "WarGreymon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT9-016"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dragonkin/X Antibody"
		power = 12000
		effect_text = "[All Turns] When a card is removed from your opponent's security stack, gain 1 memory.\n[End of Attack] (Once Per Turn) If [WarGreymon] or [X Antibody] is in this Digimon's digivolution cards, delete 1 of your opponent's Digimon with DP less than or equal to this Digimon's DP."
		ruling = [
					"Q: The effect of \"If you have [WarGreymon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [WarGreymon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
					"Q: For this card’s [All Turns] effect, when the player attacks the security and checks a Security Digimon and battles it. Does the player gain 1 memory?",
					"A: Since the security will be reduced when performing checks, if there is a [Security] effect during the checks, [Security] effects will be activated first, and this effect will be activated after. After that, if there are no other effects to be activated, you will gain 1 memory before battling the security Digimon.",
]

class BT9_017 extends Card:
	func _init():
		name = "Gallantmon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT9-017"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Holy Warrior/Royal Knight/X Antibody"
		power = 12000
		effect_text = "[When Digivolving] Delete 1 of your opponent's Digimon with the lowest DP. If no Digimon is deleted by this effect, unsuspend this Digimon.\n[Your Turn] (Once Per Turn) When an opponent's Digimon is deleted, if [Gallantmon] or [X Antibody] in this Digimon's digivolution cards, trash the top card of your opponent's security stack."
		ruling = [
					"Q: What is the effect of [When Digivolving] \"Delete 1 of your opponents Digimon with the lowest DP, if there is no Digimon was deleted by this effect\" meant?",
					"A: The effect of [When Digivolving] is when your opponent has no Digimon or Digimon with the lowest DP does not get deleted by this card effect. It also means during the timing when there is no target that can be deleted by this card effect.",
					"Q: Can I choose not to delete my opponent’s Digimon when I activate this card’s [When Digivolving] effect?",
					"A: No, you can’t. You are required to pick a target if possible, during the activation of this effect.",
					"Q: When an opponent has a Digimon that \"Can’t be deleted by opponent’s card effects\" and the Digimon has the same DP as this Digimon. During the activation of this card’s [When Digivolving] effect, can I choose my opponent’s Digimon that has the effect of \"can’t be deleted by your opponent’s card effect\"?",
					"A: Yes, you can. If there are multiple Digimon with the lowest DP you can select either 1 of them as a target. So it’s possible to choose a Digimon that has the effect of \"Can’t be deleted by opponent card effects\" which will allow you to active this Digimon.",
					"Q: The effect of \"If you have [Gallantmon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [Gallantmon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]
		notes = "Dukemon X Antibody"

class BT9_018 extends Card:
	func _init():
		name = "Dinorexmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT9-018"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color_2 = ""
		digivolve_cost_2 = 5
		digivolve_level_2 = 5
		digimon_type = "Dinosaur/X Antibody"
		power = 13000
		effect_text = "[When Digivolving] For each Tamer your opponent has in play, suspend 1 of your opponent’s Digimon and gain 1 memory.\n[All Turns] (Once Per Turn) When an opponent’s Digimon with 6000 DP or less becomes suspended, you may delete that Digimon"
		ruling = [
					"Q: Does [When Digivolving] allow you to gain 1 memory for each Tamer your opponent has?",
					"A: Yes.",
					"Q: While my opponent has multiple Tamers and only has 1 Digimon. Can I only suspend the Digimon and gain memory for each Tamer that my opponent has?",
					"A: Yes.",
					"Q: Can I choose not to use the [All Turns] effect?",
					"A: It’s a \"You May\" effect. You can choose not to use it and if it's not used (Once Per Turn), it will not be used.",
					"Q: When I declare an attack. My opponent Digimon with 6000 DP activates <Blocker> and suspends. Due to the [All Turns] effect that Digimon is deleted. What will happen to the attack in this situation?",
					"A: Since the blocking Digimon is deleted by this card effect and due to the attack target no longer being present, the attack will end.",
					"Q: If my opponent declares an attack with [BT7-049 MameTyramon]. If they digivolve into a new Digimon, can this Digimon's effect still delete the newly digivolved Digimon even if it has more than 6000 DP?",
					"A: Yes, it had 6000 or less DP at the time it was suspended.",
					"Q: Is this card's [All Turns] effect on the opponent's turn considered a [Reaction] effect during battle?",
					"A: No, it is triggered as soon as the opponent declares an attack suspending the Digimon. (See more in Attack Resolution)",
					"Q: Does this card's [All Turns] effect receive the boost from [BT9-009 Guilmon X Antibody]?",
					"A: No, it does not. It is not a \"Delete 1 of your opponent's Digimon with X DP or less\" effect.",
]

class BT9_019 extends Card:
	func _init():
		name = "Crabmon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-019"
		play_cost = 2
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Crustacean"
		power = 3000
		notes = "Ganimon"

class BT9_020 extends Card:
	func _init():
		name = "Gabumon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT9-020"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beast/X Antibody"
		power = 2000
		effect_text = "[On Play] [When Digivolving] Reveal the top 3 cards of your deck. Add 1 card with [Garurumon], or [Omnimon] in its name and 1 [X Antibody] among them to your hand. Place the remaining cards at the bottom of your deck in any order."
		ruling = [
					"Q: Does the effect mean that I can’t add the cards to my hand unless I add both card with [Garurumon], or [Omnimon] in its name and [X Antibody] to my hand from the revealed cards?",
					"A: No. You can add the card to your hand even though you only revealed cards with [Garurumon], or [Omnimon] in its name or [X Antibody].",
					"Q: If I reveal cards with [Garurumon], or [Omnimon] in its name and [X Antibody], can I choose not to add them to hand?",
					"A: No because the effect stated \"Add to hand\", thus you are required to add as much as possible from the revealed cards. You are required to add cards with [Garurumon], or [Omnimon] in its name and [X Antibody] to your hand.",
]

class BT9_021 extends Card:
	func _init():
		name = "Jellymon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT9-021"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Mollusk"
		power = 2000
		effect_text = "[Your Turn] (Once Per Turn) When you play a blue tamer, <Draw 1> (Draw 1 card from your deck)."
		inherited_effect_text = "[Your Turn] (Once Per Turn) When an effect adds a card to your hand, return 1 of your opponent's level 3 Digimon to its owner's hand."
		ruling = [
					"Q: Will this card's inherited effect activate when my Digimon is returned to my hand?",
					"A: Yes, it does.",
					"Q: Does this card's inherited effect activate when a card effect allows you to draw and trash card from your hand?",
					"A: Yes, it does.",
					"Q: Does this card's effect activate if my card effect performs a digivolution and draws from its digivolution bonus?",
					"A: No, it is not treated as drawing from an effect.",
]

class BT9_022 extends Card:
	func _init():
		name = "Ebidramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-022"
		play_cost = 3
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Aquatic"
		power = 5000

class BT9_023 extends Card:
	func _init():
		name = "KausGammamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-023"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Dragonkin"
		power = 6000
		effect_text = "[Your Turn] This Digimon can't be blocked."

class BT9_024 extends Card:
	func _init():
		name = "Garurumon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-024"
		play_cost = 5
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beast/X Antibody"
		power = 6000
		inherited_effect_text = "[All Turns] When this digimon has [Garurumon], or [Omnimon] in its name and would be deleted in battle, you may trash 2 cards of the same level in this Digimon's digivolution cards to prevent that deletion."
		ruling = [
					"Q: Does the effect of this card \"By trashing 2 cards with the same level\" require the trashed cards to be the same level as the current Digimon?",
					"A: No, the effect states to trash 2 cards from the digivolution cards that have the same level. For example, by trashing 2 level 5 from the digivolution cards, this Digimon will not be deleted or returned to the deck/hand.",
					"Q: Is it possible to trash this card when activating this card’s inherited effect?",
					"A: Yes, you can.",
					"Q: This card is chosen to be deleted by [BT5-106 Demonic Disaster], if it uses its [All Turns] effect to prevent its deletion do I still get to unsuspend a Digimon?",
					"A: No, you cannot unsuspend a Digimon if the Digimon is not deleted.",
					"Q: My opponent's Digimon with <Piercing> attacked my Digimon, and my Digimon lost the battle. I then activate my Digimon's [All Turns] inherited effect to prevent it from being deleted. What happens to my opponent's <Piercing>?",
					"A: As the requirement of \"when this Digimon attacks and deletes an opponent's Digimon and survives the battle\" of <Piercing> was not met, it does not activate.",
					"Q: My Digimon has <Piercing> gained from an effect such as [BT8-103 Lightning Blade] and battles a Digimon with equal DP. I activate [All Turns] to prevent it from being deleted. Does <Piercing> trigger?",
					"A: Yes, because the Digimon will still have <Piercing> and it deleted a Digimon battle and survived it will trigger.",
					"Q: This card has <Piercing> from [EX1-008 MetalGreymon] in its digivolution cards, this card attacks a Digimon with equal DP and uses its [All Turns] effect to prevent its deletion by trashing [EX1-008 MetalGreymon]. Does <Piercing> still trigger?",
					"A: No, it lost <Piercing> before the timing it would trigger and if it doesn't trigger it cannot activate.",
]

class BT9_025 extends Card:
	func _init():
		name = "TeslaJellymon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-025"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Mollusk"
		power = 6000
		effect_text = "[End of Attack] (Once Per Turn) You may trash 2 cards in your hand to unsuspend this Digimon."

class BT9_026 extends Card:
	func _init():
		name = "Piranimon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-026"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Aquatic"
		power = 7000
		effect_text = "<Rush> (This Digimon can attack the turn it comes into play)."

class BT9_027 extends Card:
	func _init():
		name = "Divermon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-027"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = ""
		digimon_type = "Aquabeast"
		power = 8000
		notes = "Hangyomon"

class BT9_028 extends Card:
	func _init():
		name = "WereGarurumon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT9-028"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beastkin/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] Unsuspend this Digimon. Then, if [WereGarurumon] or [X Antibody] is in this Digimon's digivolution cards, return 1 of your opponent's level 4 or lower Digimon to its owner's hand."
		ruling = [
					"Q: The effect of \"If you have [WereGarurumon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [WereGarurumon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_029 extends Card:
	func _init():
		name = "Suijinmon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT9-029"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 5
		digimon_type = "Machine"
		power = 11000
		effect_text = "(Hand) [Main] If you have a Digimon with [Justimon], or [Raidenmon] in its name in play, you may pay 1 memory to place this card under that Digimon as its bottom digivolution card.\n[When Digivolving] You may trash 1 Digimon card with [Machine], or [Cyborg] in its traits in your hand to place 1 of your opponent's level 4 or lower Digimon to the bottom of its owner's deck."
		inherited_effect_text = "[When Attacking] Return 1 of your opponent's level 4 or lower Digimon to its owner's hand."
		ruling = [
					"Q: When is the timing of this card effect (Hand) [Main] activated?",
					"A: This effect will be activated during the Main Phase, by revealing this card from your hand.",
					"Q: Can I reveal this card in my hand if I don't want to pay 1 memory?",
					"A: Yes, you can reveal this card and not pay the cost. The card will be returned to your hand.",
					"Q: Can I reveal this card in my hand if I don't have a Digimon [Justimon], or [Raidenmon] in its name in play?",
					"A: No, you must fulfil the condition to reveal this card from your hand.",
]

class BT9_030 extends Card:
	func _init():
		name = "MetalPiranimon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-030"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Aquatic/X Antibody"
		power = 11000
		effect_text = "[When Attacking] You may play 1 Digimon card with [Piranimon] in its name from this Digimon's digivolution cards without paying its memory cost."

class BT9_031 extends Card:
	func _init():
		name = "MetalGarurumon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "BT9-031"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Cyborg/X Antibody"
		power = 12000
		effect_text = "[When Digivolving] Unsuspend this Digimon, and it gains <Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead) until the end of your opponent's turn.\n [Your Turn] (Once Per Turn) When this Digimon becomes unsuspended, if [MetalGarurumon] or [X Antibody] is in it's digivolution cards, return all of your opponent's Digimon with the lowest level to their owner's hand."
		ruling = [
					"Q: The effect of \"If you have [MetalGarurumon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [MetalGarurumon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
					"Q: Can this card [Your Turn] effect be activated during my active phase?",
					"A: Yes, you can.",
]

class BT9_032 extends Card:
	func _init():
		name = "ToyAgumon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT9-032"
		play_cost = 2
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Puppet"
		power = 3000

class BT9_033 extends Card:
	func _init():
		name = "Pillomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT9-033"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Mammal"
		power = 2000
		effect_text = "[All Turns] Players can't play Digimon by effects."
		ruling = [
					"Q: Can this Digimon prevent Digimon from being played by the effect of an option card?",
					"A: Yes, it can.",
					"Q: If this Digimon is in the battle area, can play cost be reduced?",
					"A: Yes. This effect only applies to card effects that allows a Digimon to be played in the battle area.",
]

class BT9_034 extends Card:
	func _init():
		name = "Salamon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT9-034"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Mammal/X Antibody"
		power = 3000
		effect_text = "[When Digivolving] Look at the top card of your security stack, and you may add it to you hand. If you do, <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack)."
		ruling = [
					"Q: What will happen if I don’t add the card to my hand, after I check the top card of the security stack?",
					"A: It will remain the top of the security stack.",
]
		notes = "Plotmon X Antibody"

class BT9_035 extends Card:
	func _init():
		name = "Starmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT9-035"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 6000

class BT9_036 extends Card:
	func _init():
		name = "Gatomon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT9-036"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Beast/X Antibody"
		power = 5000
		inherited_effect_text = "[When Attacking] If you have 3 or more security cards, 1 of your opponent's Digimon gets -2000 DP for the turn."
		notes = "Tailmon (X Antibody)"

class BT9_037 extends Card:
	func _init():
		name = "Nefertimon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT9-037"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.FREE
		digimon_type = "Holy Beast"
		power = 5000
		effect_text = "<Armor Purge>  (When this Digimon would be deleted, you may trash the top card of this Digimon to prevent that deletion).\n[When Attacking] 1 of your opponent's Digimon gets -2000 DP for the turn."

class BT9_038 extends Card:
	func _init():
		name = "Pegasusmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT9-038"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.FREE
		digimon_type = "Holy Beast"
		power = 5000
		effect_text = "<Armor Purge>  (When this Digimon would be deleted, you may trash the top card of this Digimon to prevent that deletion).\n[When Digivolving] 1 of your opponent's Digimon gains <Security Attack -1> (This Digimon checks 1 fewer security card) until the end of your opponent's turn."
		notes = "Pegasmon"

class BT9_039 extends Card:
	func _init():
		name = "DarkSuperStarmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT9-039"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 4
		digimon_type = "Mutant"
		power = 9000

class BT9_040 extends Card:
	func _init():
		name = "Angewomon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT9-040"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Archangel"
		power = 8000
		effect_text = "[When Digivolving] 1 of your opponent's Digimon gains <Security Attack -1> (This Digimon checks 1 fewer security card) until the end of your opponent's turn. Then, if [Angewomon] or [X Antibody] is in this Digimon’s digivolution cards and you have 5 or fewer security cards, <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack)."
		ruling = [
					"Q: The effect of \"If you have [Angewomon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [Angewomon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_041 extends Card:
	func _init():
		name = "RizeGreymon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT9-041"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 4
		digivolve_level_2 = 4
		digimon_type = "Cyborg/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] You may play 1 red or yellow Tamer card from your hand without paying it's memory cost. Then, if [RizeGreymon] or [X Antibody] is in this Digimon's digivolution cards, 1 of opponent's Digimon gets -2000 DP for each red or yellow Tamer you have in play for the turn.\n[Your Turn] For each Tamer you have in play, this Digimon gets +1000 DP."
		ruling = [
					"Q: The effect of \"If you have [RizeGreymon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [RizeGreymon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_042 extends Card:
	func _init():
		name = "Raijinmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT9-042"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 5
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "(Hand) [Main] If you have a Digimon in play with [Justimon], or [Raidenmon] in its name, you may pay 1 memory to place this card under that Digimon as its bottom digivolution card.\n[When Digivolving] You may trash 1 card with [Machine], or [Cyborg] in its traits in your hand to have 1 of your opponent's Digimon get -4000 DP for the turn."
		inherited_effect_text = "[When Attacking] 1 of your opponent's Digimon gets -4000 DP for the turn."
		ruling = [
					"Q: When is the timing of this card effect (Hand) [Main] activated?",
					"A: This effect will be activated during the Main Phase, by revealing this card from your hand.",
					"Q: Can I reveal this card in my hand if I don't want to pay 1 memory?",
					"A: Yes, you can reveal this card and not pay the cost. The card will be returned to your hand.",
					"Q: Can I reveal this card in my hand if I don't have a Digimon [Justimon], or [Raidenmon] in its name in play?",
					"A: No, you must fulfil the condition to reveal this card from your hand.",
]

class BT9_043 extends Card:
	func _init():
		name = "Magnadramon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT9-043"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Dragon/Four Great Dragons/X Antibody"
		power = 12000
		effect_text = "[When Digivolving] If [Magnadramon] or [X Antibody] is in this Digimon's digivolution cards, all of your opponent's Digimon and Security Digimon get -1000 DP for the turn for each card in your security stack.\n[End of Attack] (Once Per Turn) You may add the top card of your security stack to your hand to unsuspend this Digimon."
		ruling = [
					"Q: The effect of \"If you have [Magnadramon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [Magnadramon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]
		notes = "Holydramon X Antibody"

class BT9_044 extends Card:
	func _init():
		name = "Magnamon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "BT9-044"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 5
		digimon_type = "Holy Warrior/Royal Knight/X Antibody"
		power = 11000
		effect_text = "[Opponent's Turn] When an opponent's Digimon attacks, if a card with [Armor Form] in its traits or [X Antibody] is in this Digimon's digivolution cards, you may switch the target of an attack to this Digimon.\n[All Turns] When this Digimon would be deleted, you may place the top card of this Digimon on top of your security stack face down to prevent that deletion."
		ruling = [
					"Q: The effect of \"If you have a card with [Armor Form] in its traits or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [Armor Form] in its traits or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_045 extends Card:
	func _init():
		name = "Elecmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-045"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Mammal"
		power = 4000

class BT9_046 extends Card:
	func _init():
		name = "Kokuwamon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT9-046"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Machine/X Antibody"
		power = 2000
		effect_text = "[On Play] [When Digivolving] Reveal the top 3 cards of your deck. Add 1 Digimon card with [Insectoid], or [Machine] in its traits and 1 [X Antibody]  among them to your hand. Place the rest at the bottom of your deck in any order."
		ruling = [
					"Q: By using this card effect, can I add a card with [X Antibody] in its traits to my hand from the 3 revealed cards?",
					"A: No, you can’t because it specifies the card name and you can only add a card with the name [X Antibody] to your hand. It does not apply to cards with [X Antibody] in its traits.",
					"Q: By using this card effect, does it mean that I can’t add both cards unless I add both [Insectoid] in its traits and or [X Antibody]?",
					"A: No, even if you only revealed a card with [Insectoid] in its traits or [X Antibody] you can add it to your hand.",
					"Q: If I reveal cards with [Insectoid] in its traits and or [X Antibody], can I choose not to add them to hand?",
					"A: No because the effect states \"Add to hand\", thus you are required to add as much as possible from the revealed cards. You are required to add cards with [Insectoid] in its traits and 1 [X Antibody] to your hand.",
]

class BT9_047 extends Card:
	func _init():
		name = "Pomumon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-047"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Vegetation"
		power = 2000
		effect_text = "[All Turns] Players can't play Digimon by effects."
		ruling = [
					"Q: If this Digimon is present in the battle area, can I move my Digimon from the breeding area to the battle area  using [BT1-089 Mimi Tachikawa]'s effect?",
					"A: Yes, you can.",
					"Q: If this Digimon is in the battle area, can play cost be reduced?",
					"A: Yes. This effect only applies to card effects that makes a Digimon to be played in the battle area.",
					"Q: Can this Digimon prevent Digimon from being played by the effect of an option card?",
					"A: Yes, it can.",
]

class BT9_048 extends Card:
	func _init():
		name = "Ninjamon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-048"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 6000
		notes = "Igamon"

class BT9_049 extends Card:
	func _init():
		name = "Kuwagamon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-049"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Insectoid/X Antibody"
		power = 6000
		inherited_effect_text = "[Your Turn] While this Digimon has [Insectoid] in its traits, it gains <Piercing> (When this Digimon attacks and deletes an opponent's Digimon and survives the battle, it performs any security checks it normally would)."

class BT9_050 extends Card:
	func _init():
		name = "Leomon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-050"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 2
		digivolve_level_2 = 3
		digimon_type = "Beastkin"
		power = 5000
		effect_text = "[All Turns] When this Digimon would be deleted in battle, you may play 1 [Leomon] from this Digimon's digivolution cards without paying its memory cost."
		ruling = [
					"Q: Can I play a [Leomon (X Antibody)] from this Digimon’s digivolution cards?",
					"A: No, because this card only specifies [Leomon].",
]

class BT9_051 extends Card:
	func _init():
		name = "Panjyamon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT9-051"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 4
		digimon_type = "Beastkin/X Antibody"
		power = 7000
		effect_text = "Treat this card/Digimon as if it also has [Leomon] in its name.\n[All Turns] When this Digimon would be deleted in battle, you may play 1 [Leomon] from this Digimon's digivolution cards without paying its memory cost."
		ruling = [
					"Q: This Digimon is also treated as having [Leomon] in its name. Is it possible to target this card as [Leomon]?",
					"A: No. You can’t target this card as [Leomon] as the card name. This effect can’t be applied to cards with [Leomon] in its name.",
]

class BT9_052 extends Card:
	func _init():
		name = "Okuwamon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT9-052"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Insectoid/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] If [Okuwamon] or [X Antibody] is in this Digimon's digivolution cards, suspend 1 of your opponent's Digimon. Then, if this Digimon is attacking, you may switch the target of the attack to 1 of your opponent's suspended Digimon.\n[Your Turn] When this Digimon would digivolve into a Digimon with [Insectoid] in its traits, reduce the digivolution cost by 1."
		ruling = [
					"Q: The effect of \"If you have [Okuwamon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [Okuwamon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_053 extends Card:
	func _init():
		name = "Zamielmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-053"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = ""
		digimon_type = "Wizard/Big Death-Stars"
		power = 9000

class BT9_054 extends Card:
	func _init():
		name = "Fujinmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT9-054"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 5
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "(Hand) [Main] If you have a Digimon with [Justimon], or [Raidenmon] in its name in play, you may pay 1 memory to place this card under that Digimon as its bottom digivolution card.\n[When Digivolving] You may trash 1 card with [Machine], or [Cyborg] in its traits in your hand to suspend 1 of your opponent's Digimon."
		inherited_effect_text = "[When Attacking] Suspend 1 of your opponent's Digimon with 5000 DP or less. That Digimon does not unsuspend in your opponent's next unsuspend phase."
		ruling = [
					"Q: When is the timing of this card effect (Hand) [Main] activated?",
					"A: This effect will be activated during the Main Phase, by revealing this card from your hand.",
					"Q: Can I reveal this card in my hand if I don't want to pay 1 memory?",
					"A: Yes, you can reveal this card and not pay the cost. The card will be returned to your hand.",
					"Q: Can I reveal this card in my hand if I don't have a Digimon [Justimon], or [Raidenmon] in its name in play?",
					"A: No, you must fulfil the condition to reveal this card from your hand.",
]

class BT9_055 extends Card:
	func _init():
		name = "GrandisKuwagamon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.SR
		id = "BT9-055"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Insectoid/X Antibody"
		power = 12000
		effect_text = "[When Digivolving] Suspend 1 of your opponent's Digimon. Then, if this Digimon is attacking, you may switch the target of the attack to 1 of your opponent's suspended Digimon.\n[Your Turn] This Digimon gets +4000 DP.\n[End of Attack] (Once Per Turn) If [GranKuwagamon] or [X Antibody] is in this Digimon's digivolution cards, suspend 1 of your opponent's Digimon and unsuspend this digimon."
		ruling = [
					"Q: By using this Digimon’s [When Digivolving] effect, can I suspend my opponent’s Digimon and change the attack target to that suspended Digimon by this card effect?",
					"A: Yes, you can.",
					"Q: The effect of \"If you have [GranKuwagamon] or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [GranKuwagamon] or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
					"Q: If my opponent's Digimon has \"This Digimon cannot be attacked.\", can this card's effect change the attack target to that Digimon?",
					"A: Yes, the effect condition only prevents the declaration of an attack on that Digimon.",
]

class BT9_056 extends Card:
	func _init():
		name = "Dinotigermon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT9-056"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color_2 = ""
		digivolve_cost_2 = 4
		digivolve_level_2 = 5
		digimon_type = "Ancient Animal/X Antibody"
		power = 12000
		effect_text = "[When Attacking] If a card with [Leomon] in its name or [X Antibody] is in this Digimon's digivolution cards, suspend 1 of your opponent's Digimon or Tamers.\n[Your Turn] (Once Per Turn) When an opponent's Digimon or Tamer becomes suspended, you may unsuspend this Digimon."
		ruling = [
					"Q: The effect of \"If you have cards with [Leomon] in its name or [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [Leomon] in its name or [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_057 extends Card:
	func _init():
		name = "Bearmon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-057"
		play_cost = 2
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beast"
		power = 3000

class BT9_058 extends Card:
	func _init():
		name = "Dorumon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT9-058"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Beast/X Antibody"
		power = 2000
		effect_text = "[On Play] You may trash 1 card with [X Antibody] in its traits in your hand to <Draw 2> (Draw 2 cards from your deck)."

class BT9_059 extends Card:
	func _init():
		name = "Tapirmon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-059"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 0
		digivolve_level_2 = 2
		digimon_type = "Holy Beast"
		power = 2000
		inherited_effect_text = "[All Turns] While this Digimon has 2 or more colors, this Digimon gets +1000 DP."
		ruling = [
					"Q: Does this inherited effect activate when this Digimon has the effect of \"This Digimon is also treated as red\"?",
					"A: Yes.",
]
		notes = "Bakumon"

class BT9_060 extends Card:
	func _init():
		name = "Grizzlymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-060"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beast"
		power = 5000
		notes = "Grizzmon"

class BT9_061 extends Card:
	func _init():
		name = "Monochromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-061"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color_2 = ""
		digivolve_cost_2 = 2
		digivolve_level_2 = 3
		digimon_type = "Ankylosaur"
		power = 6000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n [When Attacking] Lose 3 memory."

class BT9_062 extends Card:
	func _init():
		name = "Raptordramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-062"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg/X Antibody"
		power = 6000
		inherited_effect_text = "[End of Attack] If this Digimon has [Alphamon] in its name, delete 1  of your opponent's Digimon with a play cost 5 or less."

class BT9_063 extends Card:
	func _init():
		name = "LoaderLeomon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-063"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Machine"
		power = 7000
		ruling = [
					"Q: Does this card have [Leomon] in its name?",
					"A: Yes. This card's Japanese name (ローダーレオモン) has \"Leomon\" (レオモン) in its name.",
]

class BT9_064 extends Card:
	func _init():
		name = "Grademon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT9-064"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Warrior/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] Reveal the top 3 cards of your deck. Add 1 card with [Alphamon] in its name among them to your hand, and place 1 card with [X Antibody] in its traits among them under this Digimon as its bottom digivolution card. Trash the rest."
		inherited_effect_text = "[End of Attack] If this Digimon has [Alphamon] in its name, delete 1  of your opponent's Digimon with a play cost 5 or less."

class BT9_065 extends Card:
	func _init():
		name = "Megadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT9-065"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 4
		digivolve_level_2 = 4
		digimon_type = "Cyborg"
		power = 8000
		effect_text = "[When Digivolving] Delete 1 of your opponent's Digimon or Tamers with a play cost of 3 or less."
		inherited_effect_text = "[When Attacking] If this Digimon has [Machine], or [Dragonkin] in its traits, delete 1 of your opponent's Digimon or Tamers with a play cost of 3 or less."

class BT9_066 extends Card:
	func _init():
		name = "Alphamon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT9-066"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Warrior/Royal Knight/X Antibody"
		power = 11000
		effect_text = "[When Digivolving] Place 1 card with [X Antibody] in its traits from your trash under this Digimon as its bottom digivolution card.\n[Your Turn] (Once Per Turn) When an effect places a digivolution card under this Digimon, <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."

class BT9_067 extends Card:
	func _init():
		name = "Raidenmon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT9-067"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 2
		digivolve_level_2 = 6
		digimon_type = "Machine"
		power = 12000
		effect_text = "[On Play] [When Digivolving] Place 1 [Fujinmon], [Raijinmon], and [Suijinmon] from your trash under this Digimon in any order as its bottom digivolution cards. Gain 1 memory for each card placed.\n[When Attacking] If the level 6 cards in this Digimon's digivolution cards have 3 or more colors among them, this Digimon gain +3000 DP until the end of your opponent's next turn. If they have 4 or more colors, <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."
		ruling = [
					"Q: Does this card’s [When Digivolving] [On Play] effect only activate when there are [Raijinmon], [Suijinmon], and [Fujinmon] in the trash?",
					"A: No, even if you have either 1 of them in the trash the effect still activates.",
					"Q: Does the effect of +3000 DP only activate when there are level 6 Digimon cards with 4 or more colours in its digivolution cards?",
					"A: Yes, you will gain +3000 DP and you can <De-Digivolve  1> on 1 of your opponent's Digimon.",
]

class BT9_068 extends Card:
	func _init():
		name = "Gaiomon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT9-068"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 5
		digivolve_level_2 = 5
		digimon_type = "Dragonkin/X Antibody"
		power = 13000
		effect_text = "The name of this card/Digimon is also treated as having [Greymon] in its name.\n<Security Attack +1> (This Digimon checks 1 additional security card).\n<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase).\n[When Digivolving] If this Digimon has a black digivolution card, <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards). If this Digimon has a red digivolution card, <Blitz> (If your opponent has 1 or more memory, this Digimon may attack)."
		ruling = [
					"Q: Does this card's effect treat this card as having [Greymon] in its name even in the hand, deck, trash, and digivolution cards?",
					"A: Yes.",
					"Q: Does this card's effect treat this card as being [Greymon] in its name even in breeding area?",
					"A: No, as effects do not activate in the breeding area, this card/Digimon is not treated as being [Greymon] in its name in the breeding area.",
					"Q: This Digimon is also treated as having [Greymon] in its name. Does this Digimon count as [Greymon]?",
					"A: No. This Digimon only has [Greymon] in its name, it does not count as being [Greymon].",
					"Q: During the activation of the [When Digivolving] effect, can I use both <Blitz> and <De-Digivolve> when I have both red and black cards in its digivolution cards?",
					"A: Yes.",
					"Q: Does this card have <Blitz> in the deck, when revealed by [BT5-009 Shoutmon]?",
					"A: No, it does not.",
]

class BT9_069 extends Card:
	func _init():
		name = "Baihumon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT9-069"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Holy Beast/Four Sovereigns"
		power = 13000
		effect_text = "[When Digivolving] Unsuspend up to 2 Digimon and/or Tamers. Then, gain 1 memory for each of your opponent's unsuspended Digimon and Tamers.\n[End of Your Turn] (Once Per Turn) For every 2 unsuspended Digimon and/or Tamers your opponent has in play, trash 1 card from the top card of your opponent's security stack."
		ruling = [
					"Q: Can I unsuspend my opponent's suspended Tamer by using this Digimon's [When Digivolving] effect?",
					"A: Yes, you can.",
					"Q: Can I use the [When Digivolving] effect to unsuspend 1 of my Tamers and 1 of my opponent’s Tamers?",
					"A: Yes, you can.",
					"Q: Does the [When Digivolving] effect allow me to unsuspend 2 Tamers and 2 Digimon at the same time?",
					"A: It will be only be 2 in total. It can be done by unsuspending 2 Tamers or 2 Digimon.",
					"Q: Does the [End of Your Turn] effect of trashing my opponent’s security cards only apply for each pair of 1 Tamer and 1 Digimon?",
					"A: No. Divide the total of unsuspended Digimon and Tamer by 2. For example, if there are 3 unsuspended Digimon and 1 unsuspended Tamer, 2 security will be trashed.",
]

class BT9_070 extends Card:
	func _init():
		name = "Gazimon (X Antibody)"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-070"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mammal/X Antibody"
		power = 3000
		effect_text = "[When Digivolving] Trash the top 3 cards of your deck."

class BT9_071 extends Card:
	func _init():
		name = "Dracmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT9-071"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Undead"
		power = 1000
		effect_text = "[On Play] Reveal the top 3 cards of your deck. Trash 1 of them, and add 1 card with [Undead], or [Dark Animal] in its traits among them to your hand. Place the rest at the bottom of your deck in any order."
		inherited_effect_text = "[When Attacking] This Digimon may digivolve into a Digimon card with [Undead], or [Dark Animal] in its traits for its digivolution cost."
		ruling = [
					"Q: When [On Play] effect is activated, does that mean I can only trash cards with [Undead] in its traits or [Dark Animal] in its traits?",
					"A: Yes, you can only add and trash cards with [Undead] in its traits or [Dark Animal] in its traits.",
					"Q: When I activate [On Play] effect, among the revealed cards there is only 1 [Undead] in its traits or [Dark Animal] in its traits. Can I choose to either trash it or add it to my hand?",
					"A: Yes, you can choose to add it or trash it.",
					"Q: Can this inherited effect digivolve into any Digimon that has [Undead] in its traits or [Dark Animal] in its traits in it’s trait?",
					"A: No, you can’t ignore the digivolution requirements with this effect.",
					"Q: If this Digimon digivolves to a Digimon that has the effect of [When Attacking], can I activate [When Attacking] effect?",
					"A: No, because it’s not there during the timing of declaring an attack.",
]

class BT9_072 extends Card:
	func _init():
		name = "Salamon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-072"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digivolve_color_2 = ""
		digivolve_cost_2 = 0
		digivolve_level_2 = 2
		digimon_type = "Mammal"
		power = 2000
		effect_text = "[On Play] Reveal the top 4 cards of your deck. Add 1 2-colored purple card among them to your hand. Place the remaining cards at the bottom of your deck in any order."
		notes = "Plotmon"

class BT9_073 extends Card:
	func _init():
		name = "Sangloupmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-073"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Animal"
		power = 5000
		inherited_effect_text = "[When Attacking] This Digimon may digivolve into a Digimon card with [Undead], or [Dark Animal] in its traits from your trash for its digivolution cards."
		ruling = [
					"Q: Can this inherited effect digivolve into any Digimon that has [Undead] in its traits or [Dark Animal] in its traits in it’s trait?",
					"A: No, you can’t ignore the digivolution requirements with this effect.",
					"Q: If this Digimon digivolves into a Digimon that has the effect of [When Attacking], can I activate [When Attacking] effect?",
					"A: No, because it’s not there during the timing of declaring an attack.",
]

class BT9_074 extends Card:
	func _init():
		name = "Meicoomon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT9-074"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 3
		digimon_type = "Unknown"
		power = 4000
		effect_text = "[Security] At the end of battle, play this card without paying its memory cost."
		inherited_effect_text = "[On Deletion] If this Digimon has 2 or more colors, gain 2 memory."
		ruling = [
					"Q: If this card is a digivolution card of a Digimon with effects such as \"This Digimon is also treated as red\", will the inherited effect activate?",
					"A: Yes, it will.",
]

class BT9_075 extends Card:
	func _init():
		name = "DexDorugamon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-075"
		play_cost = 6
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 3
		digimon_type = "Undead/X Antibody"
		power = 6000
		effect_text = "[When Digivolving] You may trash 1 card with [Dex], or [DeathX] in its name or with [X Antibody] in its traits in your hand to gain 1 memory.\n[When Digivolving] If this Digimon has [Dorugamon] in its digivolution cards or is digivolving from the trash, 1 of your Digimon gains <Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead) and <Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling) until the end of your opponent's turn."
		notes = "Death-X-DORUgamon"

class BT9_076 extends Card:
	func _init():
		name = "Maycrackmon: Vicious Mode"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-076"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digivolve_color_2 = ""
		digivolve_cost_2 = 4
		digivolve_level_2 = 4
		digimon_type = "Unknown"
		power = 6000
		effect_text = "[On Play] [When Digivolving] You may trash 1 card in your hand. If you trash a purple card, delete 1 of your opponent's level 3 Digimon. If you trash a yellow card, 1 of your opponent's Digimon gets -3000 DP for the turn."
		inherited_effect_text = "[On Deletion] If this Digimon has 2 or more colurs, gain 2 memory."
		ruling = [
					"Q: If the card trashed from hand by this card’s [On Play] [When Digivolving] effect was both a yellow and purple dual coloured card, will both effects of \"Delete 1 of opponent’s level 3 Digimon\" and \"During this turn, 1 of your opponent’s Digimon loses -3000 DP\" activate?",
					"A: Yes, since dual coloured card is also treated as both colours, both effects will activate.",
					"Q: If this card is a digivolution card of Digimon with effects such as \"This Digimon is also treated as red\", will the inherited effect activate?",
					"A: Yes, it will.",
]

class BT9_077 extends Card:
	func _init():
		name = "Matadormon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-077"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Undead"
		power = 7000
		effect_text = "[When Attacking] By trash 1 card with [Undead], or [Dark Animal] in its traits from your hand, this Digimon gets +3000 DP for the turn.\n[Your Turn] When this Digimon would digivolve into a Digimon card in your trash, reduce the memory cost of the digivolution by 1."
		ruling = [
					"Q: Can this card’s [Your Turn] effect be used to digivolve from trash?",
					"A: No, this card itself can’t be digivolved by its own effect. This effect can be used with another card’s effect to digivolve from the trash by paying the digivolution cost.",
]
		notes = "Matadrmon"

class BT9_078 extends Card:
	func _init():
		name = "DexDoruGreymon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT9-078"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 4
		digivolve_level_2 = 4
		digimon_type = "Undead/X Antibody"
		power = 8000
		effect_text = "[When Digivolving] You may trash 1 card with [Dex], or [DeathX] in its name or with [X Antibody] in its traits in your hand to gain 1 memory.\n[When Digivolving] If this Digimon has [DoruGreymon] in its digivolution cards, or is digivolving from the trash, delete 1 of your opponent's level 4 of lower Digimon."
		notes = "Death-X-DORUguremon"

class BT9_079 extends Card:
	func _init():
		name = "GranDracmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT9-079"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Animal"
		power = 12000
		effect_text = "[When Digivolving] You may play 1 level purple Digimon card from your trash without paying its memory cost.\n[End of Attack] (Once Per Turn) You may digivolve 1 of your other Digimon in play into a Digimon card with [Undead], or [Dark Animal] in its traits from your trash without paying its memory cost."
		ruling = [
					"Q: Can this Digimon’s [End of Attack] effect digivolve a card into any Digimon that has [Undead] in its traits or [Dark Animal] in its traits?",
					"A: No, you can’t ignore the digivolution requirements with this effect.",
]

class BT9_080 extends Card:
	func _init():
		name = "Raguelmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT9-080"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digivolve_color_2 = ""
		digivolve_cost_2 = 4
		digivolve_level_2 = 5
		digimon_type = "Unknown"
		power = 12000
		effect_text = "[On Play] Play 1 purple or yellow Digimon with 6000 DP or less from your trash without paying its memory cost. If your have 1 of fewer security cards, you may play 1 level 6 or lower Digimon card with [Angel], or [Fallen Angel] in its traits from your trash without paying its memory cost instead.\n[End of Your Turn] You may DNA digivolve this Digimon and one of your other Digimon in play into a Digimon card in your hand by paying its DNA digivolve  cost."
		ruling = [
					"Q: By using the [On Play] effect can I choose to play a Digimon with 6000 DP or less when I have 1 or less security cards?",
					"A: Yes, you can.",
					"Q: This card’s [On Play] effect, when my security is 1 or less. Can I choose to play a Digimon with [Angel] in its traits or [Fallen Angel] in its traits from my trash?",
					"A: Yes, you can.",
]

class BT9_081 extends Card:
	func _init():
		name = "DexDorugoramon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT9-081"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 5
		digivolve_level_2 = 5
		digimon_type = "Undead/X Antibody"
		power = 13000
		effect_text = "[When Digivolving] If this Digimon has [Dorugoramon] in its digivolution cards, or is digivolved from the trash, delete all of your opponent's Digimon with the lowest level.\n[On Deletion] You may play 1 purple or black level 3 Digimon card from your trash without paying its memory cost. If your have 5 or more cards with [Dex], or [DeathX] in their names in your trash, you may play 1 [DeathXmon] from your trash without paying its memory cost instead."
		ruling = [
					"Q: During the activation of this card’s [On Deletion] effect of this card, does this card count as a card with [Dex] in its name in the trash?",
					"A: Yes.",
					"Q: During the activation of this card’s [On Deletion] effect, can I choose to play a purple or black level 3 Digimon when I have 5 or more Digimon with [Dex] in its name in the trash?",
					"A: Yes.",
]
		notes = "Death-X-DORUgoramon"

class BT9_082 extends Card:
	func _init():
		name = "Ordinemon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT9-082"
		play_cost = 15
		level = 7
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 6
		digivolve_level_2 = 6
		digimon_type = "Fallen Angel"
		power = 15000
		effect_text = "[When Digivolving] When DNA digivolving, delete 1 of your opponent's level 6 or higher Digimon and all of their level 5 or lower Digimon. For each Digimon deleted by this effect, <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack).\n[On Deletion] You may trash the top card of your security stack to play this card without paying its memory cost."
		ruling = [
					"Q: Will this Digimon come back into play with its digivolution cards during the activation of its [On Deletion] effect?",
					"A: No, the digivolution cards will remain in the trash. Only this card will come into play.",
					"Q: If this Digimon has an inherited effect with an [On Deletion] effect that was deleted  and then comes into play, can I choose the unresolved effect to be resolved when it comes into play?",
					"A: No, you can’t because this Digimon will be treated as a new Digimon.",
]

class BT9_083 extends Card:
	func _init():
		name = "Omnimon: Merciful Mode"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT9-083"
		play_cost = 15
		level = 7
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 6
		digivolve_level_2 = 6
		digimon_type = "Holy Warrior"
		power = 15000
		effect_text = "[When Digivolving] For each card with [Mega] in their traits in this Digimon's digivolution cards, delete 1 of your opponent's Digimon. Then, place 10 cards in your opponent's trash at the bottom of their deck in any order.\n[Start of Your Turn] Trash the top card of this Digimon. If you do, trash the top card of your opponent's security stack."
		ruling = [
					"Q: Which player chooses the arrangement order and the cards to be returned to the bottom of them?",
					"A: The player of this card chooses.",
					"Q: Is it possible to return a Digi-Egg to the bottom of the deck with this card effect?",
					"A: Yes it is possible to target a Digi-Egg with this effect, however it will be returned to the bottom of the Digi-Egg deck.",
					"Q: When activating the [When Digivolving] effect, if I have 2 Digimon with [Mega] in its traits, does that mean I can return 20 cards to the bottom of the deck?",
					"A: No, you will only return 10 cards to the bottom of your opponent’s deck.",
					"Q: Can the [When Digivolving] effect activate when my opponent has 9 or less trash?",
					"A: Yes, if that is the case do return as much as possible to the bottom of the deck.",
					"Q: Is it possible not to activate [Start of Your Turn] effect of this card?",
					"A: No, this effect is mandatory to be activated.",
					"Q: Does the [Start of Your Turn] effect not activate when my opponent has 0 security cards?",
					"A: No, even if the opponent’s security stack has 0 cards, it will activate. In this case, the security cards of the opponent can’t be trashed, but \"trash the top card of this stack\" will be performed.",
					"Q: What happens if this card has no digivolution cards, does this Digimon still get trashed?",
					"A: No, it cannot be trashed and because of that your opponent does not trash security.",
					"Q: Can I attempt to delete less Digimon than the number of [Mega] in its traits in this Digimon's digivolution cards?",
					"A: No, if there is a valid target and you have not deleted equal to the number of [Mega] in its traits in its digivolution cards you must delete that target.",
]
		notes = "Omegamon: Merciful Mode"

class BT9_084 extends Card:
	func _init():
		name = "Tai Kamiya & Kari Kamiya"
		type = Type.TAMER
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT9-084"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 3 or fewer security cards, gain 1 memory. If your opponent has 3 or fewer security cards, gain 1 memory.\n [Your Turn] When one of your red or yellow Digimon attacks, you may suspend this Tamer to have all of your opponent's Security Digimon get -2000 DP for the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: During the start of the turn, if both my opponent and I each have 3 security card, does that mean I gain 2 memory?",
					"A: Yes, you will gain 2 memory due to the conditions being met.",
]
		notes = "Yagami Taichi & Yagami Hikari"

class BT9_085 extends Card:
	func _init():
		name = "Matt Ishida & Sora Takenouchi"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT9-085"
		play_cost = 4
		effect_text = "[Start of Your Main Phase] If you have 8 or more cards in hand, gain 1 memory. If your opponent has 8 or more cards in hand, gain 1 memory.\n[Your Turn] When one of your blue or red Digimon becomes unsuspended, you may suspend this Tamer to return 1 of your opponent's level 3 Digimon to its owner's hand."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: During the start of the turn, if both my opponent and I each have 8 or more cards in our hands, does that mean I gain 2 memory?",
					"A: Yes, you will gain 2 memory due to the conditions being met.",
					"Q: Does the [Your Turn] effect activate when my red or blue Digimon are active during the Unsuspend Phase?",
					"A: Yes, it is possible.",
]
		notes = "Ishida Yamato & Takenouchi Sora"

class BT9_086 extends Card:
	func _init():
		name = "Kiyoshiro Higashimitarai"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT9-086"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[Your Turn] When you attack with a Digimon with [Jellymon] in its name or is level 5 or higher, if you have 7 or fewer cards in hand, you may suspend this Tamer to <Draw 1> (Draw 1 card from your deck)."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Higashimitarai Kiyoshiro"

class BT9_087 extends Card:
	func _init():
		name = "T.K. Takaishi & Izzy Izumi"
		type = Type.TAMER
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT9-087"
		play_cost = 4
		effect_text = "[Start of Your Main Phase] If you have a level 5 or higher Digimon in play, gain 1 memory. If your opponent has a level 5 or higher Digimon in play, gain 1 memory.\n[Your Turn] When one of your Digimon digivolves into a yellow or green Digimon, you may suspend this Tamer to have 1 of your opponent's Digimon get -1000 DP until the end of your opponent's turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: During the start of the turn, if both my opponent and I each have level 5 or higher Digimon, does that mean I gain 2 memory?",
					"A: Yes, you will gain 2 memory due to the conditions being met.",
]
		notes = "Takaishi Takeru & Izumi Koshiro"

class BT9_088 extends Card:
	func _init():
		name = "Mimi Tachikawa & Joe Kido"
		type = Type.TAMER
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT9-088"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have a suspended Digimon in play, gain 1 memory. If your opponent has a suspended Digimon in play, gain 1 memory.\n [Your Turn] When one of your green or blue Digimon deletes an opponent's Digimon in battle and survives, you may suspend this Tamer to <Draw 1> (Draw 1 card from your deck)."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: During the start of the turn, if both my opponent and I each have a suspended Digimon, does that mean I gain 2 memory?",
					"A: Yes, you will gain 2 memory due to the conditions being met.",
					"Q: If my opponent has a suspended Digimon with <Reboot> or my Digimon is suspended, and becomes unsuspends in my Unsuspend Phase, does this card's [Start of Your Turn] effect gain memory?",
					"A: Yes, it does. [Start of Your Turn] effects are activated before Digimon are unsuspended in the Unsuspend Phase.",
]
		notes = "Tachikawa Mimi & Kido Jo"

class BT9_089 extends Card:
	func _init():
		name = "Daigo Nishijima"
		type = Type.TAMER
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT9-089"
		play_cost = 3
		effect_text = "[All Turns] When an opponent's Digimon becomes unsuspended during a main phase, you may suspend this Tamer to gain 1 memory.\n[Your Turn] When one of your Digimon digivolves into a black level 6 Digimon, it gains <Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead) until the end of your opponent's turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Nishijima Daigo"

class BT9_090 extends Card:
	func _init():
		name = "Maki Himekawa"
		type = Type.TAMER
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT9-090"
		play_cost = 3
		effect_text = "[On Play] Reveal the top 3 cards of your deck. Add 1 [Tapirmon] and 1 2-colur black card among them to your hand. Place the rest at the bottom of your deck in any order.\n[Your Turn] When one of your Digimon would digivolve into a 2-colour black Digimon, you may suspend this Tamer to reduce the digivolution cost by 1."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: Does this effect not allow you to add cards to your hand unless you reveal a [Tapirmon] and a 2-colored black card?",
					"A: No, even you only reveal a [Tapirmon] or a 2-colored black card you can add both cards to your hand.",
					"Q: Can you add a card that has the effect of treating it as another color, such as \"You can treat this card as red\" to your hand?",
					"A: No, you can’t.",
]
		notes = "Himekawa Maki"

class BT9_091 extends Card:
	func _init():
		name = "Meiko Mochizuki"
		type = Type.TAMER
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT9-091"
		play_cost = 3
		effect_text = "[On Play] You may reveal the top 3 cards of your deck. Add 1 purple or yellow Digimon card from among them to your hand. Trash the rest.\n[All Turns] When you play a 2-color purple and yellow Digimon, you may suspend this tamer to gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Mochizuki Meiko"

class BT9_092 extends Card:
	func _init():
		name = "Cool Boy"
		type = Type.TAMER
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT9-092"
		play_cost = 2
		effect_text = "[On Play] Reveal the top 3 cards of your deck. Add 1 Digimon card with [X Antibody] in its traits and 1 Option Card with [X Antibody] in its traits among to your hand. Place the rest at the bottom of your deck in any order.\n[Your Turn] When one of your Digimon digivolves into a same-level Digimon with [X Antibody] in its traits, you may suspend this Tamer to gain 1 memory and <Draw 1> (Draw 1 card from your deck)."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: By using this card's effect, does it mean that I can’t add both cards unless I add both a card with [X Antibody] in its traits and [X Antibody]?",
					"A: No, even if you only reveal a card with [X Antibody] in its traits or [X Antibody], you can add it to your hand.",
					"Q: If I reveal cards with [X Antibody] in its traits and [X Antibody], can I choose not to add them to hand?",
					"A: No because the effect stated \"Add to hand\", thus you are required to add as much as possible from the revealed cards. You are required to add cards with [X Antibody] in its traits and [X Antibody] to your hand.",
]

class BT9_093 extends Card:
	func _init():
		name = "Flare Rock Soul"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT9-093"
		play_cost = 3
		effect_text = "[Main] Delete 1 of your opponent's Digimon with 5000 DP or less. Then, you may digivolve 1 of your Digimon into a Digimon card with [Shoutmon] in its name in your hand for its digivolution cost."
		sec_effect_text = "[Security] Delete 1 of your opponent's Digimon with 5000 DP or less."
		ruling = [
					"Q: By using this card’s [Main] effect, can I digivolve my Digimon to any card with [Shoutmon] in its name by ignoring the digivolution requirements?",
					"A: No, the digivolution requirements still apply.",
]
		notes = "Flare Rock Damashī"

class BT9_094 extends Card:
	func _init():
		name = "Atomic Megalo Blaster"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT9-094"
		play_cost = 6
		effect_text = "[Main] Choose any number of your opponent's Digimon whose total DP adds up to 10000 or less and delete them."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: Can this card’s [Main] effect be stacked with \"Add 1000 to the maximum DP you can choose with DP-based deletion effects\" to make it able to delete a Digimon with 11000 DP or lower?",
					"A: Yes.",
					"Q: The card reads, 'Choose any number of your opponent's Digimon whose total DP adds up to 11000 or less'. What does that actually mean?",
					"A: Choose any number of your opponent’s Digimon so that the total DP of those Digimon adds up to 11000 or less, such as two 3000 DP Digimon and a 5000 DP Digimon, or two DP 4000 Digimon and a DP 3000 Digimon, and then activate the effect on those Digimon",
					"Q: Can I deliberately choose fewer targets so that the total DP is less than 11000?",
					"A: Yes. You are free to choose so long as the total DP is 11000 or less. However, you must choose at least 1 Digimon if your opponent has any Digimon with DP 11000 or less.",
					"Q: If my opponent has [BT4-066 Golemon] and I include Golemon as one of the targeted Digimon my opponent’s other Digimon’s DP will be reduced by 1000 when Golemon is Deleted. Can I include that loss of DP in my calculations when selecting Digimon to target?",
					"A: No. Your opponent’s Digimon’s DP will only be reduced after Golemon is Deleted when this card’s effect has finished activating. You may not choose an additional target at that point",
]

class BT9_095 extends Card:
	func _init():
		name = "Gaia Force ZERO"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT9-095"
		play_cost = 8
		effect_text = "When you would use this card, if you have a Digimon with [X Antibody] in its digivolution cards in play, reduce the memory cost of this card by 2.\n[Main] Delete 1 of your opponent's Digimon with 13000 DP or less. Then, 1 of your Digimon with [Greymon] in its name can attack your opponent."
		sec_effect_text = "[Security] Delete 1 of your opponent's Digimon."
		ruling = [
					"Q: With this card’s [Main] effect, can I choose my suspended Digimon with [Greymon] in its name to attack the player?",
					"A: No, you can’t.",
					"Q: The effect of \"If you have [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
					"Q: By using the [Main] effect to perform an attack, does the [When Attacking] effect of the attacking Digimon activate?",
					"A: Yes, it does.",
					"Q: When using this card’s [Main] effect, If I have a card effect that allows me to attack my opponent’s active Digimon, can I choose to attack the active Digimon instead?",
					"A: No, you can’t. This card’s effect only allows you to attack the opponent.",
]

class BT9_096 extends Card:
	func _init():
		name = "Startling Thunder"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT9-096"
		play_cost = 4
		effect_text = "[Main] Return 1 of your opponent's level 4 or lower Digimon to its owner's hand. Then, if you have a  Digimon in play with [Jellymon] in its name or with [Jellymon] in its digivolution cards, return 1 of your opponent's Tamers to its owner's hand."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Bibi Thunder"

class BT9_097 extends Card:
	func _init():
		name = "Metal Storm"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT9-097"
		play_cost = 7
		effect_text = "When you would use this card, if you have a Digimon with [X Antibody] in its digivolution cards, reduce the memory cost of this card by 2.\n[Main] Return 1 of your opponent's level 6 or lower Digimon to its owner's hand. Then, unsuspend 1 of your Digimon with [Garurumon] in its name."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: The effect of \"If you have [X Antibody] in its digivolution cards\" does that mean I can activate the effect, if I have cards with [X Antibody] in their traits in its digivolution cards?",
					"A: No, you can’t because this effect specifies the card name and it’s required to meet the condition you have cards with [X Antibody] in its digivolution cards. It does not refer to the traits of the cards.",
]

class BT9_098 extends Card:
	func _init():
		name = "Awakening of the Golden Knight"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT9-098"
		play_cost = 3
		effect_text = "While you have a Digimon with [Armor Form] in its traits in play, you may use this card without meeting its color requirements.\n[Main] You may may digivolve 1 of your Digimon with [Armor Form] in its traits into a Digimon card with [Magnamon] in its name in your hand, ignoring its digivolution requirements and without paying its memory cost. The Digimon that digivolved with this effect can't have its DP reduced by your opponent's card effects until the end of your opponent's turn."
		sec_effect_text = "[Security] Return 1 card with [Magnamon] in its name from your trash to your hand, and add this card to your hand."

class BT9_099 extends Card:
	func _init():
		name = "Sunrise Buster"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT9-099"
		play_cost = 5
		effect_text = "[Main] You may play 1 yellow or red Tamer card from your hand without paying for its memory cost. Then, 1 of your opponent's Digimon gets -3000 DP for the turn for each yellow and/or red Tamers you have in play,"
		sec_effect_text = "[Security] Activate this card's [Main] effect."

class BT9_100 extends Card:
	func _init():
		name = "Grandis Scissor"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT9-100"
		play_cost = 4
		effect_text = "[Main] Suspend 1 of your opponent's Digimon. Then, unsuspend 1 of your Digimon with [Insectoid] in its traits, and it may attack your opponent's Digimon."
		sec_effect_text = "[Security] Suspend 1 of your opponent's Digimon or Tamers."

class BT9_101 extends Card:
	func _init():
		name = "Ground Fang"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT9-101"
		play_cost = 8
		effect_text = "[Main] Return 1 of your opponent's suspended Digimon and 1 of their suspended Tamers to the bottom of their owners' decks."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: Can this card effect activate even if my opponent only has 1 suspended Digimon or Tamer?",
					"A: Yes, it is possible.",
]

class BT9_102 extends Card:
	func _init():
		name = "Attack of the Heavy Mobile Digimon!"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = ""
		id = "BT9-102"
		play_cost = 0
		effect_text = "[Main] You may trash 1 card with [Cyborg], or [Machine] in its traits from your hand to have all of your level 6 Digimon with [Machine] in their traits gain <Rush> (This Digimon can attack the turn it comes into play) and \"[On Play] If this Digimon has a digivolution card, <Blitz> (If your opponent has 1 or more memory, this Digimon may attack)\", for the turn."
		sec_effect_text = "[Security] You may trash 1 card with [Cyborg], or [Machine] in its traits in your hand to delete 1 of your opponent's Digimon whose play cost less than or equal to the trashed card's play cost."
		ruling = [
					"Q: After using this card if there is a Digimon that digivolves into a level 6 Digimon with [Machine] in its traits during the turn it was played, or when a level 6 Digimon with [Machine] in its traits comes into play, will that Digimon activate <Blitz> and gain <Rush>?",
					"A: Yes, as long the conditions are met. It will activate <Blitz> and gain <Rush>.",
]

class BT9_103 extends Card:
	func _init():
		name = "Kongou"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-103"
		play_cost = 2
		effect_text = "[Main] Until the end of your opponent's turn, your opponent's Digimon with play costs of 7 or less can't attack players, and cards can't be added security stacks by your opponent's effects."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: Does the effect of \"Your opponent can’t increase either players' security\" only apply to your opponent’s Digimon with 7 play cost or lower?",
					"A: No, it doesn’t. This effect applies to all levels. The part of opponent Digimon with 7 play cost or lower applies to the effect of \"Can’t attack the player\".",
]

class BT9_104 extends Card:
	func _init():
		name = "X Digivolution!"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT9-104"
		play_cost = 3
		effect_text = "While you have a Digimon with [X Antibody] in its traits in play, you may use this card without meeting its color requirements.\n[Main] Reveal the top 3 cards of your deck. You may digivolve 1 of your Digimon into a Digimon card with [X Antibody] in its traits without its memory cost. Trash the rest. Then, place 1 card with [X Antibody] in its traitsfrom your trash under 1 of your Digimon with [X Antibody] in its traits as its bottom digivolution card."
		sec_effect_text = "[Security] You may reveal the top 3 cards of your deck. You may add 1 card with [X Antibody] in its traits among them to your hand. Trash the rest."
		ruling = [
					"Q: By using this card’s [Main] effect, can I digivolve my Digimon in to any card with [X Antibody] in its traits by ignoring the digivolution requirements?",
					"A: No, the digivolution requirements still apply.",
]
		notes = "X Evolution!!"

class BT9_105 extends Card:
	func _init():
		name = "Soul Digitalization"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT9-105"
		play_cost = 5
		effect_text = "[Main] Reveal the top 3 cards of your deck. Choose 1 Digimon card with [X Antibody] in its traits among them, and delete 1 of your opponent’s Digimon whose play cost is less than or equal to the chosen card's play cost. Trash the revealed cards. Then, place 1 card with [X Antibody] in its traits from your trash under 1 of your Digimon with [X Antibody] in its traits as its bottom digivolution card."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: Is it possible to place the card with [X Antibody] in its traits that was revealed by this card effect and trashed, at the bottom of 1 of your Digimon’s digivolution cards?",
					"A: Yes, it is possible.",
]
		notes = "Digitalize of Soul"

class BT9_106 extends Card:
	func _init():
		name = "DeathXDigivolution!"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-106"
		play_cost = 0
		effect_text = "While you have a Digimon with [X Antibody] in its traits in play, you may use this card in your hand ignoring its color requirements.\n[Main] You may digivolve 1 of your Digimon into a Digimon card with [Dex], or [DeathX] in its name from your trash by paying its memory cost."
		sec_effect_text = "[Security] Add this card to its owner's hand."
		ruling = [
					"Q: By using this card’s [Main] effect, can I digivolve my Digimon to any card with [Dex], or [DeathX] in its name by ignoring the digivolution requirements?",
					"A: No, the digivolution requirements still apply.",
					"Q: By digivolving with this cards effect, is it possible to reduce the digivolution cost?",
					"A: Yes, it’s possible if the conditions are met.",
]
		notes = "Death-X-Evolution!!"

class BT9_107 extends Card:
	func _init():
		name = "Metal Impulse"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT9-107"
		play_cost = 6
		effect_text = "[Main] Trash up to 3 cards in your hand. For each card trashed by this card's effect, <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards). Then, delete 1 of your opponent's level 4 or lower Digimon."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: During the activation of the [Main] effect if I trash 2 cards from my hand, can I <De-Digivolve  1> on 2 of your opponent's Digimon?",
					"A: No, you can’t. It only applied to 1 Digimon. For the effect \"Then, \" you can select another Digimon other than the selected Digimon for <De-Digivolve  1> on 1 of your opponent's Digimon.",
					"Q: During the activation of the [Main] effect if I trash 2 cards from my hand, will I <De-Digivolve  1> on 1 of your opponent's Digimon twice or <De-Digivolve  1> on 2 of your opponent's Digimon?",
					"A: <De-Digivolve  1> on 1 of your opponent's Digimon will be activated twice. If your opponent Digimon <De-Digivolve>s to a Digimon with [All Turns] or [Opponent's Turn] effect, it can be activated right after it <De-Digivolve>s into it. If it becomes a Tamer, <De-Digivolve> will not occur. If it becomes a level 2 Digimon, <De-Digivolve> will stop and it will be trashed.",
]

class BT9_108 extends Card:
	func _init():
		name = "Eye of the Gorgon"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT9-108"
		play_cost = 8
		effect_text = "[Main] Delete 1 of your opponent's unsuspended Digimon. If you do, you may play 1 purple level 3 Digimon card from your trash without paying its memory cost. Any [On Play] effects on the Digimon played with this effect don't activate."
		sec_effect_text = "[Security] Activate this card's [Main] effect."

class BT9_109 extends Card:
	func _init():
		name = "X Antibody"
		type = Type.OPTION
		color = ColorGroup.WHITE
		rarity = Rarity.U
		id = "BT9-109"
		play_cost = 0
		effect_text = "While you have a Digimon in play, you may use this card without meeting its color requirements.\n[Security] Gain 1 memory, and add this card to its owner's hand.\n[Main] Place this card under 1 of your Digimon without [X Antibody] in its digivolution cards as its bottom digivolution card."
		sec_effect_text = "[All Turns] Effects can't trash [X Antibody] in this Digimon's digivolution cards.\n[When Attacking] This Digimon can digivolve into a Digimon card with [X Antibody] in its traits in your hand by paying its digivolution cost."
		ruling = [
					"Q: This card is an option card, but it has inherited effect?",
					"A: Yes, the [Main] effect allows it to be placed into 1 of your Digimon digivolution cards. Like Digimon and Digi-Egg cards, this card can activate it’s inherited effect when it’s in its digivolution cards.",
					"Q: By using this card’s [Main] effect, can I digivolve my Digimon to any card with [X Antibody] in its traits by ignoring the digivolution requirements?",
					"A: No, the digivolution requirements still apply.",
					"Q: By digivolving with this card effect, is it possible to reduce the digivolution cost?",
					"A: Yes, it’s possible if the conditions are met.",
					"Q: Can this card be trashed with the effect of <Digi-Burst> ?",
					"A: It can't be trashed by <Digi-Burst> effect due to its effect.",
					"Q: What will happen if this card becomes the top card of a Digimon due to <De-Digivolve> effect?",
					"A: It’s like level 2 Digimon, this card can’t exist in the battle area, thus it will be trashed. If there are digivolution cards beneath this card, they will be trashed as well.",
					"Q: What will happen if my opponent card effect such as \"trash 2 digivolution cards from the bottom of 1 of your opponent Digimon\" when this card is at the bottom of the digivolution cards?",
					"A: This card can’t be trashed, however the card above this card will be trashed.",
]

class BT9_110 extends Card:
	func _init():
		name = "X Program"
		type = Type.OPTION
		color = ColorGroup.WHITE
		rarity = Rarity.U
		id = "BT9-110"
		play_cost = 8
		effect_text = "While you have a Digimon with [Dex], or [DeathX] in its name in play, you may use this card without meeting its color requirements.\n[Main] Delete 1 Digimon without [X Antibody] in its traits. If there are 3 or more Digimon in play, delete all Digimon without [X Antibody] in their traits instead."
		sec_effect_text = "[Security] Delete 1 Digimon without [X Antibody] in its traits."
		ruling = [
					"Q: Does the effect of \"If both players have 3 or more Digimon in play in total\" include both you and your opponent?",
					"A: Yes.",
					"Q: When both players have 3 or more Digimon, is it possible to only delete 1 Digimon without with [X Antibody] in its traits?",
					"A: No, all Digimon without [X Antibody] in its traits will be deleted.",
]

class BT9_111 extends Card:
	func _init():
		name = "Alphamon: Ouryuken"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SEC
		id = "BT9-111"
		play_cost = 15
		level = 7
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "NO DATA/Royal Knight/X Antibody"
		power = 16000
		effect_text = "[When Digivolving] Delete all of your opponent's Digimon with the highest play cost.\n[End of Your Turn] (Once Per Turn) You may return up to 7 non-Digi-Egg cards with [X Antibody] in their traits from this Digimon's digivolution cards to the bottom of your deck in any order, if you do, gain 1 memory for each card returned."
		ruling = [
					"Q: By using the [End of Your Turn] effect, if the memory returns to your side from your opponent’s side, will it be considered as the changing from your turn to your opponent's turn, and then to your turn again?",
					"A: No, your current turn will resume without a turn change.",
					"Q: Can I return [BT9-109 X Antibody] from this Digimon’s digivolution cards to the bottom of the deck when using [End of Your Turn] effect?",
					"A: Yes, you can because it’s not considered trashing.",
					"Q: What happens if I have activated [BT1-090 Gravity Crush] in the same turn as I activate this card's [End of Your Turn] effect?",
					"A: You would resolve both the lose 2 memory effect of Gravity Crush and the [End of Your Turn] effect of this card. If after both have resolved, the memory is at 0 or more on your side. Your Main Phase will continue, if the turn would end again Gravity Crush will trigger again. The same will apply for any other [End of Your Turn], [End of All Turns], and [End of Opponent's Turn] effects. (For more information see End of Turn Procedures)",
]

class BT9_112 extends Card:
	func _init():
		name = "DeathXmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SEC
		id = "BT9-112"
		play_cost = 20
		level = 7
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 6
		digivolve_level_2 = 6
		digimon_type = "Unanalyzable/X Program"
		power = 15000
		effect_text = "When you would play this card, reduce its memory cost by 3 for each Digimon and Tamer your opponent has in play.\n[On Play] [When Digivolving] <De-Digivolve  1> on all of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards). Then, delete all of your opponent's level 4 or lower Digimon.\n[End of Opponent's Turn] (Once Per Turn) Delete all of your opponent's Digimon with the lowest play cost."
		ruling = [
					"Q: When this card comes into play, do I reduce 3 cost for each pair of your opponent’s Digimon and Tamers?",
					"A: No, it counts the overall total of your opponent’s Digimon and Tamer. If your opponent has 2 Digimon and 1 Tamer, the cost reduction will be 9.",
					"Q: Can this card's effect delete Level 2 Digimon before they get trashed by Rules Processing?",
					"A: Yes, after this card has <De-Digivolve> a Digimon into a Level 2 Digimon, it will be deleted by this effect before it gets trashed.",
]

