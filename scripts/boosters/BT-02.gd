# Content autogenerated. Data from digimoncardgame.fandom.com

static func register_cards():

	CardDB.register_booster("BT-02", "BT-02: Ultimate Power")
	CardDB.add_card(BT2_001.new())
	CardDB.add_card(BT2_002.new())
	CardDB.add_card(BT2_003.new())
	CardDB.add_card(BT2_004.new())
	CardDB.add_card(BT2_005.new())
	CardDB.add_card(BT2_006.new())
	CardDB.add_card(BT2_007.new())
	CardDB.add_card(BT2_008.new())
	CardDB.add_card(BT2_009.new())
	CardDB.add_card(BT2_009_B.new())
	CardDB.add_card(BT2_010.new())
	CardDB.add_card(BT2_011.new())
	CardDB.add_card(BT2_012.new())
	CardDB.add_card(BT2_012_B.new())
	CardDB.add_card(BT2_013.new())
	CardDB.add_card(BT2_013_B.new())
	CardDB.add_card(BT2_013_C.new())
	CardDB.add_card(BT2_014.new())
	CardDB.add_card(BT2_015.new())
	CardDB.add_card(BT2_015_B.new())
	CardDB.add_card(BT2_016.new())
	CardDB.add_card(BT2_017.new())
	CardDB.add_card(BT2_017_B.new())
	CardDB.add_card(BT2_018.new())
	CardDB.add_card(BT2_019.new())
	CardDB.add_card(BT2_020.new())
	CardDB.add_card(BT2_020_B.new())
	CardDB.add_card(BT2_021.new())
	CardDB.add_card(BT2_022.new())
	CardDB.add_card(BT2_023.new())
	CardDB.add_card(BT2_024.new())
	CardDB.add_card(BT2_025.new())
	CardDB.add_card(BT2_025_B.new())
	CardDB.add_card(BT2_026.new())
	CardDB.add_card(BT2_027.new())
	CardDB.add_card(BT2_027_B.new())
	CardDB.add_card(BT2_028.new())
	CardDB.add_card(BT2_028_B.new())
	CardDB.add_card(BT2_029.new())
	CardDB.add_card(BT2_030.new())
	CardDB.add_card(BT2_030_B.new())
	CardDB.add_card(BT2_031.new())
	CardDB.add_card(BT2_032.new())
	CardDB.add_card(BT2_032_B.new())
	CardDB.add_card(BT2_033.new())
	CardDB.add_card(BT2_034.new())
	CardDB.add_card(BT2_034_B.new())
	CardDB.add_card(BT2_035.new())
	CardDB.add_card(BT2_036.new())
	CardDB.add_card(BT2_036_B.new())
	CardDB.add_card(BT2_037.new())
	CardDB.add_card(BT2_037_B.new())
	CardDB.add_card(BT2_038.new())
	CardDB.add_card(BT2_038_B.new())
	CardDB.add_card(BT2_038_C.new())
	CardDB.add_card(BT2_039.new())
	CardDB.add_card(BT2_040.new())
	CardDB.add_card(BT2_041.new())
	CardDB.add_card(BT2_041_B.new())
	CardDB.add_card(BT2_042.new())
	CardDB.add_card(BT2_043.new())
	CardDB.add_card(BT2_044.new())
	CardDB.add_card(BT2_045.new())
	CardDB.add_card(BT2_046.new())
	CardDB.add_card(BT2_047.new())
	CardDB.add_card(BT2_047_B.new())
	CardDB.add_card(BT2_048.new())
	CardDB.add_card(BT2_049.new())
	CardDB.add_card(BT2_049_B.new())
	CardDB.add_card(BT2_050.new())
	CardDB.add_card(BT2_051.new())
	CardDB.add_card(BT2_052.new())
	CardDB.add_card(BT2_053.new())
	CardDB.add_card(BT2_053_B.new())
	CardDB.add_card(BT2_053_C.new())
	CardDB.add_card(BT2_054.new())
	CardDB.add_card(BT2_055.new())
	CardDB.add_card(BT2_056.new())
	CardDB.add_card(BT2_057.new())
	CardDB.add_card(BT2_057_B.new())
	CardDB.add_card(BT2_058.new())
	CardDB.add_card(BT2_058_B.new())
	CardDB.add_card(BT2_059.new())
	CardDB.add_card(BT2_060.new())
	CardDB.add_card(BT2_061.new())
	CardDB.add_card(BT2_061_B.new())
	CardDB.add_card(BT2_062.new())
	CardDB.add_card(BT2_063.new())
	CardDB.add_card(BT2_063_B.new())
	CardDB.add_card(BT2_064.new())
	CardDB.add_card(BT2_065.new())
	CardDB.add_card(BT2_065_B.new())
	CardDB.add_card(BT2_066.new())
	CardDB.add_card(BT2_066_B.new())
	CardDB.add_card(BT2_067.new())
	CardDB.add_card(BT2_068.new())
	CardDB.add_card(BT2_068_B.new())
	CardDB.add_card(BT2_069.new())
	CardDB.add_card(BT2_069_B.new())
	CardDB.add_card(BT2_070.new())
	CardDB.add_card(BT2_071.new())
	CardDB.add_card(BT2_072.new())
	CardDB.add_card(BT2_072_B.new())
	CardDB.add_card(BT2_073.new())
	CardDB.add_card(BT2_073_B.new())
	CardDB.add_card(BT2_074.new())
	CardDB.add_card(BT2_074_B.new())
	CardDB.add_card(BT2_075.new())
	CardDB.add_card(BT2_076.new())
	CardDB.add_card(BT2_077.new())
	CardDB.add_card(BT2_077_B.new())
	CardDB.add_card(BT2_077_C.new())
	CardDB.add_card(BT2_078.new())
	CardDB.add_card(BT2_078_B.new())
	CardDB.add_card(BT2_079.new())
	CardDB.add_card(BT2_080.new())
	CardDB.add_card(BT2_080_B.new())
	CardDB.add_card(BT2_081.new())
	CardDB.add_card(BT2_081_B.new())
	CardDB.add_card(BT2_082.new())
	CardDB.add_card(BT2_082_B.new())
	CardDB.add_card(BT2_083.new())
	CardDB.add_card(BT2_083_B.new())
	CardDB.add_card(BT2_084.new())
	CardDB.add_card(BT2_084_B.new())
	CardDB.add_card(BT2_084_C.new())
	CardDB.add_card(BT2_085.new())
	CardDB.add_card(BT2_085_B.new())
	CardDB.add_card(BT2_085_C.new())
	CardDB.add_card(BT2_086.new())
	CardDB.add_card(BT2_087.new())
	CardDB.add_card(BT2_087_B.new())
	CardDB.add_card(BT2_087_C.new())
	CardDB.add_card(BT2_088.new())
	CardDB.add_card(BT2_089.new())
	CardDB.add_card(BT2_089_B.new())
	CardDB.add_card(BT2_089_C.new())
	CardDB.add_card(BT2_090.new())
	CardDB.add_card(BT2_090_B.new())
	CardDB.add_card(BT2_090_C.new())
	CardDB.add_card(BT2_091.new())
	CardDB.add_card(BT2_092.new())
	CardDB.add_card(BT2_093.new())
	CardDB.add_card(BT2_094.new())
	CardDB.add_card(BT2_095.new())
	CardDB.add_card(BT2_096.new())
	CardDB.add_card(BT2_097.new())
	CardDB.add_card(BT2_098.new())
	CardDB.add_card(BT2_099.new())
	CardDB.add_card(BT2_100.new())
	CardDB.add_card(BT2_101.new())
	CardDB.add_card(BT2_102.new())
	CardDB.add_card(BT2_103.new())
	CardDB.add_card(BT2_104.new())
	CardDB.add_card(BT2_105.new())
	CardDB.add_card(BT2_106.new())
	CardDB.add_card(BT2_107.new())
	CardDB.add_card(BT2_108.new())
	CardDB.add_card(BT2_109.new())
	CardDB.add_card(BT2_110.new())
	CardDB.add_card(BT2_111.new())
	CardDB.add_card(BT2_111_B.new())
	CardDB.add_card(BT2_112.new())
	CardDB.add_card(BT2_112_B.new())

class BT2_001 extends Card:
	func _init():
		name = "Gigimon"
		type = Type.DIGITAMA
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-001"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] While there are 5 or more cards in your opponent's trash, this Digimon gets +1000 DP."

class BT2_002 extends Card:
	func _init():
		name = "DemiVeemon"
		type = Type.DIGITAMA
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT2-002"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Baby Dragon"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When this Digimon becomes unsuspended during your main phase, it gets +1000 DP for the turn."
		ruling = [
					"Q: I have a Digimon with this card in its digivolution cards. If that Digimon is already unsuspended, does an effect that reads \"unsuspend 1 of your Digimon\" activate this card's inherited effect?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
					"Q: Does this card have [Vee] in its name?",
					"A: No. This card's Japanese name (チビモン) does not have \"Vee\" (ブイ) in its name.",
]
		notes = "Chibimon"

class BT2_003 extends Card:
	func _init():
		name = "Nyaromon"
		type = Type.DIGITAMA
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-003"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Opponent's Turn] While this Digimon is suspended, all of your Security Digimon get +1000 DP."

class BT2_004 extends Card:
	func _init():
		name = "Argomon"
		type = Type.DIGITAMA
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT2-004"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Mutant"
		inherited_effect_text = "[Your Turn] When this Digimon becomes unsuspended during your unsuspend phase, gain 1 memory."
		ruling = [
					"Q: I have a Digimon with this card in its digivolution cards. If that Digimon is already unsuspended, does this card's inherited effect activate during my unsuspend phase?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
]

class BT2_005 extends Card:
	func _init():
		name = "Kapurimon"
		type = Type.DIGITAMA
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-005"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] While this Digimon has <Reboot>, it gets +1000 DP."

class BT2_006 extends Card:
	func _init():
		name = "Tsumemon"
		type = Type.DIGITAMA
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-006"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Unidentified"
		inherited_effect_text = "[Your Turn] While you have another Digimon in play with the same name as this Digimon, this Digimon gets +2000 DP."
		ruling = [
					"Q: What counts as \"another Digimon in play with the same name as this Digimon\"? Does this only count if I have another Digimon in play named [Tsumemon]?",
					"A: No. This effect doesn't refer to [Tsumemon], but to the name of the Digimon on top with this card as its digivolution cards.",
]

class BT2_007 extends Card:
	func _init():
		name = "Pagumon"
		type = Type.DIGITAMA
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-007"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[When Attacking] Trash the top card of your deck."

class BT2_008 extends Card:
	func _init():
		name = "Yaamon"
		type = Type.DIGITAMA
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-008"
		level = 2
		stage_level = Stage.HYBRID
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] While you have 5 or more cards in your trash, this Digimon gets +1000 DP."

class BT2_009 extends Card:
	func _init():
		name = "Guilmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-009"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Reptile"
		power = 3000
		inherited_effect_text = "[Your Turn] While there are 5 or more cards in your opponent's trash, this Digimon gets +1000 DP."

class BT2_009_B extends Card:
	func _init():
		name = "Guilmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-009 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Reptile"
		power = 3000
		inherited_effect_text = "[Your Turn] While there are 5 or more cards in your opponent's trash, this Digimon gets +1000 DP."
		is_parallel = true
		notes = "parallel promo"

class BT2_010 extends Card:
	func _init():
		name = "Biyomon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-010"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Bird"
		power = 2000
		effect_text = "[On Deletion] If it's your turn, gain 1 memory."
		notes = "Piyomon"

class BT2_011 extends Card:
	func _init():
		name = "Vorvomon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-011"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Rock Dragon"
		power = 5000

class BT2_012 extends Card:
	func _init():
		name = "Birdramon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-012"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Giant Bird"
		power = 3000
		effect_text = "[When Attacking] When this Digimon attacks a player, it gets +4000 DP for the turn."
		ruling = [
					"Q: I attack my opponent with this Digimon. If they block it with one of their Digimon, does this Digimon's effect activate?",
					"A: Yes. The effect was activated before your opponent blocked it. (See more in Attack Resolution)",
]

class BT2_012_B extends Card:
	func _init():
		name = "Birdramon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-012 (B)"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Giant Bird"
		power = 3000
		effect_text = "[When Attacking] When this Digimon attacks a player, it gets +4000 DP for the turn."
		ruling = [
					"Q: I attack my opponent with this Digimon. If they block it with one of their Digimon, does this Digimon's effect activate?",
					"A: Yes. The effect was activated before your opponent blocked it. (See more in Attack Resolution)",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_013 extends Card:
	func _init():
		name = "Growlmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-013"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Dragon"
		power = 4000
		inherited_effect_text = "[When Attacking] Delete 1 of your opponent's Digimon with 2000 DP or less."
		notes = "Growmon"

class BT2_013_B extends Card:
	func _init():
		name = "Growlmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-013 (B)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Dragon"
		power = 4000
		inherited_effect_text = "[When Attacking] Delete 1 of your opponent's Digimon with 2000 DP or less."
		is_parallel = true
		notes = "parallel promo Growmon"

class BT2_013_C extends Card:
	func _init():
		name = "Growlmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-013 (C)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Dragon"
		power = 4000
		inherited_effect_text = "[When Attacking] Delete 1 of your opponent's Digimon with 2000 DP or less."
		is_parallel = true
		notes = "parallel promo Growmon"

class BT2_014 extends Card:
	func _init():
		name = "Lavorvomon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-014"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Rock Dragon"
		power = 6000

class BT2_015 extends Card:
	func _init():
		name = "Garudamon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-015"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Birdkin"
		power = 7000
		effect_text = "[When Attacking] When this Digimon attacks a player, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: I attack my opponent with this Digimon. If they block it with one of their Digimon, does this Digimon's effect activate?",
					"A: Yes. The effect was activated before your opponent blocked it. (See more in Attack Resolution)",
]

class BT2_015_B extends Card:
	func _init():
		name = "Garudamon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-015 (B)"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Birdkin"
		power = 7000
		effect_text = "[When Attacking] When this Digimon attacks a player, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: I attack my opponent with this Digimon. If they block it with one of their Digimon, does this Digimon's effect activate?",
					"A: Yes. The effect was activated before your opponent blocked it. (See more in Attack Resolution)",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_016 extends Card:
	func _init():
		name = "Lavogaritamon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-016"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Rock Dragon"
		power = 8000

class BT2_017 extends Card:
	func _init():
		name = "WarGrowlmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-017"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Cyborg"
		power = 8000
		effect_text = "[When Digivolving] If you have a red Tamer in play, delete 1 of your opponent's Digimon with 3000 DP or less."
		inherited_effect_text = "[Your Turn] While there are 5 or more cards in your opponent's trash, this Digimon gets +1000 DP."
		notes = "MegaloGrowmon"

class BT2_017_B extends Card:
	func _init():
		name = "WarGrowlmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-017 (B)"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Cyborg"
		power = 8000
		effect_text = "[When Digivolving] If you have a red Tamer in play, delete 1 of your opponent's Digimon with 3000 DP or less."
		inherited_effect_text = "[Your Turn] While there are 5 or more cards in your opponent's trash, this Digimon gets +1000 DP."
		is_parallel = true
		notes = "parallel promo MegaloGrowmon"

class BT2_018 extends Card:
	func _init():
		name = "Volcanicdramon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-018"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Earth Dragon"
		power = 10000
		effect_text = "<Security Attack +1> (This Digimon checks 1 additional security card).\n[On Play] Delete all of your opponent's Digimon with 4000 DP or less."

class BT2_019 extends Card:
	func _init():
		name = "Phoenixmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-019"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Beast"
		power = 11000
		effect_text = "[When Attacking] When this Digimon attacks a player, gain 1 memory."
		ruling = [
					"Q: I attack my opponent with this Digimon. If they block it with one of their Digimon, does this Digimon's effect activate?",
					"A: Yes. The effect was activated before your opponent blocked it. (See more in Attack Resolution)",
]
		notes = "Hououmon"

class BT2_020 extends Card:
	func _init():
		name = "Gallantmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT2-020"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Holy Warrior/Royal Knight"
		power = 11000
		effect_text = "[When Digivolving] If you have a red Tamer in play, delete 1 of your opponent's Digimon with 6000 DP or less.\n[When Attacking] Trash 1 of your opponent's security cards for every 10 cards in their trash."
		ruling = [
					"Q: I use this card's [When Attacking] effect to trash my opponent's Security Cards. Do the [Security] effects on those cards activate?",
					"A: No. They weren't flipped over in a security check, so they don't activate.",
					"Q: My opponent has 1 or more cards in their security stack. I attack my opponent with this Digimon and its [When Attacking] effect trashes the rest of their security cards, leaving them with zero cards in their security stack. If the attack isn't blocked and my attack is successful when they have zero cards in their security stack, do I win the game?",
					"A: Yes, you do.",
]
		notes = "Dukemon"

class BT2_020_B extends Card:
	func _init():
		name = "Gallantmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT2-020 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Holy Warrior/Royal Knight"
		power = 11000
		effect_text = "[When Digivolving] If you have a red Tamer in play, delete 1 of your opponent's Digimon with 6000 DP or less.\n[When Attacking] Trash 1 of your opponent's security cards for every 10 cards in their trash."
		ruling = [
					"Q: I use this card's [When Attacking] effect to trash my opponent's Security Cards. Do the [Security] effects on those cards activate?",
					"A: No. They weren't flipped over in a security check, so they don't activate.",
					"Q: My opponent has 1 or more cards in their security stack. I attack my opponent with this Digimon and its [When Attacking] effect trashes the rest of their security cards, leaving them with zero cards in their security stack. If the attack isn't blocked and my attack is successful when they have zero cards in their security stack, do I win the game?",
					"A: Yes, you do.",
]
		is_parallel = true
		notes = "parallel promo Dukemon"

class BT2_021 extends Card:
	func _init():
		name = "Veemon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-021"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.FREE
		digimon_type = "Mini Dragon"
		power = 2000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When this Digimon becomes unsuspended during your main phase, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: I have a Digimon with this card in its digivolution cards. If that Digimon is already unsuspended, does an effect that reads \"unsuspend 1 of your Digimon\" activate this card's inherited effect?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
]
		notes = "V-mon"

class BT2_022 extends Card:
	func _init():
		name = "Betamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-022"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Amphibian"
		power = 5000

class BT2_023 extends Card:
	func _init():
		name = "Gomamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-023"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 2000
		effect_text = "When playing this card from your hand, reduce its memory cost by 1 for each of your opponent's Digimon with no digivolution cards."
		ruling = [
					"Q: My opponent has 5 or more Digimon with no digivolution cards in play, meaning this card's effect reduces its cost by 5, to -1. Can I play it by gaining a memory?",
					"A: No, play costs can't be reduced to less than zero. You can play the card for free, but you can't gain memory with effects that reduce play costs.",
]

class BT2_024 extends Card:
	func _init():
		name = "Seadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-024"
		play_cost = 3
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Aquatic"
		power = 4000

class BT2_025 extends Card:
	func _init():
		name = "Ikkakumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-025"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 3000
		inherited_effect_text = "[When Attacking] Trash the top digivolution card on 1 of your opponent's Digimon."

class BT2_025_B extends Card:
	func _init():
		name = "Ikkakumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-025 (B)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 3000
		inherited_effect_text = "[When Attacking] Trash the top digivolution card on 1 of your opponent's Digimon."
		is_parallel = true
		notes = "parallel promo"

class BT2_026 extends Card:
	func _init():
		name = "Veedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT2-026"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Mythical Dragon"
		power = 5000
		effect_text = "[Your Turn] While you have a blue Tamer in play, this Digimon gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon)."
		notes = "V-Dramon"

class BT2_027 extends Card:
	func _init():
		name = "Zudomon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT2-027"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 9000

class BT2_027_B extends Card:
	func _init():
		name = "Zudomon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT2-027 (B)"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Sea Beast"
		power = 9000
		is_parallel = true
		notes = "parallel promo"

class BT2_028 extends Card:
	func _init():
		name = "AeroVeedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-028"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Dragon"
		power = 7000
		effect_text = "[When Digivolving] If you have a blue Tamer in play, unsuspend 1 of your blue Digimon."
		inherited_effect_text = "[Your Turn] When this Digimon becomes unsuspended during your Main Phase, it gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon) for the turn."
		ruling = [
					"Q: Can I use this card's [When Digivolving] effect to unsuspend this card if it digivolves while suspended?",
					"A: Yes, you can.",
					"Q: I have a Digimon with this card in its digivolution cards. If that Digimon is already unsuspended, does an effect that reads \"unsuspend 1 of your Digimon\" activate this card's inherited effect?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
]
		notes = "AeroV-dramon"

class BT2_028_B extends Card:
	func _init():
		name = "AeroVeedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-028 (B)"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Dragon"
		power = 7000
		effect_text = "[When Digivolving] If you have a blue Tamer in play, unsuspend 1 of your blue Digimon."
		inherited_effect_text = "[Your Turn] When this Digimon becomes unsuspended during your Main Phase, it gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon) for the turn."
		ruling = [
					"Q: Can I use this card's [When Digivolving] effect to unsuspend this card if it digivolves while suspended?",
					"A: Yes, you can.",
					"Q: I have a Digimon with this card in its digivolution cards. If that Digimon is already unsuspended, does an effect that reads \"unsuspend 1 of your Digimon\" activate this card's inherited effect?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
]
		is_parallel = true
		notes = "parallel promo AeroV-dramon"

class BT2_029 extends Card:
	func _init():
		name = "MegaSeadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-029"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Aquatic"
		power = 8000
		effect_text = "[Your Turn] This Digimon can't be blocked by your opponent's Digimon with no digivolution cards."
		ruling = [
					"Q: \"This Digimon can't be blocked by your opponent's Digimon with no digivolution cards.\" How does this effect work, exactly?",
					"A: If this Digimon attacks, Digimon with <Blocker> and no digivolution cards cannot activate <Blocker> to block this attack. It cannot be suspended either.",
					"Q: When my opponent attacks with this card, even if I cannot block, can I still declare to activate my Digimon's <Blocker> to suspend it?",
					"A: Yes, you can.",
]

class BT2_030 extends Card:
	func _init():
		name = "MetalSeadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-030"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Cyborg"
		power = 10000
		effect_text = "[On Play] Return up to 2 of your opponent's level 4 or lower Digimon to their hand. (Trash all of the digivolution cards of those Digimon.)\n[Your Turn] This Digimon can't be blocked by your opponent's Digimon with no digivolution cards."
		ruling = [
					"Q: \"This Digimon can't be blocked by your opponent's Digimon with no digivolution cards.\" How does this effect work, exactly?",
					"A: If this Digimon attacks, Digimon with <Blocker> and no digivolution cards cannot activate <Blocker> to block this attack. It cannot be suspended either.",
					"Q: When my opponent attacks with this card, even if I cannot block, can I still declare to activate my Digimon's <Blocker> to suspend it?",
					"A: Yes, you can.",
]

class BT2_030_B extends Card:
	func _init():
		name = "MetalSeadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-030 (B)"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Cyborg"
		power = 10000
		effect_text = "[On Play] Return up to 2 of your opponent's level 4 or lower Digimon to their hand. (Trash all of the digivolution cards of those Digimon.)\n[Your Turn] This Digimon can't be blocked by your opponent's Digimon with no digivolution cards."
		ruling = [
					"Q: \"This Digimon can't be blocked by your opponent's Digimon with no digivolution cards.\" How does this effect work, exactly?",
					"A: If this Digimon attacks, Digimon with <Blocker> and no digivolution cards cannot activate <Blocker> to block this attack. It cannot be suspended either.",
					"Q: When my opponent attacks with this card, even if I cannot block, can I still declare to activate my Digimon's <Blocker> to suspend it?",
					"A: Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_031 extends Card:
	func _init():
		name = "Vikemon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT2-031"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.FREE
		digimon_type = "Beastkin"
		power = 12000
		effect_text = "[Your Turn] While your opponent has a Digimon with no digivolution cards in play, this Digimon gets +1000 DP and <Security Attack +1> (This Digimon checks 1 additional security card)."

class BT2_032 extends Card:
	func _init():
		name = "UlforceVeedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "BT2-032"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Warrior/Royal Knight"
		power = 11000
		effect_text = "[Your Turn] When one of your blue Tamers becomes suspended, unsuspend this Digimon.\n[Your Turn] (Once Per Turn) When this Digimon becomes unsuspended during your main phase, gain 1 memory."
		ruling = [
					"Q: Can I use this Digimon's effect to suspend one of my blue Tamers?",
					"A: No, you can't use this Digimon's effect to suspend your blue Tamers. The effect only allows you to unsuspend this Digimon when another effect suspends one of your blue Tamers.",
					"Q: If this Digimon is unsuspended during my main phase, does an effect that reads \"unsuspend 1 of your Digimon\" activate this card's \"gain 1 memory\" effect?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
]
		notes = "UlforceV-dramon"

class BT2_032_B extends Card:
	func _init():
		name = "UlforceVeedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "BT2-032 (B)"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Warrior/Royal Knight"
		power = 11000
		effect_text = "[Your Turn] When one of your blue Tamers becomes suspended, unsuspend this Digimon.\n[Your Turn] (Once Per Turn) When this Digimon becomes unsuspended during your main phase, gain 1 memory."
		ruling = [
					"Q: Can I use this Digimon's effect to suspend one of my blue Tamers?",
					"A: No, you can't use this Digimon's effect to suspend your blue Tamers. The effect only allows you to unsuspend this Digimon when another effect suspends one of your blue Tamers.",
					"Q: If this Digimon is unsuspended during my main phase, does an effect that reads \"unsuspend 1 of your Digimon\" activate this card's \"gain 1 memory\" effect?",
					"A: No. If an effect unsuspends a card that's already unsuspended, it doesn't count as unsuspending it.",
]
		is_parallel = true
		notes = "parallel promo UlforceV-dramon"

class BT2_033 extends Card:
	func _init():
		name = "Agumon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT2-033"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dinosaur"
		power = 3000
		inherited_effect_text = "[When Attacking] If you have 3 or more yellow Tamers in play, trigger <Draw 1> (Draw 1 card from your deck)."

class BT2_034 extends Card:
	func _init():
		name = "Salamon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-034"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Mammal"
		power = 2000
		effect_text = "[On Deletion] If you have 3 or fewer security cards, trigger <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack)."
		ruling = [
					"Q: I have 3 cards in my security stack when 2 copies of this Digimon are deleted at the same time. Do the [On Deletion] effects on both cards activate, bringing my security stack up to 5 cards?",
					"A: No. Even if both Digimon are deleted simultaneously, the effects trigger one at a time. When the first Salamon's effect resolves, you add 1 cards to your security stack, bringing the total up to 4. This means the \"3 cards or less\" condition for the second Salamon's effect no longer applies. The second Salamon's effect doesn't activate, and your security stack remains at 4 cards.",
]
		notes = "Plotmon"

class BT2_034_B extends Card:
	func _init():
		name = "Salamon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-034 (B)"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Mammal"
		power = 2000
		effect_text = "[On Deletion] If you have 3 or fewer security cards, trigger <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack)."
		ruling = [
					"Q: I have 3 cards in my security stack when 2 copies of this Digimon are deleted at the same time. Do the [On Deletion] effects on both cards activate, bringing my security stack up to 5 cards?",
					"A: No. Even if both Digimon are deleted simultaneously, the effects trigger one at a time. When the first Salamon's effect resolves, you add 1 cards to your security stack, bringing the total up to 4. This means the \"3 cards or less\" condition for the second Salamon's effect no longer applies. The second Salamon's effect doesn't activate, and your security stack remains at 4 cards.",
]
		is_parallel = true
		notes = "parallel promo Plotmon"

class BT2_035 extends Card:
	func _init():
		name = "GeoGreymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT2-035"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dinosaur"
		power = 4000
		inherited_effect_text = "[When Attacking] If you have 3 or more yellow Tamers in play, 1 of your opponent's Digimon gets -2000 DP for the turn."
		ruling = [
					"Q: I use this Digimon to attack an opponent's Digimon, then use this Digimon's inherited effect to reduce the opponent's Digimon to 0 DP and delete it. What happens to the attack?",
					"A: No battle occurs. After resolving all other When Attacking effects, the attack ends.",
]

class BT2_036 extends Card:
	func _init():
		name = "Gatomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-036"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Beast"
		power = 3000
		effect_text = "[On Play] If you have a purple Digimon in play, 1 of your opponent's Digimon gets -4000 DP for the turn.\n[Your Turn] When one of your other Digimon is deleted, this Digimon gets +3000 DP for the turn."
		notes = "Tailmon"

class BT2_036_B extends Card:
	func _init():
		name = "Gatomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-036 (B)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Beast"
		power = 3000
		effect_text = "[On Play] If you have a purple Digimon in play, 1 of your opponent's Digimon gets -4000 DP for the turn.\n[Your Turn] When one of your other Digimon is deleted, this Digimon gets +3000 DP for the turn."
		is_parallel = true
		notes = "parallel promo Tailmon"

class BT2_037 extends Card:
	func _init():
		name = "Angewomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT2-037"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Archangel"
		power = 10000

class BT2_037_B extends Card:
	func _init():
		name = "Angewomon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT2-037 (B)"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Archangel"
		power = 10000
		is_parallel = true
		notes = "parallel promo"

class BT2_038 extends Card:
	func _init():
		name = "RizeGreymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-038"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "[When Digivolving] You may play 1 yellow Tamer card from your hand without paying its memory cost. Any [On Play] effects on the Tamer played with this effect don't activate."
		inherited_effect_text = "[Your Turn] While you have 3 or more yellow Tamers in play, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."

class BT2_038_B extends Card:
	func _init():
		name = "RizeGreymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-038 (B)"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "[When Digivolving] You may play 1 yellow Tamer card from your hand without paying its memory cost. Any [On Play] effects on the Tamer played with this effect don't activate."
		inherited_effect_text = "[Your Turn] While you have 3 or more yellow Tamers in play, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		is_parallel = true
		notes = "parallel promo"

class BT2_038_C extends Card:
	func _init():
		name = "RizeGreymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-038 (C)"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "[When Digivolving] You may play 1 yellow Tamer card from your hand without paying its memory cost. Any [On Play] effects on the Tamer played with this effect don't activate."
		inherited_effect_text = "[Your Turn] While you have 3 or more yellow Tamers in play, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		is_parallel = true
		notes = "parallel promo"

class BT2_039 extends Card:
	func _init():
		name = "Magnadramon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-039"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Dragon/Four Great Dragons"
		power = 10000
		effect_text = "[On Play] If you have 3 or fewer security cards, trigger <Recovery +2 (Deck)> (Place the top 2 cards of your deck on top of your security stack). \n[When Attacking] You may play 1 yellow level 3 Digimon card from your hand without paying its memory cost."
		ruling = [
					"Q: Do I have to use this card's [When Attacking] effect every time I attack with it?",
					"A: No, you can choose not to as it has \"you may\".",
					"Q: If I use this card's [When Attacking] effect to play a Digimon card with an [On Play] effect, does that [On Play] effect activate when the Digimon enters play?",
					"A: Yes, it does.",
]
		notes = "Holydramon"

class BT2_040 extends Card:
	func _init():
		name = "Ophanimon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-040"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Throne/Three Great Angels"
		power = 11000
		effect_text = "[On Deletion] Place this card on top of your security stack face down."
		ruling = [
					"Q: When I place this card face down on top of my security stack because of its effect, does it become a security card?",
					"A: Yes, it does. During checks, it will fight your opponent's attacking Digimon as a Security Digimon.",
					"Q: I use [BT3-109 Back for Revenge!] on [BT2-040 Ophanimon] and it gets deleted with [BT2-109 Heat Viper]. What happens?",
					"A: The player chooses which effect to use first between [BT3-109 Back for Revenge!] and [BT2-040 Ophanimon]. If Ophanimon is used first Back for Revenge cannot be used. If Back for Revenge is used for then Ophanimon can no longer be used.",
]

class BT2_041 extends Card:
	func _init():
		name = "ShineGreymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "BT2-041"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Light Dragon"
		power = 11000
		effect_text = "[When Digivolving] Suspend all of your yellow Tamers. For each Tamer you suspend this way, activate the following effect:\n・1 of your opponent's Digimon gets -4000 DP for the turn.\n[Your Turn] This Digimon gets +1000 DP for each Tamer you have in play."
		ruling = [
					"Q: I use this card's [When Digivolving] effect to suspend 2 or more yellow Tamers. Can I choose 2 or more of my opponent's Digimon and give all of them -4000 DP?",
					"A: Yes, the [When Digivolving] effect activates separately for each yellow Tamer you suspend, and you get to choose the target for each effect.",
					"Q: I use this card's [When Digivolving] effect two or more times. Are they treated as activating at separate timings?",
					"A: No, they're treated as activating at the same timing. Previously, multiple activations of ShineGreymon's [When Digivolving] effect were treated as occurring at separate timings, but this was changed as of December 18, 2020.",
					"Q: This card suspends 8 Tamers. During the first 4 instances, this effect kills [BT2-083 Millenniummon]. Would I be able to use the remaining 4 effects to destroy the revived [BT2-083 Millenniummon]? Or would [BT2-083 Millenniummon] revive after ShineGreymon's effects finish resolving?",
					"A: You resolve all of ShineGreymon's effects first and activate any new pending effects after these effects have resolved. In this case, [BT2-083 Millenniummon] will only be deleted after all 8 of ShineGreymon's effects have finished resolving.",
					"Q: I have 2 Yellow Tamers and my opponent has 2 [ST1-03 Agumon]. Can I use both -4000 DP effects on the same Digimon?",
					"A: Yes, even though the Digimon has less than 4000 DP, you can continue to give it -4000 DP even though its DP is already 0. All Digimon that have 0 DP or less at the end of a ShineGreymon's effect will be moved to the trash at the same time.",
					"Q: What does \"activate the following effect\" mean?",
					"A: Use the effects consecutively one after the time to reduce DP. There is no period for effects to trigger between multiple effects having been activated.",
]

class BT2_041_B extends Card:
	func _init():
		name = "ShineGreymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "BT2-041 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Light Dragon"
		power = 11000
		effect_text = "[When Digivolving] Suspend all of your yellow Tamers. For each Tamer you suspend this way, activate the following effect:\n・1 of your opponent's Digimon gets -4000 DP for the turn.\n[Your Turn] This Digimon gets +1000 DP for each Tamer you have in play."
		ruling = [
					"Q: I use this card's [When Digivolving] effect to suspend 2 or more yellow Tamers. Can I choose 2 or more of my opponent's Digimon and give all of them -4000 DP?",
					"A: Yes, the [When Digivolving] effect activates separately for each yellow Tamer you suspend, and you get to choose the target for each effect.",
					"Q: I use this card's [When Digivolving] effect two or more times. Are they treated as activating at separate timings?",
					"A: No, they're treated as activating at the same timing. Previously, multiple activations of ShineGreymon's [When Digivolving] effect were treated as occurring at separate timings, but this was changed as of December 18, 2020.",
					"Q: This card suspends 8 Tamers. During the first 4 instances, this effect kills [BT2-083 Millenniummon]. Would I be able to use the remaining 4 effects to destroy the revived [BT2-083 Millenniummon]? Or would [BT2-083 Millenniummon] revive after ShineGreymon's effects finish resolving?",
					"A: You resolve all of ShineGreymon's effects first and activate any new pending effects after these effects have resolved. In this case, [BT2-083 Millenniummon] will only be deleted after all 8 of ShineGreymon's effects have finished resolving.",
					"Q: I have 2 Yellow Tamers and my opponent has 2 [ST1-03 Agumon]. Can I use both -4000 DP effects on the same Digimon?",
					"A: Yes, even though the Digimon has less than 4000 DP, you can continue to give it -4000 DP even though its DP is already 0. All Digimon that have 0 DP or less at the end of a ShineGreymon's effect will be moved to the trash at the same time.",
					"Q: What does \"activate the following effect\" mean?",
					"A: Use the effects consecutively one after the time to reduce DP. There is no period for effects to trigger between multiple effects having been activated.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_042 extends Card:
	func _init():
		name = "Argomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT2-042"
		play_cost = 2
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 3000

class BT2_043 extends Card:
	func _init():
		name = "Agumon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT2-043"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Reptile"
		power = 1000
		inherited_effect_text = "[Your Turn] This Digimon gets +1000 DP."

class BT2_044 extends Card:
	func _init():
		name = "Tyrannomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT2-044"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Dinosaur"
		power = 4000
		effect_text = "[When Digivolving] Reveal 3 cards from the top of your deck. Add 1 level 5 Digimon card and 1 green Tamer card among them to your hand. Place the remaining cards at the bottom of your deck in any order."
		ruling = [
					"Q: If the 3 cards I reveal with this card's effect don't contain both a level 5 Digimon card and a green Tamer card, do I still get to add a card to my hand?",
					"A: Yes. If either a level 5 Digimon card or a green Tamer card are present in the 3 cards you reveal, you get to add it to your hand.",
]

class BT2_045 extends Card:
	func _init():
		name = "Argomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT2-045"
		play_cost = 6
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 5000
		effect_text = "<Digisorption -2> (When one of your Digimon digivolves into this card from your hand, you may suspend 1 of your Digimon to reduce the memory cost of the digivolution by 2)."

class BT2_046 extends Card:
	func _init():
		name = "MetalTyrannomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT2-046"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Cyborg"
		power = 6000
		inherited_effect_text = "[Your Turn] When this Digimon deletes one of your opponent's level 6 or higher Digimon in battle, unsuspend this Digimon."

class BT2_047 extends Card:
	func _init():
		name = "Argomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT2-047"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 6000
		effect_text = "<Digisorption -3> (When one of your Digimon digivolves into this card from your hand, you may suspend 1 of your Digimon to reduce the memory cost of the digivolution by 3)."
		inherited_effect_text = "[When Attacking] You may play 1 green level 3 Digimon card from your hand suspended without paying its memory cost."
		ruling = [
					"Q: If I use this card's inherited effect to play a Digimon card with an [On Play] effect, does that [On Play] effect activate when the Digimon enters play?",
					"A: Yes, it does.",
]

class BT2_047_B extends Card:
	func _init():
		name = "Argomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT2-047 (B)"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 6000
		effect_text = "<Digisorption -3> (When one of your Digimon digivolves into this card from your hand, you may suspend 1 of your Digimon to reduce the memory cost of the digivolution by 3)."
		inherited_effect_text = "[When Attacking] You may play 1 green level 3 Digimon card from your hand suspended without paying its memory cost."
		ruling = [
					"Q: If I use this card's inherited effect to play a Digimon card with an [On Play] effect, does that [On Play] effect activate when the Digimon enters play?",
					"A: Yes, it does.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_048 extends Card:
	func _init():
		name = "Cherrymon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT2-048"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Vegetation"
		power = 7000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead)."

class BT2_049 extends Card:
	func _init():
		name = "Puppetmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT2-049"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Puppet"
		power = 10000
		effect_text = "[On Play] Suspend 1 of your opponent's Digimon. During your opponent's next unsuspend phase, none of your opponent's Digimon can unsuspend.\n [When Attacking] Gain 1 memory."
		ruling = [
					"Q: I use this card's [On Play] effect to suspend an opponent's Digimon. Is that Digimon the only one that doesn't unsuspend during my opponent's next unsuspend phase?",
					"A: No. The Digimon suspended by this effect -- along with all of your opponent's other suspended Digimon -- remain suspended during their unsuspend phase.",
					"Q: Does this card's [On Play] effect cause my opponent's unsuspended Digimon to suspend themselves during their next unsuspend phase?",
					"A: No. It only prevents suspended Digimon from unsuspending. Any unsuspended Digimon remain that way.",
					"Q: Does this card's [On Play] effect prevent my opponent's suspended Tamers from unsuspending during their next unsuspend phase?",
					"A: No, the effect doesn't affect Tamers. They unsuspend as normal.",
]

class BT2_049_B extends Card:
	func _init():
		name = "Puppetmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT2-049 (B)"
		play_cost = 11
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Puppet"
		power = 10000
		effect_text = "[On Play] Suspend 1 of your opponent's Digimon. During your opponent's next unsuspend phase, none of your opponent's Digimon can unsuspend.\n [When Attacking] Gain 1 memory."
		ruling = [
					"Q: I use this card's [On Play] effect to suspend an opponent's Digimon. Is that Digimon the only one that doesn't unsuspend during my opponent's next unsuspend phase?",
					"A: No. The Digimon suspended by this effect -- along with all of your opponent's other suspended Digimon -- remain suspended during their unsuspend phase.",
					"Q: Does this card's [On Play] effect cause my opponent's unsuspended Digimon to suspend themselves during their next unsuspend phase?",
					"A: No. It only prevents suspended Digimon from unsuspending. Any unsuspended Digimon remain that way.",
					"Q: Does this card's [On Play] effect prevent my opponent's suspended Tamers from unsuspending during their next unsuspend phase?",
					"A: No, the effect doesn't affect Tamers. They unsuspend as normal.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_050 extends Card:
	func _init():
		name = "Argomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT2-050"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 11000
		effect_text = "<Digisorption -3> (When one of your Digimon digivolves into this card from your hand, you may suspend 1 of your Digimon to reduce the memory cost of the digivolution by 3).\n[Your Turn] For each of your other suspended Digimon, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."

class BT2_051 extends Card:
	func _init():
		name = "RustTyrannomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.SR
		id = "BT2-051"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "[Your Turn] When you have a green Tamer in play, this Digimon can attack your opponent's unsuspended Digimon.\n[Your Turn] When this Digimon deletes one of your opponent's Digimon in battle and survives, suspend 1 of your opponent's Digimon."
		ruling = [
					"Q: I use this card's effect to attack an opponent's unsuspended Digimon. Does the opponent's Digimon suspend itself?",
					"A: No, it remains unsuspended during the battle",
					"Q: This Digimon attacks and deletes a Digimon with <Retaliation>. Can this Digimon use its effect to suspend another Digimon?",
					"A: Yes, this is because the effect of [BT2-051 RustTyrannomon] is activated before <Retaliation> because the RustTyrannomon's owner is the turn player.",
]
		notes = "ラストティラノモン"

class BT2_052 extends Card:
	func _init():
		name = "Hagurumon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-052"
		play_cost = 2
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Machine"
		power = 3000

class BT2_053 extends Card:
	func _init():
		name = "Keramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-053"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 2000
		inherited_effect_text = "[Your Turn] When you play another Digimon with the same name as this Digimon, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: What counts as \"another Digimon with the same name as this Digimon\"? Does this only count if I have another Digimon in play named [Keramon]?",
					"A: No. This effect doesn't refer to [Keramon], but to the name of the Digimon on top with this card as its digivolution cards.",
]

class BT2_053_B extends Card:
	func _init():
		name = "Keramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-053 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 2000
		inherited_effect_text = "[Your Turn] When you play another Digimon with the same name as this Digimon, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: What counts as \"another Digimon with the same name as this Digimon\"? Does this only count if I have another Digimon in play named [Keramon]?",
					"A: No. This effect doesn't refer to [Keramon], but to the name of the Digimon on top with this card as its digivolution cards.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_053_C extends Card:
	func _init():
		name = "Keramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-053 (C)"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 2000
		inherited_effect_text = "[Your Turn] When you play another Digimon with the same name as this Digimon, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: What counts as \"another Digimon with the same name as this Digimon\"? Does this only count if I have another Digimon in play named [Keramon]?",
					"A: No. This effect doesn't refer to [Keramon], but to the name of the Digimon on top with this card as its digivolution cards.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_054 extends Card:
	func _init():
		name = "Gotsumon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT2-054"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Rock"
		power = 3000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[When Attacking] Lose 2 memory."

class BT2_055 extends Card:
	func _init():
		name = "ToyAgumon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-055"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Puppet"
		power = 1000
		inherited_effect_text = "<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase)."

class BT2_056 extends Card:
	func _init():
		name = "Numemon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-056"
		play_cost = 3
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Mollusk"
		power = 3000

class BT2_057 extends Card:
	func _init():
		name = "Greymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-057"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dinosaur"
		power = 4000
		inherited_effect_text = "[Your Turn] While this Digimon has <Reboot>, it gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon)."

class BT2_057_B extends Card:
	func _init():
		name = "Greymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-057 (B)"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dinosaur"
		power = 4000
		inherited_effect_text = "[Your Turn] While this Digimon has <Reboot>, it gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon)."
		is_parallel = true
		notes = "parallel promo"

class BT2_058 extends Card:
	func _init():
		name = "Guardromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-058"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Machine"
		power = 7000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[Your Turn] This Digimon can't attack."

class BT2_058_B extends Card:
	func _init():
		name = "Guardromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-058 (B)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Machine"
		power = 7000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[Your Turn] This Digimon can't attack."
		is_parallel = true
		notes = "parallel promo"

class BT2_059 extends Card:
	func _init():
		name = "Kurisarimon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT2-059"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 4000
		inherited_effect_text = "[Your Turn] When you play another Digimon with the same name as this Digimon, gain 1 memory."
		ruling = [
					"Q: What counts as \"another Digimon with the same name as this Digimon\"? Does this only count if I have another Digimon in play named [Kurisarimon]?",
					"A: No. This effect doesn't refer to [Kurisarimon], but to the name of the Digimon on top with this card as its digivolution cards.",
]
		notes = "Chrysalimon"

class BT2_060 extends Card:
	func _init():
		name = "Megadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT2-060"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Cyborg"
		power = 9000

class BT2_061 extends Card:
	func _init():
		name = "Andromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-061"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead)."

class BT2_061_B extends Card:
	func _init():
		name = "Andromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-061 (B)"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead)."
		is_parallel = true
		notes = "parallel promo"

class BT2_062 extends Card:
	func _init():
		name = "Infermon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-062"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 6000
		effect_text = "[Your Turn] When this Digimon digivolves into a [Diaboromon] in your hand, reduce the memory cost of the digivolution by 1."
		ruling = [
					"Q: This Digimon is in my breeding area when I digivolve it into a [Diaboromon] from my hand. Does this card's effect activate?",
					"A: No, it doesn't activate from breeding areas.",
]

class BT2_063 extends Card:
	func _init():
		name = "MetalGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-063"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase)."
		inherited_effect_text = "[Your Turn] While this Digimon has <Reboot>, it gains <Security Attack +1> (This Digimon checks 1 additional security card)."

class BT2_063_B extends Card:
	func _init():
		name = "MetalGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-063 (B)"
		play_cost = 8
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase)."
		inherited_effect_text = "[Your Turn] While this Digimon has <Reboot>, it gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		is_parallel = true
		notes = "parallel promo"

class BT2_064 extends Card:
	func _init():
		name = "HiAndromon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT2-064"
		play_cost = 10
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 12000

class BT2_065 extends Card:
	func _init():
		name = "WarGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT2-065"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dragonkin"
		power = 11000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase)."

class BT2_065_B extends Card:
	func _init():
		name = "WarGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT2-065 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Dragonkin"
		power = 11000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase)."
		is_parallel = true
		notes = "parallel promo"

class BT2_066 extends Card:
	func _init():
		name = "Machinedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT2-066"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Machine"
		power = 11000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[On Play] Trigger <De-Digivolve  2> on 2 of your opponent's Digimon (Trash up to 2 cards from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."
		notes = "Mugendramon"

class BT2_066_B extends Card:
	func _init():
		name = "Machinedramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT2-066 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Machine"
		power = 11000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[On Play] Trigger <De-Digivolve  2> on 2 of your opponent's Digimon (Trash up to 2 cards from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."
		is_parallel = true
		notes = "parallel promo Mugendramon"

class BT2_067 extends Card:
	func _init():
		name = "DemiDevimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT2-067"
		play_cost = 2
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 3000
		notes = "PicoDevimon"

class BT2_068 extends Card:
	func _init():
		name = "Impmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-068"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 1000
		effect_text = "[On Deletion] Trash the top 3 cards of your deck."

class BT2_068_B extends Card:
	func _init():
		name = "Impmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-068 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 1000
		effect_text = "[On Deletion] Trash the top 3 cards of your deck."
		is_parallel = true
		notes = "parallel promo"

class BT2_069 extends Card:
	func _init():
		name = "Gabumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-069"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Reptile"
		power = 2000
		inherited_effect_text = "[On Deletion] Trigger <Draw 2> (Draw 2 cards from your deck). Then trash 1 card from your hand."

class BT2_069_B extends Card:
	func _init():
		name = "Gabumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-069 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Reptile"
		power = 2000
		inherited_effect_text = "[On Deletion] Trigger <Draw 2> (Draw 2 cards from your deck). Then trash 1 card from your hand."
		is_parallel = true
		notes = "parallel promo"

class BT2_070 extends Card:
	func _init():
		name = "Tapirmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT2-070"
		play_cost = 3
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Holy Beast"
		power = 2000
		effect_text = "[On Deletion] Trigger <Draw 1> (Draw 1 card from your deck)."
		notes = "Bakumon"

class BT2_071 extends Card:
	func _init():
		name = "Wizardmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-071"
		play_cost = 4
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Wizard"
		power = 4000
		effect_text = "[All Turns] If you have a yellow Digimon in play, this Digimon gains <Retaliation>. (When this Digimon is deleted after losing a battle, delete the Digimon it was battling.)\n[On Deletion] Trigger <Draw 1>. (Draw 1 card from your deck.)"
		notes = "Wizarmon"

class BT2_072 extends Card:
	func _init():
		name = "Vilemon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-072"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 6000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[When Attacking] Lose 2 memory."
		notes = "Evilmon"

class BT2_072_B extends Card:
	func _init():
		name = "Vilemon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-072 (B)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 6000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[When Attacking] Lose 2 memory."
		is_parallel = true
		notes = "parallel promo Evilmon"

class BT2_073 extends Card:
	func _init():
		name = "Garurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-073"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beast"
		power = 4000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When one of your other Digimon is deleted, gain 1 memory."
		ruling = [
					"Q: If 2 or more of my other Digimon are deleted at the same time, can I gain 2 memory?",
					"A: No. This inherited effect only allows you to gain 1 memory per turn, no matter how many Digimon are deleted.",
]

class BT2_073_B extends Card:
	func _init():
		name = "Garurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-073 (B)"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beast"
		power = 4000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When one of your other Digimon is deleted, gain 1 memory."
		ruling = [
					"Q: If 2 or more of my other Digimon are deleted at the same time, can I gain 2 memory?",
					"A: No. This inherited effect only allows you to gain 1 memory per turn, no matter how many Digimon are deleted.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_074 extends Card:
	func _init():
		name = "Devimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT2-074"
		play_cost = 6
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Fallen Angel"
		power = 4000
		effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling)."
		inherited_effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling)."

class BT2_074_B extends Card:
	func _init():
		name = "Devimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT2-074 (B)"
		play_cost = 6
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Fallen Angel"
		power = 4000
		effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling)."
		inherited_effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling)."
		is_parallel = true
		notes = "parallel promo"

class BT2_075 extends Card:
	func _init():
		name = "Myotismon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT2-075"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Undead"
		power = 7000
		notes = "Vamdemon"

class BT2_076 extends Card:
	func _init():
		name = "Pumpkinmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-076"
		play_cost = 6
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Puppet"
		power = 6000
		inherited_effect_text = "[On Deletion] Trigger <Draw 2>. (Draw 2 cards from your deck.) Then trash 1 card from your hand."
		notes = "Pumpmon"

class BT2_077 extends Card:
	func _init():
		name = "Kimeramon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-077"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Composite"
		power = 7000
		effect_text = "[On Play] You may delete one of your other Digimon to delete 1 of your opponent's level 5 or lower Digimon."
		ruling = [
					"Q: Do I have to use this card's effect?",
					"A: No, you may choose not to use it.",
					"Q: Can I use this card's effect to delete a Digimon in my breeding area?",
					"A: No, you can't.",
]

class BT2_077_B extends Card:
	func _init():
		name = "Kimeramon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-077 (B)"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Composite"
		power = 7000
		effect_text = "[On Play] You may delete one of your other Digimon to delete 1 of your opponent's level 5 or lower Digimon."
		ruling = [
					"Q: Do I have to use this card's effect?",
					"A: No, you may choose not to use it.",
					"Q: Can I use this card's effect to delete a Digimon in my breeding area?",
					"A: No, you can't.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_077_C extends Card:
	func _init():
		name = "Kimeramon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-077 (C)"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Composite"
		power = 7000
		effect_text = "[On Play] You may delete one of your other Digimon to delete 1 of your opponent's level 5 or lower Digimon."
		ruling = [
					"Q: Do I have to use this card's effect?",
					"A: No, you may choose not to use it.",
					"Q: Can I use this card's effect to delete a Digimon in my breeding area?",
					"A: No, you can't.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_078 extends Card:
	func _init():
		name = "WereGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-078"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beastkin"
		power = 7000
		inherited_effect_text = "[When Attacking] (Once Per Turn) You may delete 1 of your other Digimon to unsuspend this Digimon."
		ruling = [
					"Q: Can I use this card's effect to delete a Digimon in my breeding area?",
					"A: No, you can't.",
]

class BT2_078_B extends Card:
	func _init():
		name = "WereGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-078 (B)"
		play_cost = 7
		level = 5
		stage_level = Stage.HYBRID
		attribute = Attribute.VACCINE
		digimon_type = "Beastkin"
		power = 7000
		inherited_effect_text = "[When Attacking] (Once Per Turn) You may delete 1 of your other Digimon to unsuspend this Digimon."
		ruling = [
					"Q: Can I use this card's effect to delete a Digimon in my breeding area?",
					"A: No, you can't.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_079 extends Card:
	func _init():
		name = "VenomMyotismon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-079"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dark Animal"
		power = 12000
		effect_text = "<Security Attack +1> (This Digimon checks 1 additional security card).\n[Opponent's Turn] When one of your opponent's Digimon becomes suspended, gain 1 memory."
		ruling = [
					"Q: [BT2-079 VenomMyotismon]'s effect is \"[Opponent's Turn] When the opponent's Digimon suspends\". The opponent's Digimon is rested to attack. Which comes first [When Attacking] or the [Opponent's Turn] effect of VenomMyotismon to increase memory by 1? Is it the same timing as [When Attacking]?",
					"A: Since the effect of [BT2-079 VenomMyotismon] and [When Attacking] would be resolved at the same time, the opponent's effect will be resolved first, and then VenomMyotismon's effect will be resolved.",
					"Q: Is [BT2-079 VenomMyotismon]'s [Opponent's Turn] effect considered a [Reaction] effect?",
					"A: No, it is triggered as soon as the opponent declares an attack suspending the Digimon. (See more in Attack Resolution)",
					"Q: My opponent attacks and activates an effect that <De-Digivolve> on my Level 7 Digimon that becomes a [BT2-079 VenomMyotismon]. Can I use VenomMyotismon's effect?",
					"A: No, you cannot. The effect of this card was not triggered when the attack was declared (which caused the Digimon to suspend), so it cannot be activated. (See more in Effect Resolution)",
					"Q: My opponent attacks and activates an effect that <De-Digivolve> on my [BT2-079 VenomMyotismon]. Can I use VenomMyotismon's effect?",
					"A: No, you cannot. Even though the effect of [BT2-079 VenomMyotismon] was triggered, the Digimon has lost the [Opponent's Turn] effect of VenomMyotismon so it cannot be activated. (See more in Effect Resolution)",
]
		notes = "VenomVamdemon"

class BT2_080 extends Card:
	func _init():
		name = "Piedmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT2-080"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Wizard"
		power = 10000
		effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling).\n[On Play] You may play up to 2 level 4 or lower purple Digimon cards from your trash without paying their memory costs. Any [On Play] effects on Digimon played with this effect don't activate."
		notes = "Piemon"

class BT2_080_B extends Card:
	func _init():
		name = "Piedmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT2-080 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Wizard"
		power = 10000
		effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling).\n[On Play] You may play up to 2 level 4 or lower purple Digimon cards from your trash without paying their memory costs. Any [On Play] effects on Digimon played with this effect don't activate."
		is_parallel = true
		notes = "parallel promo Piemon"

class BT2_081 extends Card:
	func _init():
		name = "MetalGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT2-081"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "[When Attacking] You may play 1 purple level 3 Digimon card from your trash without paying its memory cost. Any [On Play] effects on Digimon played with this effect don't activate."

class BT2_081_B extends Card:
	func _init():
		name = "MetalGarurumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT2-081 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.DATA
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "[When Attacking] You may play 1 purple level 3 Digimon card from your trash without paying its memory cost. Any [On Play] effects on Digimon played with this effect don't activate."
		is_parallel = true
		notes = "parallel promo"

class BT2_082 extends Card:
	func _init():
		name = "Diaboromon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT2-082"
		play_cost = 14
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 10000
		effect_text = "[When Attacking] You may play 1 [Diaboromon] Token without paying its memory cost. (Diaboromon Tokens are level 6 white Digimon with a memory cost of 14, 3000 DP, and are Mega form, Unidentified type, and Unknown attribute.)\n[All Turns] When this Digimon would be deleted in battle, you may delete one of your other [Diaboromon] to prevent this Digimon from being deleted."
		ruling = [
					"Q: What's a token?",
					"A: Tokens are special cards that some effects put into play to represent Digimon or Tamers. This card's effect, for example, plays a token that's treated as a Digimon named [Diaboromon]. For a more detailed explanation of how tokens work, check the official rule manual.",
					"Q: Can I activate this card's [All Turns] effect by deleting a [Diaboromon] token when this Digimon is about to be deleted?",
					"A: Yes, you can.",
					"Q: Can I activate this card's [All Turns] effect when one of my [Diaboromon] tokens is about to be deleted?",
					"A: No. this card's [All Turns] effect only takes effect when this Digimon is about to be deleted. You can't use it when a [Diaboromon] token is deleted.",
					"Q: I have this Digimon and a [Diaboromon] token in play in my battle area when my opponent uses [BT1-084 Omnimon]'s [When Digivolving] effect to choose [Diaboromon]. Are this Digimon and my [Diaboromon] token both deleted due to having the same name?",
					"A: Yes. The token is considered a Digimon with the specified name, and is deleted.",
					"Q: Can I activate this card's [All Turns] effect when this Digimon is about to be deleted in a battle with an opponent's Security Digimon?",
					"A: Yes, you can.",
]
		notes = "Diablomon"

class BT2_082_B extends Card:
	func _init():
		name = "Diaboromon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT2-082 (B)"
		play_cost = 14
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.UNKNOWN
		digimon_type = "Unidentified"
		power = 10000
		effect_text = "[When Attacking] You may play 1 [Diaboromon] Token without paying its memory cost. (Diaboromon Tokens are level 6 white Digimon with a memory cost of 14, 3000 DP, and are Mega form, Unidentified type, and Unknown attribute.)\n[All Turns] When this Digimon would be deleted in battle, you may delete one of your other [Diaboromon] to prevent this Digimon from being deleted."
		ruling = [
					"Q: What's a token?",
					"A: Tokens are special cards that some effects put into play to represent Digimon or Tamers. This card's effect, for example, plays a token that's treated as a Digimon named [Diaboromon]. For a more detailed explanation of how tokens work, check the official rule manual.",
					"Q: Can I activate this card's [All Turns] effect by deleting a [Diaboromon] token when this Digimon is about to be deleted?",
					"A: Yes, you can.",
					"Q: Can I activate this card's [All Turns] effect when one of my [Diaboromon] tokens is about to be deleted?",
					"A: No. this card's [All Turns] effect only takes effect when this Digimon is about to be deleted. You can't use it when a [Diaboromon] token is deleted.",
					"Q: I have this Digimon and a [Diaboromon] token in play in my battle area when my opponent uses [BT1-084 Omnimon]'s [When Digivolving] effect to choose [Diaboromon]. Are this Digimon and my [Diaboromon] token both deleted due to having the same name?",
					"A: Yes. The token is considered a Digimon with the specified name, and is deleted.",
					"Q: Can I activate this card's [All Turns] effect when this Digimon is about to be deleted in a battle with an opponent's Security Digimon?",
					"A: Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo Diablomon"

class BT2_083 extends Card:
	func _init():
		name = "Millenniummon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT2-083"
		play_cost = 15
		level = 7
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 6
		digivolve_level_2 = 6
		digimon_type = "Composite"
		power = 13000
		effect_text = "[When Digivolving] Return 1 of your opponent's Digimon to the bottom of their deck. (Trash all of the digivolution cards of that Digimon.)\n[On Deletion] If this card had digivolution cards, you may play this card from your trash without paying its memory cost."
		ruling = [
					"Q: When playing this card from my trash using its [On Deletion] effect, do the cards it had as digivolution cards return to my Battle Area as well?",
					"A: No, this card's [On Deletion] effect only returns this card to play. Any cards that were in its digivolution cards go to the trash.",
]

class BT2_083_B extends Card:
	func _init():
		name = "Millenniummon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT2-083 (B)"
		play_cost = 15
		level = 7
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 6
		digivolve_level_2 = 6
		digimon_type = "Composite"
		power = 13000
		effect_text = "[When Digivolving] Return 1 of your opponent's Digimon to the bottom of their deck. (Trash all of the digivolution cards of that Digimon.)\n[On Deletion] If this card had digivolution cards, you may play this card from your trash without paying its memory cost."
		ruling = [
					"Q: When playing this card from my trash using its [On Deletion] effect, do the cards it had as digivolution cards return to my Battle Area as well?",
					"A: No, this card's [On Deletion] effect only returns this card to play. Any cards that were in its digivolution cards go to the trash.",
]
		is_parallel = true
		notes = "parallel promo"

class BT2_084 extends Card:
	func _init():
		name = "Sora Takenouchi"
		type = Type.TAMER
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-084"
		play_cost = 3
		effect_text = "[Your Turn] When one of your red Digimon attacks a player, you may suspend this Tamer to give that Digimon +2000 DP for the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: I attack my opponent with a Digimon, and suspend this Tamer. If my opponent uses <Blocker> to block the attack, what happens to the +2000 DP bonus from this Tamer's effect?",
					"A: This Tamer's effect is triggered once you declare your attack against another player, and is activated before your opponent uses <Blocker>. The +2000 DP bonus remains for the turn even if the target of attack changes.",
]
		notes = "Takenouchi Sora"

class BT2_084_B extends Card:
	func _init():
		name = "Sora Takenouchi"
		type = Type.TAMER
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-084 (B)"
		play_cost = 3
		effect_text = "[Your Turn] When one of your red Digimon attacks a player, you may suspend this Tamer to give that Digimon +2000 DP for the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: I attack my opponent with a Digimon, and suspend this Tamer. If my opponent uses <Blocker> to block the attack, what happens to the +2000 DP bonus from this Tamer's effect?",
					"A: This Tamer's effect is triggered once you declare your attack against another player, and is activated before your opponent uses <Blocker>. The +2000 DP bonus remains for the turn even if the target of attack changes.",
]
		is_parallel = true
		notes = "parallel promo Takenouchi Sora"

class BT2_084_C extends Card:
	func _init():
		name = "Sora Takenouchi"
		type = Type.TAMER
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-084 (C)"
		play_cost = 3
		effect_text = "[Your Turn] When one of your red Digimon attacks a player, you may suspend this Tamer to give that Digimon +2000 DP for the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: I attack my opponent with a Digimon, and suspend this Tamer. If my opponent uses <Blocker> to block the attack, what happens to the +2000 DP bonus from this Tamer's effect?",
					"A: This Tamer's effect is triggered once you declare your attack against another player, and is activated before your opponent uses <Blocker>. The +2000 DP bonus remains for the turn even if the target of attack changes.",
]
		is_parallel = true
		notes = "parallel promo Takenouchi Sora"

class BT2_085 extends Card:
	func _init():
		name = "Joe Kido"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-085"
		play_cost = 3
		effect_text = "[Your Turn] When one of your opponent's digivolution cards is trashed, you may suspend this Tamer to gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: You use an effect that reads \"Return 1 of your opponent's Digimon to their hand. Trash all of the digivolution cards of that Digimon\" to return an opponent's Digimon to their hand. When your opponent's digivolution cards are trashed as a result, can you activate this card's effect?",
					"A: No, you can't. \"Trash all of the digivolution cards of those Digimon\" is an explanation of what happens to the digivolution cards of the Digimon when it returns to their hand. It doesn't count as trashing digivolution for the purposes of this card's effect.",
					"Q: I use <De-Digivolve> while I have this Tamer in play. Can I use the effect of [BT2-085 Joe Kido]?",
					"A: No, you cannot activate the effect of [BT2-085 Joe Kido].",
					"Q: My opponent trashes a digivolution card with one of their effects like [BT5-111 Omnimon X] or <Digi-Burst>. Can I use this card's effect?",
					"A: Yes, you can.",
]
		notes = "Kido Jo"

class BT2_085_B extends Card:
	func _init():
		name = "Joe Kido"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-085 (B)"
		play_cost = 3
		effect_text = "[Your Turn] When one of your opponent's digivolution cards is trashed, you may suspend this Tamer to gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: You use an effect that reads \"Return 1 of your opponent's Digimon to their hand. Trash all of the digivolution cards of that Digimon\" to return an opponent's Digimon to their hand. When your opponent's digivolution cards are trashed as a result, can you activate this card's effect?",
					"A: No, you can't. \"Trash all of the digivolution cards of those Digimon\" is an explanation of what happens to the digivolution cards of the Digimon when it returns to their hand. It doesn't count as trashing digivolution for the purposes of this card's effect.",
					"Q: I use <De-Digivolve> while I have this Tamer in play. Can I use the effect of [BT2-085 Joe Kido]?",
					"A: No, you cannot activate the effect of [BT2-085 Joe Kido].",
					"Q: My opponent trashes a digivolution card with one of their effects like [BT5-111 Omnimon X] or <Digi-Burst>. Can I use this card's effect?",
					"A: Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo Kido Jo"

class BT2_085_C extends Card:
	func _init():
		name = "Joe Kido"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-085 (C)"
		play_cost = 3
		effect_text = "[Your Turn] When one of your opponent's digivolution cards is trashed, you may suspend this Tamer to gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: You use an effect that reads \"Return 1 of your opponent's Digimon to their hand. Trash all of the digivolution cards of that Digimon\" to return an opponent's Digimon to their hand. When your opponent's digivolution cards are trashed as a result, can you activate this card's effect?",
					"A: No, you can't. \"Trash all of the digivolution cards of those Digimon\" is an explanation of what happens to the digivolution cards of the Digimon when it returns to their hand. It doesn't count as trashing digivolution for the purposes of this card's effect.",
					"Q: I use <De-Digivolve> while I have this Tamer in play. Can I use the effect of [BT2-085 Joe Kido]?",
					"A: No, you cannot activate the effect of [BT2-085 Joe Kido].",
					"Q: My opponent trashes a digivolution card with one of their effects like [BT5-111 Omnimon X] or <Digi-Burst>. Can I use this card's effect?",
					"A: Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo Kido Jo"

class BT2_086 extends Card:
	func _init():
		name = "Rina Shinomiya"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT2-086"
		play_cost = 3
		effect_text = "[Your Turn] When one of your blue Digimon attacks, you may suspend this Tamer to give that Digimon +1000 DP for the turn.\n[On Play] Reveal 3 cards from the top of your deck. Add 1 Digimon Card with [Vee] in its name in its name among them to your hand. Place the remaining cards on the bottom of your deck in any order."
		sec_effect_text = "[Security] Play this card without paying its memory cost."

class BT2_087 extends Card:
	func _init():
		name = "Kari Kamiya"
		type = Type.TAMER
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-087"
		play_cost = 3
		effect_text = "[Start of Your Turn] If you have 3 or fewer security cards, gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Yagami Hikari"

class BT2_087_B extends Card:
	func _init():
		name = "Kari Kamiya"
		type = Type.TAMER
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-087 (B)"
		play_cost = 3
		effect_text = "[Start of Your Turn] If you have 3 or fewer security cards, gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		is_parallel = true
		notes = "parallel promo Yagami Hikari"

class BT2_087_C extends Card:
	func _init():
		name = "Kari Kamiya"
		type = Type.TAMER
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-087 (C)"
		play_cost = 3
		effect_text = "[Start of Your Turn] If you have 3 or fewer security cards, gain 1 memory."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		is_parallel = true
		notes = "parallel promo Yagami Hikari"

class BT2_088 extends Card:
	func _init():
		name = "Taiga"
		type = Type.TAMER
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT2-088"
		play_cost = 3
		effect_text = "[Your Turn] All of your Digimon with [Tyrannomon] in their name gain <Piercing> (When this Digimon attacks and deletes an opponent's Digimon and survives the battle, it performs any security checks it normally would).\n[Your Turn] When one of your Digimon would digivolve into a Digimon card in your hand with [Tyrannomon] in its name, you may suspend this Tamer to reduce the memory cost of the digivolution by 1."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: I digivolve a Digimon in my breeding area into a Digimon card with [Tyrannomon] in its name. Can I use this Tamer's effect to reduce the digivolution cost by 1?",
					"A: No, digivolving Digimon in your breeding area doesn't activate the effect that reduces digivolution cost by 1.",
					"Q: If I have two [BT2-088 Taiga]. Can I use its second effect to reduce the digivolution cost of a Digimon by 2 if I rest both Tamers?",
					"A: Yes, each copy of this Tamer may be be suspended to reduce the digivolution cost by 1 each. However, you cannot reduce the cost to less than 0.  (From Card Rulings:ST1-12/Card Rulings:ST2-12/Card Rulings:ST3-12, and Card Rulings:BT1-109)",
]

class BT2_089 extends Card:
	func _init():
		name = "Tai Kamiya"
		type = Type.TAMER
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-089"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[Opponent's Turn] All of your black Digimon get +1000 DP."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Yagami Taichi"

class BT2_089_B extends Card:
	func _init():
		name = "Tai Kamiya"
		type = Type.TAMER
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-089 (B)"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[Opponent's Turn] All of your black Digimon get +1000 DP."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		is_parallel = true
		notes = "parallel promo Yagami Taichi"

class BT2_089_C extends Card:
	func _init():
		name = "Tai Kamiya"
		type = Type.TAMER
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-089 (C)"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[Opponent's Turn] All of your black Digimon get +1000 DP."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		is_parallel = true
		notes = "parallel promo Yagami Taichi"

class BT2_090 extends Card:
	func _init():
		name = "Matt Ishida"
		type = Type.TAMER
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-090"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[On Play] Return 1 purple Digimon card or purple Option card from your trash to your hand."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Ishida Yamato"

class BT2_090_B extends Card:
	func _init():
		name = "Matt Ishida"
		type = Type.TAMER
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-090 (B)"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[On Play] Return 1 purple Digimon card or purple Option card from your trash to your hand."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		is_parallel = true
		notes = "parallel promo Ishida Yamato"

class BT2_090_C extends Card:
	func _init():
		name = "Matt Ishida"
		type = Type.TAMER
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-090 (C)"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[On Play] Return 1 purple Digimon card or purple Option card from your trash to your hand."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		is_parallel = true
		notes = "parallel promo Ishida Yamato"

class BT2_091 extends Card:
	func _init():
		name = "Volcanic Flare"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT2-091"
		play_cost = 3
		effect_text = "[Main] Delete 1 of your opponent's Digimon with 4000 DP or less."

class BT2_092 extends Card:
	func _init():
		name = "Radiation Blade"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT2-092"
		play_cost = 3
		effect_text = "[Main] Up to 2 of your Digimon gain <Security Attack +1> (This Digimon checks 1 additional security card) for the turn."
		notes = "Double Edge"

class BT2_093 extends Card:
	func _init():
		name = "Shield of the Just"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT2-093"
		play_cost = 6
		effect_text = "[Main] Delete 1 of your opponent's Digimon with 5000 DP or less. If you have a red Tamer in play, delete 1 of your opponent's Digimon with 8000 DP or less instead."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Final Elysion"

class BT2_094 extends Card:
	func _init():
		name = "Arctic Blizzard"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT2-094"
		play_cost = 2
		effect_text = "[Main] Choose 1 digivolution card on 1 of your opponent's Digimon and trash it. Then, 1 of your Digimon gets +2000 DP for the turn."
		sec_effect_text = "[Security] Add this card to your hand."
		ruling = [
					"Q: Can I use this card when my opponent has no digivolution cards to still get the +2000 DP?",
					"A: Yes, as trashing 1 of your opponent's digivolution cards is not a requirement, you get +2000 DP when using this card even when your opponent has no digivoltion cards. From Card Rulings:BT1-090",
]

class BT2_095 extends Card:
	func _init():
		name = "River of Power"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT2-095"
		play_cost = 3
		effect_text = "[Main] Return up to 3 of your opponent's level 3 Digimon to their hand. (Trash all of the digivolution cards of those Digimon.)"
		notes = "Ultimate Stream"

class BT2_096 extends Card:
	func _init():
		name = "The Ray of Victory"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = ""
		id = "BT2-096"
		play_cost = 5
		effect_text = "[Main] Return 1 of your opponent's level 5 or lower Digimon to their hand. (Trash all of the digivolution cards on that Digimon.) Then, if you have a blue Tamer in play, unsuspend 1 of your Digimon."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: When do the digivolution cards get trashed in the effect of [BT2-096 The Ray of Victory]? Does it get trashed before or after unsuspending a Digimon?",
					"A: The digivolution cards get trashed at the same time the Digimon is returned to the hand. So it gets returned to hand before unsuspending a Digimon.",
]
		notes = "シャイニングVフォース"

class BT2_097 extends Card:
	func _init():
		name = "Lightning Paw"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT2-097"
		play_cost = 3
		effect_text = "[Main] 3 of your opponent's level 3 Digimon get -4000 DP for the turn."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Neko Punch"

class BT2_098 extends Card:
	func _init():
		name = "Eden's Javelin"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT2-098"
		play_cost = 6
		effect_text = "[Main] Trigger <Draw 1> (Draw 1 card from your deck). Then, 1 of your opponent's Digimon gets -1000 DP for each card in your hand for the turn."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: If I have 2 or more cards in hand when I use this effect, can I give 2 or more different Digimon -1000 DP?",
					"A: No, this card's effect can only be activated against 1 of your opponent's Digimon. You can't use a single copy of this card to reduce the DP of multiple Digimon.",
]

class BT2_099 extends Card:
	func _init():
		name = "Glorious Burst"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT2-099"
		play_cost = 9
		effect_text = "Reduce the memory cost of this card in your hand by 1 for each yellow Tamer you have in play.\n[Main] 1 of your opponent's Digimon gets -12000 DP for the turn."
		ruling = [
					"Q: If this card is in my hand, and I have exactly 2 Yellow Tamers. Can I play this card with [BT6-112 BeelStarmon]'s [On Play] effect?",
					"A: Yes, you can. Hoewver, it cannot be taken from your trash by BeeleStarmon's [On Play] effect even if you have 2 Tamers.",
					"Q: If I use this card while I have 8 or more of my own yellow tamers and a [EX2-003 Viximon] in my Digimon's digivolution cards, will that card's inherited effect be triggered?",
					"A: No, in that case, since the usage cost of [BT2-099 Glorious Burst] has been changed to 1, it is not considered that an option card with a usage cost of 2 or more was used, so it will not be demonstrated.",
]

class BT2_100 extends Card:
	func _init():
		name = "Puppet Pummel"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT2-100"
		play_cost = 3
		effect_text = "[Main] Suspend 1 of your opponent's Digimon. Then 1 of your Digimon gets +2000 DP for the turn."
		notes = "Bullet Hammer"

class BT2_101 extends Card:
	func _init():
		name = "Cherry Blast"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT2-101"
		play_cost = 4
		effect_text = "[Main] Suspend all of your opponent's Digimon with 6000 DP or less."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Cherry Bomb"

class BT2_102 extends Card:
	func _init():
		name = "Terrors Cluster"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT2-102"
		play_cost = 7
		effect_text = "[Main] Return 1 of your opponent's suspended Digimon to the bottom of their deck. (Trash all of the digivolution cards of that Digimon.)"
		sec_effect_text = "[Security] Activate this card's [Main] effect."

class BT2_103 extends Card:
	func _init():
		name = "Spiral Sword"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-103"
		play_cost = 1
		effect_text = "[Main] 1 of your Digimon gets +3000 DP for the turn."
		sec_effect_text = "[Security] Unsuspend 1 of your Digimon with <Blocker>."

class BT2_104 extends Card:
	func _init():
		name = "Atomic Ray"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT2-104"
		play_cost = 3
		effect_text = "[Main] Unsuspend 1 of your Digimon with <Blocker>."
		sec_effect_text = "[Security] Unsuspend all of your Digimon with <Blocker> and they get +5000 DP for the turn."

class BT2_105 extends Card:
	func _init():
		name = "Spider Shooter"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT2-105"
		play_cost = 3
		effect_text = "[Main] Trigger <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Hell's Grenade"

class BT2_106 extends Card:
	func _init():
		name = "Infinity Cannon"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT2-106"
		play_cost = 6
		effect_text = "[Main] Trigger <De-Digivolve  4> on 1 of your opponent's Digimon (Trash up to 4 cards from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Mugen Cannon"

class BT2_107 extends Card:
	func _init():
		name = "Darkness Claw"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT2-107"
		play_cost = 1
		effect_text = "[Main] 1 of your Digimon gets +3000 DP for the turn."
		sec_effect_text = "[Security] Gain 2 memory."

class BT2_108 extends Card:
	func _init():
		name = "Night Raid"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-108"
		play_cost = 2
		effect_text = "[Main] Play 1 purple level 3 Digimon card from your trash without paying its memory cost. Any [On Play] effects on the Digimon played with this effect don't activate."
		sec_effect_text = "[Security] Activate this card's [Main] effect."

class BT2_109 extends Card:
	func _init():
		name = "Heat Viper"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT2-109"
		play_cost = 5
		effect_text = "[Main] You may delete 1 of your Digimon to delete up to 2 of your opponent's level 4 or lower Digimon."
		sec_effect_text = "[Security] Add this card to your hand."
		ruling = [
					"Q: Can I use this card's effect to delete a Digimon in my breeding area?",
					"A: No, you can't.",
					"Q: Can I play this Option and not use its effect because it has \"you may\"?",
					"A: Yes, you can play this card without using its effect.",
					"Q: If I delete [BT3-092 MaloMyotismon] with [BT2-109 Heat Viper]. Can I use that MaloMyotismon's effect to gain 2 memory?",
					"A: No, the effect of [BT3-092 MaloMyotismon] was not triggered because it was deleted first.",
]

class BT2_110 extends Card:
	func _init():
		name = "Trump Sword"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT2-110"
		play_cost = 7
		effect_text = "[Main] Delete 1 of your opponent's unsuspended Digimon."
		sec_effect_text = "[Security] Activate this card's [Main] effect."

class BT2_111 extends Card:
	func _init():
		name = "Beelzemon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SEC
		id = "BT2-111"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Demon Lord/Seven Great Demon Lords"
		power = 11000
		effect_text = "While you have 10 or more cards in your trash, your [Impmon] can digivolve into this card in your hand for a memory cost of 4, ignoring this card's digivolution requirements.\n[When Digivolving] Delete 1 of your opponent's level 4 or lower Digimon."
		ruling = [
					"Q: I have 10 or more cards in my trash. Can I digivolve an [Impmon] in my breeding area into this card?",
					"A: No, you can't use this card's effect to digivolve from an [Impmon] in your breeding area.",
]
		notes = "Beelzebumon"

class BT2_111_B extends Card:
	func _init():
		name = "Beelzemon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SEC
		id = "BT2-111 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Demon Lord/Seven Great Demon Lords"
		power = 11000
		effect_text = "While you have 10 or more cards in your trash, your [Impmon] can digivolve into this card in your hand for a memory cost of 4, ignoring this card's digivolution requirements.\n[When Digivolving] Delete 1 of your opponent's level 4 or lower Digimon."
		ruling = [
					"Q: I have 10 or more cards in my trash. Can I digivolve an [Impmon] in my breeding area into this card?",
					"A: No, you can't use this card's effect to digivolve from an [Impmon] in your breeding area.",
]
		is_parallel = true
		notes = "parallel promo Beelzebumon"

class BT2_112 extends Card:
	func _init():
		name = "BlackWarGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SEC
		id = "BT2-112"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dragonkin"
		power = 12000
		effect_text = "When you would play this card from your hand, if your opponent has a Digimon with 10000 DP or more in play, reduce the memory cost by 6.\n[When Attacking] When you attack your opponent's Digimon with the highest DP, unsuspend this Digimon."
		ruling = [
					"Q: This card's [When Attacking] effect refers to \"your opponent's Digimon with the highest DP.\" Does this strictly refer to my opponent's Digimon with the highest DP, or does it refer to when I attack an opponent's Digimon with the highest DP out of all Digimon in play, including my own?",
					"A: It refers strictly to your opponent's Digimon with the highest DP they control. The effect doesn't check the DP of your Digimon.",
					"Q: My opponent has multiple Digimon tied for highest DP. If I attack any one of them, does this card's [When Attacking] effect let me unsuspend this Digimon?",
					"A: Yes. If your opponent has multiple Digimon tied for highest DP, attacking any of them allows you to unsuspend this Digimon.",
					"Q: My opponent's Digimon with the highest DP is unsuspended. If I attack their suspended Digimon with the highest DP, can I unsuspend this Digimon?",
					"A: No, this Digimon's [When Attacking] effect only lets you unsuspend this Digimon when attacking your opponent's Digimon with the highest DP, regardless of whether it's suspended or not.",
					"Q: If this card's [When Attacking] effect attacks the Digimon with the highest DP, but my opponent uses <Blocker>, does this Digimon still unsuspend?",
					"A: The Digimon was already unsuspended before the opponent could use <Blocker>. (See more in Attack Resolution)",
					"Q: I attack my opponent's Digimon that does not have the highest DP. While this Digimon's [When Attacking] effect is pending activation, another effect causes the target of the attack to become the opponent's Digimon with the highest DP. Does the [When Attacking] effect activate?",
					"A: No. Unless the target of the attack is the opponent's Digimon with the highest DP at the time the attack is declared, this Digimon's [When Attacking] effect does not trigger at all, so it won't be pending activation. This card's condition is treated as \"when you attack your opponent's Digimon with the highest DP\".",
					"Q: I am at 0 memory but my opponent has a Digimon with 10,000 DP or more, can I play this card?",
					"A: Yes, its play cost has been reduced so you can play this card.",
]

class BT2_112_B extends Card:
	func _init():
		name = "BlackWarGreymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SEC
		id = "BT2-112 (B)"
		play_cost = 13
		level = 6
		stage_level = Stage.HYBRID
		attribute = Attribute.VIRUS
		digimon_type = "Dragonkin"
		power = 12000
		effect_text = "When you would play this card from your hand, if your opponent has a Digimon with 10000 DP or more in play, reduce the memory cost by 6.\n[When Attacking] When you attack your opponent's Digimon with the highest DP, unsuspend this Digimon."
		ruling = [
					"Q: This card's [When Attacking] effect refers to \"your opponent's Digimon with the highest DP.\" Does this strictly refer to my opponent's Digimon with the highest DP, or does it refer to when I attack an opponent's Digimon with the highest DP out of all Digimon in play, including my own?",
					"A: It refers strictly to your opponent's Digimon with the highest DP they control. The effect doesn't check the DP of your Digimon.",
					"Q: My opponent has multiple Digimon tied for highest DP. If I attack any one of them, does this card's [When Attacking] effect let me unsuspend this Digimon?",
					"A: Yes. If your opponent has multiple Digimon tied for highest DP, attacking any of them allows you to unsuspend this Digimon.",
					"Q: My opponent's Digimon with the highest DP is unsuspended. If I attack their suspended Digimon with the highest DP, can I unsuspend this Digimon?",
					"A: No, this Digimon's [When Attacking] effect only lets you unsuspend this Digimon when attacking your opponent's Digimon with the highest DP, regardless of whether it's suspended or not.",
					"Q: If this card's [When Attacking] effect attacks the Digimon with the highest DP, but my opponent uses <Blocker>, does this Digimon still unsuspend?",
					"A: The Digimon was already unsuspended before the opponent could use <Blocker>. (See more in Attack Resolution)",
					"Q: I attack my opponent's Digimon that does not have the highest DP. While this Digimon's [When Attacking] effect is pending activation, another effect causes the target of the attack to become the opponent's Digimon with the highest DP. Does the [When Attacking] effect activate?",
					"A: No. Unless the target of the attack is the opponent's Digimon with the highest DP at the time the attack is declared, this Digimon's [When Attacking] effect does not trigger at all, so it won't be pending activation. This card's condition is treated as \"when you attack your opponent's Digimon with the highest DP\".",
					"Q: I am at 0 memory but my opponent has a Digimon with 10,000 DP or more, can I play this card?",
					"A: Yes, its play cost has been reduced so you can play this card.",
]
		is_parallel = true
		notes = "parallel promo"

