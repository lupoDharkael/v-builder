# Content autogenerated. Data from digimoncardgame.fandom.com

static func register_cards():

	CardDB.register_booster("BT-06", "BT-06: Double Diamond")
	CardDB.add_card(BT6_001.new())
	CardDB.add_card(BT6_001_B.new())
	CardDB.add_card(BT6_002.new())
	CardDB.add_card(BT6_002_B.new())
	CardDB.add_card(BT6_003.new())
	CardDB.add_card(BT6_003_B.new())
	CardDB.add_card(BT6_004.new())
	CardDB.add_card(BT6_004_B.new())
	CardDB.add_card(BT6_005.new())
	CardDB.add_card(BT6_005_B.new())
	CardDB.add_card(BT6_006.new())
	CardDB.add_card(BT6_006_B.new())
	CardDB.add_card(BT6_007.new())
	CardDB.add_card(BT6_007_B.new())
	CardDB.add_card(BT6_008.new())
	CardDB.add_card(BT6_009.new())
	CardDB.add_card(BT6_010.new())
	CardDB.add_card(BT6_011.new())
	CardDB.add_card(BT6_012.new())
	CardDB.add_card(BT6_013.new())
	CardDB.add_card(BT6_014.new())
	CardDB.add_card(BT6_015.new())
	CardDB.add_card(BT6_016.new())
	CardDB.add_card(BT6_016_B.new())
	CardDB.add_card(BT6_017.new())
	CardDB.add_card(BT6_018.new())
	CardDB.add_card(BT6_018_B.new())
	CardDB.add_card(BT6_019.new())
	CardDB.add_card(BT6_019_B.new())
	CardDB.add_card(BT6_020.new())
	CardDB.add_card(BT6_021.new())
	CardDB.add_card(BT6_022.new())
	CardDB.add_card(BT6_023.new())
	CardDB.add_card(BT6_024.new())
	CardDB.add_card(BT6_025.new())
	CardDB.add_card(BT6_026.new())
	CardDB.add_card(BT6_027.new())
	CardDB.add_card(BT6_028.new())
	CardDB.add_card(BT6_029.new())
	CardDB.add_card(BT6_030.new())
	CardDB.add_card(BT6_030_B.new())
	CardDB.add_card(BT6_031.new())
	CardDB.add_card(BT6_032.new())
	CardDB.add_card(BT6_033.new())
	CardDB.add_card(BT6_033_B.new())
	CardDB.add_card(BT6_034.new())
	CardDB.add_card(BT6_035.new())
	CardDB.add_card(BT6_036.new())
	CardDB.add_card(BT6_037.new())
	CardDB.add_card(BT6_038.new())
	CardDB.add_card(BT6_039.new())
	CardDB.add_card(BT6_040.new())
	CardDB.add_card(BT6_041.new())
	CardDB.add_card(BT6_042.new())
	CardDB.add_card(BT6_043.new())
	CardDB.add_card(BT6_044.new())
	CardDB.add_card(BT6_044_B.new())
	CardDB.add_card(BT6_045.new())
	CardDB.add_card(BT6_046.new())
	CardDB.add_card(BT6_047.new())
	CardDB.add_card(BT6_047_B.new())
	CardDB.add_card(BT6_048.new())
	CardDB.add_card(BT6_049.new())
	CardDB.add_card(BT6_050.new())
	CardDB.add_card(BT6_051.new())
	CardDB.add_card(BT6_052.new())
	CardDB.add_card(BT6_053.new())
	CardDB.add_card(BT6_054.new())
	CardDB.add_card(BT6_055.new())
	CardDB.add_card(BT6_056.new())
	CardDB.add_card(BT6_057.new())
	CardDB.add_card(BT6_058.new())
	CardDB.add_card(BT6_059.new())
	CardDB.add_card(BT6_060.new())
	CardDB.add_card(BT6_061.new())
	CardDB.add_card(BT6_062.new())
	CardDB.add_card(BT6_063.new())
	CardDB.add_card(BT6_064.new())
	CardDB.add_card(BT6_064_B.new())
	CardDB.add_card(BT6_065.new())
	CardDB.add_card(BT6_066.new())
	CardDB.add_card(BT6_067.new())
	CardDB.add_card(BT6_067_B.new())
	CardDB.add_card(BT6_068.new())
	CardDB.add_card(BT6_068_B.new())
	CardDB.add_card(BT6_069.new())
	CardDB.add_card(BT6_070.new())
	CardDB.add_card(BT6_071.new())
	CardDB.add_card(BT6_072.new())
	CardDB.add_card(BT6_073.new())
	CardDB.add_card(BT6_074.new())
	CardDB.add_card(BT6_075.new())
	CardDB.add_card(BT6_076.new())
	CardDB.add_card(BT6_077.new())
	CardDB.add_card(BT6_078.new())
	CardDB.add_card(BT6_078_B.new())
	CardDB.add_card(BT6_079.new())
	CardDB.add_card(BT6_080.new())
	CardDB.add_card(BT6_081.new())
	CardDB.add_card(BT6_081_B.new())
	CardDB.add_card(BT6_082.new())
	CardDB.add_card(BT6_082_B.new())
	CardDB.add_card(BT6_083.new())
	CardDB.add_card(BT6_084.new())
	CardDB.add_card(BT6_084_B.new())
	CardDB.add_card(BT6_085.new())
	CardDB.add_card(BT6_086.new())
	CardDB.add_card(BT6_086_B.new())
	CardDB.add_card(BT6_087.new())
	CardDB.add_card(BT6_088.new())
	CardDB.add_card(BT6_089.new())
	CardDB.add_card(BT6_090.new())
	CardDB.add_card(BT6_091.new())
	CardDB.add_card(BT6_092.new())
	CardDB.add_card(BT6_093.new())
	CardDB.add_card(BT6_093_B.new())
	CardDB.add_card(BT6_094.new())
	CardDB.add_card(BT6_095.new())
	CardDB.add_card(BT6_096.new())
	CardDB.add_card(BT6_097.new())
	CardDB.add_card(BT6_098.new())
	CardDB.add_card(BT6_099.new())
	CardDB.add_card(BT6_100.new())
	CardDB.add_card(BT6_101.new())
	CardDB.add_card(BT6_102.new())
	CardDB.add_card(BT6_103.new())
	CardDB.add_card(BT6_104.new())
	CardDB.add_card(BT6_105.new())
	CardDB.add_card(BT6_106.new())
	CardDB.add_card(BT6_107.new())
	CardDB.add_card(BT6_108.new())
	CardDB.add_card(BT6_109.new())
	CardDB.add_card(BT6_109_B.new())
	CardDB.add_card(BT6_110.new())
	CardDB.add_card(BT6_111.new())
	CardDB.add_card(BT6_111_B.new())
	CardDB.add_card(BT6_111_C.new())
	CardDB.add_card(BT6_112.new())
	CardDB.add_card(BT6_112_B.new())

class BT6_001 extends Card:
	func _init():
		name = "DemiMeramon"
		type = Type.DIGITAMA
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-001"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Flame"
		inherited_effect_text = "[When Attacking] When this Digimon attacks a player, it gets +1000 DP for the turn."
		ruling = [
					"Q: A Digimon with this card in its digivolution cards attacks the player, and is blocked by the opponent's Digimon. Does this Digimon's effect activate in this case?",
					"A:  Yes, even if the attack is blocked, as long as the attack target was declared to be the player, the effect activates.",
]
		notes = "PetiMeramon"

class BT6_001_B extends Card:
	func _init():
		name = "DemiMeramon"
		type = Type.DIGITAMA
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-001 (B)"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Flame"
		inherited_effect_text = "[When Attacking] When this Digimon attacks a player, it gets +1000 DP for the turn."
		ruling = [
					"Q: A Digimon with this card in its digivolution cards attacks the player, and is blocked by the opponent's Digimon. Does this Digimon's effect activate in this case?",
					"A:  Yes, even if the attack is blocked, as long as the attack target was declared to be the player, the effect activates.",
]
		is_parallel = true
		notes = "parallel promo PetiMeramon"

class BT6_002 extends Card:
	func _init():
		name = "Kyaromon"
		type = Type.DIGITAMA
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-002"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When one of your opponent's digivolution cards is trashed, trigger <Draw 1> (Draw 1 card from your deck) ."
		ruling = [
					"Q: When my opponent's Digimon's digivolution card is trashed due to my effect of \"Return 1 of your opponent's Digimon to hand. That Digimon's digivolution cards are trashed\", can I use this card's effect?",
					"A:  No, you cannot. \"That Digimon's digivolution cards are trashed\" is just an explanation of what happens to the digivolution cards of the Digimon that was returned to hand. It does not count as an effect that trashes digivolution cards.",
					"Q: I use <De-Digivolve> while I have this Tamer in play. Can I use the [Your Turn] effect of this card?",
					"A: No, you cannot activate the effect of [BT2-085 Joe Kido].",
					"Q: My opponent trashes a digivolution card with one of their effects like [BT5-111 Omnimon X] or <Digi-Burst>. Can I use this card's effect?",
					"A: Yes, you can.",
]

class BT6_002_B extends Card:
	func _init():
		name = "Kyaromon"
		type = Type.DIGITAMA
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-002 (B)"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When one of your opponent's digivolution cards is trashed, trigger <Draw 1> (Draw 1 card from your deck) ."
		ruling = [
					"Q: When my opponent's Digimon's digivolution card is trashed due to my effect of \"Return 1 of your opponent's Digimon to hand. That Digimon's digivolution cards are trashed\", can I use this card's effect?",
					"A:  No, you cannot. \"That Digimon's digivolution cards are trashed\" is just an explanation of what happens to the digivolution cards of the Digimon that was returned to hand. It does not count as an effect that trashes digivolution cards.",
					"Q: I use <De-Digivolve> while I have this Tamer in play. Can I use the [Your Turn] effect of this card?",
					"A: No, you cannot activate the effect of [BT2-085 Joe Kido].",
					"Q: My opponent trashes a digivolution card with one of their effects like [BT5-111 Omnimon X] or <Digi-Burst>. Can I use this card's effect?",
					"A: Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_003 extends Card:
	func _init():
		name = "Bibimon"
		type = Type.DIGITAMA
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT6-003"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[When Attacking] (Once Per Turn) If you have 3 security cards, gain 1 memory."

class BT6_003_B extends Card:
	func _init():
		name = "Bibimon"
		type = Type.DIGITAMA
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT6-003 (B)"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[When Attacking] (Once Per Turn) If you have 3 security cards, gain 1 memory."
		is_parallel = true
		notes = "parallel promo"

class BT6_004 extends Card:
	func _init():
		name = "Pinamon"
		type = Type.DIGITAMA
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT6-004"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Chick"
		inherited_effect_text = "[When Attacking] (Once Per Turn) If you attack an opponent's Digimon, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: A Digimon with this card in its digivolution cards attacks the player, and is blocked by the opponent's Digimon. Does this Digimon's effect activate in this case?",
					"A:  No, even if the attack is blocked by a Digimon, as long as the attack target was declared to be the player, the effect does not activate.",
]

class BT6_004_B extends Card:
	func _init():
		name = "Pinamon"
		type = Type.DIGITAMA
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT6-004 (B)"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Chick"
		inherited_effect_text = "[When Attacking] (Once Per Turn) If you attack an opponent's Digimon, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: A Digimon with this card in its digivolution cards attacks the player, and is blocked by the opponent's Digimon. Does this Digimon's effect activate in this case?",
					"A:  No, even if the attack is blocked by a Digimon, as long as the attack target was declared to be the player, the effect does not activate.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_005 extends Card:
	func _init():
		name = "Pagumon"
		type = Type.DIGITAMA
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT6-005"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[On Deletion] Reveal the top card of your deck. Add it to your hand if it's a black Digimon card. Otherwise, place it at the bottom of your deck."

class BT6_005_B extends Card:
	func _init():
		name = "Pagumon"
		type = Type.DIGITAMA
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT6-005 (B)"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[On Deletion] Reveal the top card of your deck. Add it to your hand if it's a black Digimon card. Otherwise, place it at the bottom of your deck."
		is_parallel = true
		notes = "parallel promo"

class BT6_006 extends Card:
	func _init():
		name = "Tsunomon"
		type = Type.DIGITAMA
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-006"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When you trash a card in your hand using one of your effects, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: Does this card's inherited effect activate when I activate an effect like \"<Draw 1>, then trash 1 card from my hand\" ?",
					"A:  Yes it does.",
]

class BT6_006_B extends Card:
	func _init():
		name = "Tsunomon"
		type = Type.DIGITAMA
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-006 (B)"
		level = 2
		stage_level = Stage.IN_TRAINING
		digimon_type = "Lesser"
		inherited_effect_text = "[Your Turn] (Once Per Turn) When you trash a card in your hand using one of your effects, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: Does this card's inherited effect activate when I activate an effect like \"<Draw 1>, then trash 1 card from my hand\" ?",
					"A:  Yes it does.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_007 extends Card:
	func _init():
		name = "Agumon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-007"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[All Turns] (Once Per Turn) When you play a Tamer with [Tai Kamiya] in its name, gain 1 memory."
		inherited_effect_text = "[Your Turn] While this Digimon is [Agumon - Bond of Bravery], it gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		ruling = [
					"Q: If I have 2 of this Digimon in my Battle Area when I play a [Tai Kamiya], does that mean I get a total of gain 2 memory after activating each of their effects?",
					"A:  Yes, both Digimon's effects are activated so you get a total of gain 2 memory.",
					"Q: When my Tamer with [Tai Kamiya] in its name, is played by a [Security] effect, this Digimon's effect gives me Gain 1 memory and puts the Memory to 1 on my side, does it become my turn immediately?",
					"A:  No, the turn is only passed after that attack fully resolves.",
]

class BT6_007_B extends Card:
	func _init():
		name = "Agumon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-007 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[All Turns] (Once Per Turn) When you play a Tamer with [Tai Kamiya] in its name, gain 1 memory."
		inherited_effect_text = "[Your Turn] While this Digimon is [Agumon - Bond of Bravery], it gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		ruling = [
					"Q: If I have 2 of this Digimon in my Battle Area when I play a [Tai Kamiya], does that mean I get a total of gain 2 memory after activating each of their effects?",
					"A:  Yes, both Digimon's effects are activated so you get a total of gain 2 memory.",
					"Q: When my Tamer with [Tai Kamiya] in its name, is played by a [Security] effect, this Digimon's effect gives me Gain 1 memory and puts the Memory to 1 on my side, does it become my turn immediately?",
					"A:  No, the turn is only passed after that attack fully resolves.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_008 extends Card:
	func _init():
		name = "Shoutmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT6-008"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Mini Dragon"
		power = 2000
		inherited_effect_text = "[When Attacking] (Once Per Turn) If this Digimon has <Blitz>, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: For this card's inherited effect, must the attack be via the effect of <Blitz> in order to <Draw 1>?",
					"A:  No, as long as the Digimon has this card in its digivolution cards, <Draw 1> activates even if the attack is not via the effect of <Blitz>.",
]

class BT6_009 extends Card:
	func _init():
		name = "Huckmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT6-009"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Mini Dragon"
		power = 2000
		effect_text = "[On Play] Reveal the top 5 cards of your deck. Add up to 2 Digimon cards with [Huckmon], [Jesmon] or [Sistermon] in their name among them to your hand. Place the remaining cards at the bottom of your deck in any order."
		ruling = [
					"Q: For this cards' effect, if I reveal 2 of the same card with [Huckmon], [Jesmon] or [Sistermon] in their name, can I add both of them to my hand?",
					"A:  Yes you can.",
]
		notes = "Hackmon"

class BT6_010 extends Card:
	func _init():
		name = "Flamemon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-010"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VARIABLE
		digimon_type = "Wizard"
		power = 3000
		inherited_effect_text = "[Your Turn] While this Digimon has [Hybrid] or [Ten Warriors] in its form or type, it gains <Piercing> (When this Digimon attacks and deletes an opponent's Digimon and survives the battle, it performs any security checks it normally would)."
		notes = "Flamon"

class BT6_011 extends Card:
	func _init():
		name = "BaoHuckmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT6-011"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digimon_type = "Dinosaur"
		power = 6000
		inherited_effect_text = "[When Attacking] (Once Per Turn) If you have a Digimon with [Sistermon] in its name in play, delete 1 of your opponent's Digimon with 5000 DP or less."
		ruling = [
					"Q: If I have 2 Digimon with [Sistermon] in their name in play, do I get to delete 2 of my opponent's Digimon with 5000 DP or lower with this card's effect?",
					"A:  No, regardless of how many Digimon with [Sistermon] in its name you have in play, you only delete 1 of your opponent's Digimon with this effect.",
]

class BT6_012 extends Card:
	func _init():
		name = "Deltamon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT6-012"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Composite"
		power = 7000

class BT6_013 extends Card:
	func _init():
		name = "Megadramon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT6-013"
		play_cost = 6
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 4
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "[Your Turn] This Digimon is also treated as black."
		inherited_effect_text = "[Your Turn] This Digimon gets +2000 DP."
		ruling = [
					"Q: Can I digivolve this Digimon into a Digimon with a digivolution requirement of “Black, level 5”?",
					"A:  Yes you can, as this Digimon is also treated as a Black Digimon on your turn.",
					"Q: When this card is in my Breeding Area, can I digivolve it into a Digimon that digivolves from a Black Digimon?",
					"A:  No, as [Your Turn] effects do not activate in the Breeding Area, this card is not treated as a Black Digimon in your Breeding Area.",
]

class BT6_014 extends Card:
	func _init():
		name = "Asuramon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT6-014"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VACCINE
		digimon_type = "Wizard"
		power = 8000
		effect_text = "[When Digivolving] <Blitz> (If your opponent has 1 or more memory, this Digimon may attack)."

class BT6_015 extends Card:
	func _init():
		name = "SaviorHuckmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-015"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Dragonkin"
		power = 7000
		effect_text = "[When Digivolving] You may play a Digimon card with [Sistermon] in its name from your hand without paying its memory cost."
		inherited_effect_text = "[When Attacking] (Once Per Turn) If you have a Digimon card with [Sistermon] in its name in play, unsuspend this Digimon."

class BT6_016 extends Card:
	func _init():
		name = "Jesmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT6-016"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Warrior/Royal Knight"
		power = 11000
		effect_text = "[When Attacking] You may play 1 Digimon card with [Sistermon] in its name from your hand or trash without paying its memory cost.\n[Your Turn] (Once Per Turn) When you play another Digimon, this Digimon gets +3000 DP and gains <Piercing> for the turn. (When this Digimon attacks and deletes an opponent's Digimon and survives the battle, it performs any security checks it normally would)"
		ruling = [
					"Q: When this Digimon attacks and plays a Digimon with [Sistermon] in its name, does that Digimon being played also activate this Digimon's [Your Turn] effect?",
					"A:  Yes it does.",
]

class BT6_016_B extends Card:
	func _init():
		name = "Jesmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT6-016 (B)"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Warrior/Royal Knight"
		power = 11000
		effect_text = "[When Attacking] You may play 1 Digimon card with [Sistermon] in its name from your hand or trash without paying its memory cost.\n[Your Turn] (Once Per Turn) When you play another Digimon, this Digimon gets +3000 DP and gains <Piercing> for the turn. (When this Digimon attacks and deletes an opponent's Digimon and survives the battle, it performs any security checks it normally would)"
		ruling = [
					"Q: When this Digimon attacks and plays a Digimon with [Sistermon] in its name, does that Digimon being played also activate this Digimon's [Your Turn] effect?",
					"A:  Yes it does.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_017 extends Card:
	func _init():
		name = "MagnaKidmon"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT6-017"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Dragonkin/Three Musketeers"
		power = 11000
		effect_text = "<Security Attack +1> (This Digimon checks 1 additional security card).\n[When Digivolving] You may use 1 Option card with a memory cost of 7 in your hand without paying its memory cost. If you don't, delete 1 of your opponent's Digimon with 4000 DP or less."
		ruling = [
					"Q: When I digivolve into this Digimon, can I intentionally not use a Cost 7 Option Card so that I can delete 1 of my opponent's 4000 DP or lower Digimon?",
					"A:  Yes, as using the Option Card or not is up to you. As long as no Option Cards were used by this effect, you delete 1 of your opponent's 4000 DP or lower Digimon.",
					"Q: When I use a Cost 7 Option Card from this Digimon's [When Digivolving] effect, do I ignore the colour restriction?",
					"A:  No, you cannot ignore the colour restriction.",
]

class BT6_018 extends Card:
	func _init():
		name = "Agumon - Bond of Bravery"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT6-018"
		play_cost = 14
		level = 7
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digimon_type = "Unknown"
		power = 14000
		effect_text = "[When Attacking] If you have a Tamer in play, delete 1 of your opponent's Digimon with 13000 DP or less.\n[Your Turn] (Once Per Turn) When an opponent's Digimon is deleted, trash the top card of their security stack."
		ruling = [
					"Q: When I use this card's [When Attacking] effect to delete 1 of my opponent's 13000 DP or lower Digimon, does this card's [Your Turn] effect also activate and trash 1 of my opponent's security cards from the top?",
					"A:  Yes it does.",
					"Q: When my opponent only has 1 security card left, and this Digimon attacks, and trashes that security card with its [Your Turn] effect, leaving my opponent with 0 security cards, do I win the game if that same attack is not blocked?",
					"A:  Yes, you win the game.",
]
		notes = "Agumon -Bond of Courage-"

class BT6_018_B extends Card:
	func _init():
		name = "Agumon - Bond of Bravery"
		type = Type.DIGIMON
		color = ColorGroup.RED
		rarity = Rarity.SR
		id = "BT6-018 (B)"
		play_cost = 14
		level = 7
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digimon_type = "Unknown"
		power = 14000
		effect_text = "[When Attacking] If you have a Tamer in play, delete 1 of your opponent's Digimon with 13000 DP or less.\n[Your Turn] (Once Per Turn) When an opponent's Digimon is deleted, trash the top card of their security stack."
		ruling = [
					"Q: When I use this card's [When Attacking] effect to delete 1 of my opponent's 13000 DP or lower Digimon, does this card's [Your Turn] effect also activate and trash 1 of my opponent's security cards from the top?",
					"A:  Yes it does.",
					"Q: When my opponent only has 1 security card left, and this Digimon attacks, and trashes that security card with its [Your Turn] effect, leaving my opponent with 0 security cards, do I win the game if that same attack is not blocked?",
					"A:  Yes, you win the game.",
]
		is_parallel = true
		notes = "parallel promo Agumon -Bond of Courage-"

class BT6_019 extends Card:
	func _init():
		name = "Gabumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-019"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[All Turns] (Once Per Turn) When you play a Tamer with [Matt Ishida] in its name, gain 1 memory."
		inherited_effect_text = "[When Attacking] If this Digimon is [Gabumon - Bond of Friendship], you may unsuspend it."
		ruling = [
					"Q: If I have 2 of this Digimon in my Battle Area when I play a [Matt Ishida], does that mean I get a total of gain 2 memory after activating each of their effects?",
					"A:  Yes, both Digimon's effects are activated so you get a total of gain 2 memory.",
					"Q: When my Tamer with [Matt Ishida] in its name is played by a [Security] effect, this Digimon's effect gives me gain 1 memory and puts the memory to 1 on my side, does it become my turn immediately?",
					"A:  No, the turn is only passed after that attack fully resolves.",
]

class BT6_019_B extends Card:
	func _init():
		name = "Gabumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-019 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Reptile"
		power = 2000
		effect_text = "[All Turns] (Once Per Turn) When you play a Tamer with [Matt Ishida] in its name, gain 1 memory."
		inherited_effect_text = "[When Attacking] If this Digimon is [Gabumon - Bond of Friendship], you may unsuspend it."
		ruling = [
					"Q: If I have 2 of this Digimon in my Battle Area when I play a [Matt Ishida], does that mean I get a total of gain 2 memory after activating each of their effects?",
					"A:  Yes, both Digimon's effects are activated so you get a total of gain 2 memory.",
					"Q: When my Tamer with [Matt Ishida] in its name is played by a [Security] effect, this Digimon's effect gives me gain 1 memory and puts the memory to 1 on my side, does it become my turn immediately?",
					"A:  No, the turn is only passed after that attack fully resolves.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_020 extends Card:
	func _init():
		name = "Gizamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-020"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Sea Animal"
		power = 2000
		inherited_effect_text = "[Your Turn] While your opponent has no Digimon with digivolution cards in play, this Digimon gets +2000 DP."
		ruling = [
					"Q: Does this card's inherited effect activate when my opponent does not have any Digimon at all in their Battle Area?",
					"A:  Yes it does.",
]

class BT6_021 extends Card:
	func _init():
		name = "ModokiBetamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-021"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Amphibian"
		power = 2000
		effect_text = "[All Turns] Your opponent can't gain memory except with Tamer effects."
		ruling = [
					"Q: My opponent has this card in play. Do I gain memory from [ST2-13 Hammer Spark]'s [Security] effect?",
					"A: No, you don't gain any memory from it.",
					"Q: When my opponent has this Digimon on their side, what happens to the \"[When Attacking] Gain 3 memory. At the end of the turn, lose 3 memory\" effects of [BT1-090 Gravity Crush], [BT1-021 MetalGreymon], [BT1-040 WereGarurumon], and [BT1-058 Chirinmon]?",
					"A: Memory gain effects of the cards do not happen, but the memory loss effects are still able to activate. So at the end of the turn, the memory loss of the specified amount will happen. The memory effects above are mandatory.",
					"Q: I have this card in play and use the effect of a card like [BT1-090 Gravity Crush], [BT1-021 MetalGreymon], [BT1-040 WereGarurumon], [BT1-058 Chirinmon], or [BT1-075 Digitamamon]. Does my opponent still gain memory from my card effect?",
					"A: Yes, you can still lose memory from effects even if your opponent cannot gain memory.",
					"Q: I have this card in play and my opponent has [BT3-092 MaloMyotismon]. My opponent plays [BT2-077 Kimeramon] and deletes 1 of their Digimon and this card. Does my opponent gain memory with [BT3-092 MaloMyotismon]'s effect?",
					"A: Yes, this card's [Your Turn] effect is no longer active when MaloMyotismon's effect resolves.",
					"Q: If my opponent has a Digimon with [BT7-087 Koji Minamoto] in its digivolution cards. Does my opponent gain memory from that Tamer's effect when I have this card in play?",
					"A: No, that Tamer's inherited effect is treated as a Digimon's effect.",
]

class BT6_022 extends Card:
	func _init():
		name = "Strabimon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-022"
		play_cost = 4
		level = 3
		stage_level = Stage.HYBRID
		attribute = Attribute.VARIABLE
		digimon_type = "Beastkin"
		power = 3000
		inherited_effect_text = "[When Attacking] (Once Per Turn) If this Digimon has [Hybrid] or [Ten Warriors] in its form or type, gain 1 memory."

class BT6_023 extends Card:
	func _init():
		name = "Octomon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-023"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Mollusk"
		power = 7000

class BT6_024 extends Card:
	func _init():
		name = "Mojyamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-024"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digimon_type = "Rare Animal"
		power = 5000
		effect_text = "[Your Turn] While your opponent has no Digimon with digivolution cards in play, this Digimon gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon)."
		inherited_effect_text = "[When Attacking] Trash 1 digivolution card from the bottom of 1 of your opponent's Digimon."
		ruling = [
					"Q: Does this card's effect activate when my opponent does not have any Digimon at all in their Battle Area?",
					"A:  Yes it does.",
]

class BT6_025 extends Card:
	func _init():
		name = "Panjyamon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-025"
		play_cost = 5
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Beastkin"
		power = 6000
		inherited_effect_text = "[When Attacking] (Once Per Turn) Gain 1 memory."

class BT6_026 extends Card:
	func _init():
		name = "Dragomon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-026"
		play_cost = 6
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Aquabeast"
		power = 7000
		effect_text = "[When Digivolving] Return 1 of your opponent's level 4 or lower Digimon with no digivolution cards to its owner's hand."

class BT6_027 extends Card:
	func _init():
		name = "Majiramon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT6-027"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Holy Dragon/Deva"
		power = 7000
		effect_text = "[When Digivolving] Trash 1 digivolution card from the top of 1 of your opponent's Digimon."
		inherited_effect_text = "[When Attacking] (Once Per Turn) If your opponent has no Digimon with digivolution cards in play, unsuspend this Digimon."
		ruling = [
					"Q: Does this card's inherited effect activate when my opponent does not have any Digimon at all in their Battle Area?",
					"A:  Yes it does.",
]

class BT6_028 extends Card:
	func _init():
		name = "Pukumon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-028"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 11000
		effect_text = "[Main] <Digi-Burst 2> (You may trash 2 of this Digimon's digivolution cards to activate the effect below).\n・Your Digimon can't be blocked by your opponent's Digimon this turn."
		ruling = [
					"Q: What does “All of your Digimon cannot be blocked by your opponent's Digimon” mean exactly?",
					"A:  When your Digimon attack, your opponent cannot redirect the attack when activating <Blocker>.",
					"Q: Can my opponent still suspend their Digimon with <Blocker>?",
					"A: Yes, the Digimon can still be suspended but the attack will not be redirected.",
]

class BT6_029 extends Card:
	func _init():
		name = "Azulongmon"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "BT6-029"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Dragon/Four Great Dragons/Four Sovereigns"
		power = 13000
		effect_text = "[When Digivolving] Trash 1 digivolution card from the bottom of all of your opponent's Digimon. Then, gain 1 memory for each of your opponent's Digimon with no digivolution cards.\n[Your Turn] For each Digimon with no digivolution cards your opponent has in play, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		ruling = [
					"Q: If my opponent has no Digimon in play but reveals a [ST8-06 Coredramon] from this card's security check, does this card check another Security card?",
					"A: Yes, it gains <Security Attack +1> from its effect and updates its security attack value. You re-calculate its security attack and continue checking security based on its new security attack. (For more information see Attack Resolution)",
]
		notes = "Qinglongmon"

class BT6_030 extends Card:
	func _init():
		name = "Gabumon - Bond of Friendship"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "BT6-030"
		play_cost = 14
		level = 7
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digimon_type = "Unknown"
		power = 14000
		effect_text = "[When Attacking] (Once Per Turn) If you have a Tamer in play, you may unsuspend this Digimon.\n[When Attacking] Return 1 of your opponent's level 5 or lower Digimon to the bottom of its owner's deck. Trash all of the digivolution cards of that Digimon."

class BT6_030_B extends Card:
	func _init():
		name = "Gabumon - Bond of Friendship"
		type = Type.DIGIMON
		color = ColorGroup.BLUE
		rarity = Rarity.SR
		id = "BT6-030 (B)"
		play_cost = 14
		level = 7
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digimon_type = "Unknown"
		power = 14000
		effect_text = "[When Attacking] (Once Per Turn) If you have a Tamer in play, you may unsuspend this Digimon.\n[When Attacking] Return 1 of your opponent's level 5 or lower Digimon to the bottom of its owner's deck. Trash all of the digivolution cards of that Digimon."
		is_parallel = true
		notes = "parallel promo"

class BT6_031 extends Card:
	func _init():
		name = "Tinkermon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-031"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Fairy"
		power = 2000
		effect_text = "[On Deletion] 1 of your opponent's Digimon gains <Security Attack -1> (This Digimon checks 1 fewer security card) until the next time your opponent's turn ends."
		ruling = [
					"Q: If this card's [On Deletion] effect is activated on my opponent's turn, when does the <Security Attack -1> end?",
					"A: It ends when the current turn ends.",
]

class BT6_032 extends Card:
	func _init():
		name = "Tapirmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-032"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Holy Beast"
		power = 2000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When a card is removed from your security stack, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: If I have 2 Digimon with this card in their digivolution cards in my Battle Area when 1 card is removed from your security stack, do I get a total of 2 cards after activating each of their <Draw 1> effect?",
					"A:  Yes, both Digimon's effects are activated so you get to draw a total of 2 cards.",
]
		notes = "Bakumon"

class BT6_033 extends Card:
	func _init():
		name = "Pulsemon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT6-033"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Beastkin"
		power = 2000
		effect_text = "[On Play] You may trash cards from the top of your security stack until there are 3 left; gain 1 memory for each security card trashed."
		inherited_effect_text = "[Your Turn] While you have 3 security cards, this Digimon gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon)."
		ruling = [
					"Q: Must I trash cards from the top of your security stack until there are 3 left from this card's [On Play] effect?",
					"A:  No, as this card's [On Play] effect says \"You may trash\", whether you trash cards from the top of your security stack or not is up to you.",
					"Q: What happens to this card's [On Play] effect when I have 3 or fewer security cards?",
					"A:  As you cannot trash any security cards, nothing happens.",
					"Q: When I have 5 security cards, can I choose to only trash 1 security card and gin 1 memory with this card's [On Play] effect?",
					"A:  Yes you can.",
]

class BT6_033_B extends Card:
	func _init():
		name = "Pulsemon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT6-033 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Beastkin"
		power = 2000
		effect_text = "[On Play] You may trash cards from the top of your security stack until there are 3 left; gain 1 memory for each security card trashed."
		inherited_effect_text = "[Your Turn] While you have 3 security cards, this Digimon gains <Jamming> (This Digimon can't be deleted in battles against Security Digimon)."
		ruling = [
					"Q: Must I trash cards from the top of your security stack until there are 3 left from this card's [On Play] effect?",
					"A:  No, as this card's [On Play] effect says \"You may trash\", whether you trash cards from the top of your security stack or not is up to you.",
					"Q: What happens to this card's [On Play] effect when I have 3 or fewer security cards?",
					"A:  As you cannot trash any security cards, nothing happens.",
					"Q: When I have 5 security cards, can I choose to only trash 1 security card and gin 1 memory with this card's [On Play] effect?",
					"A:  Yes you can.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_034 extends Card:
	func _init():
		name = "Wizardmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT6-034"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digimon_type = "Wizard"
		power = 4000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When a card is removed from your security stack, gain 1 memory."
		ruling = [
					"Q: Does this card's inherited effect activate even if a card is removed from my security stack because of my own effects?",
					"A:  Yes it does.",
]
		notes = "Wizarmon"

class BT6_035 extends Card:
	func _init():
		name = "Baluchimon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-035"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digimon_type = "Holy Beast"
		power = 5000
		effect_text = "[On Play] If you have 3 or fewer security cards, trigger <Draw 2> (Draw 2 cards from your deck)."

class BT6_036 extends Card:
	func _init():
		name = "Mimicmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT6-036"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Mutant"
		power = 3000
		effect_text = "[On Play] If you have 3 or fewer security cards, gain 2 memory."

class BT6_037 extends Card:
	func _init():
		name = "Bulkmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-037"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digimon_type = "Dragonkin"
		power = 5000
		effect_text = "[Your Turn] While you have 3 or more security cards, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."

class BT6_038 extends Card:
	func _init():
		name = "Apemon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-038"
		play_cost = 6
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digimon_type = "Beastkin"
		power = 8000
		notes = "Hanumon"

class BT6_039 extends Card:
	func _init():
		name = "Mammothmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-039"
		play_cost = 5
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VACCINE
		digimon_type = "Ancient Animal"
		power = 6000
		inherited_effect_text = "[All Turns] While you have 3 or fewer security cards, this Digimon gets +1000 DP."
		notes = "Mammon"

class BT6_040 extends Card:
	func _init():
		name = "Mistymon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-040"
		play_cost = 6
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Magic Warrior"
		power = 7000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When a card is removed from your security stack, 1 of your opponent's Digimon gets -2000 DP for the turn."
		ruling = [
					"Q: Does this card's inherited effect activate even if a card is removed from my security stack because of my own effects?",
					"A:  Yes it does.",
]

class BT6_041 extends Card:
	func _init():
		name = "Manticoremon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT6-041"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Dark Animal"
		power = 7000
		effect_text = "[When Attacking] You may trash the top card of your security stack to have 1 of your opponent's Digimon get -5000 DP for the turn."
		ruling = [
					"Q: When I have 0 security cards, can I still activate this card's effect?",
					"A:  No, as the effect requires you to \"trash the top card of your security stack\" to activate, if you cannot trash the top card of your security stack, the effect cannot activate.",
]

class BT6_042 extends Card:
	func _init():
		name = "Babamon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT6-042"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 5
		digimon_type = "Ancient"
		power = 10000
		effect_text = "[On Deletion] You may play 1 [Rosemon] or up to 2 yellow level of 3 Digimon Cards from your trash without paying their memory costs."

class BT6_043 extends Card:
	func _init():
		name = "SkullMammothmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-043"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digimon_type = "Undead"
		power = 11000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead)\n[All Turns] While you have 3 or fewer security cards, this Digimon gets +2000 DP."
		notes = "SkullMammon"

class BT6_044 extends Card:
	func _init():
		name = "Dynasmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "BT6-044"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Warrior/Royal Knight"
		power = 12000
		effect_text = "[When Digivolving] You may trash the top card of your security stack to reveal the top 6 cards of your deck. Add up to 2 level 6 or lower Digimon cards among them to your hand. Trash the remaining cards.\n[All Turns] (Once Per Turn) When a card is removed from your security stack, if you have 3 or fewer security cards, trigger <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack)."
		ruling = [
					"Q: When I digivolve into this Digimon, must I trash the top card of my security stack because off this card's [When Digivolving] effect?",
					"A:  No, as this card's [When Digivolving] effect says \"You may trash\", it is up to your choice.",
					"Q: Can this card's [When Digivolving] effect activate when I have 0 security cards?",
					"A:  No, as the effect requires you to \"trash the top card of your security stack\" to activate, if you cannot trash security cards, the effect cannot activate.",
					"Q: After using this card's [When Digivolving] effect, my security is then at 3 or less. Does this card's [All Turns] effect then take effect?",
					"A:  Yes it does.",
					"Q: When I have this Digimon in my Battle Area, my opponent's Digimon checks [BT1-107 Holy Wave] from my Security, and I gain 1 card from my Security Stack from the [Security] effect. Although the number of Security cards I end up with is the same, can I <Recovery +1 (Deck)> with its [All Turns] effect?",
					"A: Yes, as your Security Stack was reduced once, you can. However, in order to <Recovery +1 (Deck)> your security must be at 3 or less after the resolution of [BT1-107 Holy Wave]'s effect. (See more in Attack Resolution)",
					"Q: When I have this Digimon in my Battle Area, and I Play [BT1-087 T.K. Takaishi] and activate its [On Play] effect to add a Yellow Card from my Security to Hand, then activate <Recovery +1 (Deck)>. Although the number of Security cards I end up with is the same, can I <Recovery +1 (Deck)> with its [All Turns] effect?",
					"A: Yes, as your Security was reduced once, you can. However, in order to <Recovery +1 (Deck)> your security must be at 3 or less after the resolution of [BT1-087 T.K. Takaishi]'s effect. (See more in Activation#Activation Conditions)",
					"Q: When my Security is reduced by being trashed from effects, like of Digimon like [BT2-020 Gallantmon] etc. instead of from Security Check, does this card's [All Turns] effect still activate?",
					"A: Yes, it does.",
					"Q: Can I use this card's [All Turns] effect when I reduce my Security Stack by my own card's effects like [BT4-104 Blinding Ray] etc?",
					"A: Yes, you can.",
					"Q: I have 2 or more copies of this Digimon in play. My opponent attacks with a Digimon, removing a card from my security stack. Do all of the effects on copies of this Digimon activate simultaneously, activating for each one?",
					"A: Fundamentally, this is possible. However, the effects don’t activate simultaneously, but one at a time in any order. Once one results in you having 4 cards in your security stack, any remaining copies of the effect don’t activate. Any [BT6-044 Dynasmon] whose effects failed to activate can still be activated later in the turn. (They don’t count toward the (Once Per Turn) limit.)",
					"Q: I check a card with a [Security] effect. Can I choose to use this card's effect first before the [Security] effect?",
					"A: No, you cannot. The [Security] effect must be activated before [All Turns]'s effect.",
]

class BT6_044_B extends Card:
	func _init():
		name = "Dynasmon"
		type = Type.DIGIMON
		color = ColorGroup.YELLOW
		rarity = Rarity.SR
		id = "BT6-044 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Warrior/Royal Knight"
		power = 12000
		effect_text = "[When Digivolving] You may trash the top card of your security stack to reveal the top 6 cards of your deck. Add up to 2 level 6 or lower Digimon cards among them to your hand. Trash the remaining cards.\n[All Turns] (Once Per Turn) When a card is removed from your security stack, if you have 3 or fewer security cards, trigger <Recovery +1 (Deck)> (Place the top card of your deck on top of your security stack)."
		ruling = [
					"Q: When I digivolve into this Digimon, must I trash the top card of my security stack because off this card's [When Digivolving] effect?",
					"A:  No, as this card's [When Digivolving] effect says \"You may trash\", it is up to your choice.",
					"Q: Can this card's [When Digivolving] effect activate when I have 0 security cards?",
					"A:  No, as the effect requires you to \"trash the top card of your security stack\" to activate, if you cannot trash security cards, the effect cannot activate.",
					"Q: After using this card's [When Digivolving] effect, my security is then at 3 or less. Does this card's [All Turns] effect then take effect?",
					"A:  Yes it does.",
					"Q: When I have this Digimon in my Battle Area, my opponent's Digimon checks [BT1-107 Holy Wave] from my Security, and I gain 1 card from my Security Stack from the [Security] effect. Although the number of Security cards I end up with is the same, can I <Recovery +1 (Deck)> with its [All Turns] effect?",
					"A: Yes, as your Security Stack was reduced once, you can. However, in order to <Recovery +1 (Deck)> your security must be at 3 or less after the resolution of [BT1-107 Holy Wave]'s effect. (See more in Attack Resolution)",
					"Q: When I have this Digimon in my Battle Area, and I Play [BT1-087 T.K. Takaishi] and activate its [On Play] effect to add a Yellow Card from my Security to Hand, then activate <Recovery +1 (Deck)>. Although the number of Security cards I end up with is the same, can I <Recovery +1 (Deck)> with its [All Turns] effect?",
					"A: Yes, as your Security was reduced once, you can. However, in order to <Recovery +1 (Deck)> your security must be at 3 or less after the resolution of [BT1-087 T.K. Takaishi]'s effect. (See more in Activation#Activation Conditions)",
					"Q: When my Security is reduced by being trashed from effects, like of Digimon like [BT2-020 Gallantmon] etc. instead of from Security Check, does this card's [All Turns] effect still activate?",
					"A: Yes, it does.",
					"Q: Can I use this card's [All Turns] effect when I reduce my Security Stack by my own card's effects like [BT4-104 Blinding Ray] etc?",
					"A: Yes, you can.",
					"Q: I have 2 or more copies of this Digimon in play. My opponent attacks with a Digimon, removing a card from my security stack. Do all of the effects on copies of this Digimon activate simultaneously, activating for each one?",
					"A: Fundamentally, this is possible. However, the effects don’t activate simultaneously, but one at a time in any order. Once one results in you having 4 cards in your security stack, any remaining copies of the effect don’t activate. Any [BT6-044 Dynasmon] whose effects failed to activate can still be activated later in the turn. (They don’t count toward the (Once Per Turn) limit.)",
					"Q: I check a card with a [Security] effect. Can I choose to use this card's effect first before the [Security] effect?",
					"A: No, you cannot. The [Security] effect must be activated before [All Turns]'s effect.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_045 extends Card:
	func _init():
		name = "Bakomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT6-045"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 2000
		inherited_effect_text = "[When Attacking] If your opponent has 2 or more suspended Digimon, gain 1 memory."

class BT6_046 extends Card:
	func _init():
		name = "Pomumon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT6-046"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.DATA
		digimon_type = "Vegetation"
		power = 5000

class BT6_047 extends Card:
	func _init():
		name = "Morphomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT6-047"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Insectoid"
		power = 1000
		effect_text = "[On Deletion] Reveal the top 5 cards of your deck. Add 1 [Menoa Bellucci] Tamer card and 1 Digimon card with [Eosmon] in its name among them to your hand.  Place the remaining cards at the bottom of your deck in any order."
		ruling = [
					"Q: For this card's effect, must both 1 [Menoa Bellucci] Tamer card and 1 Digimon card with [Eosmon] in its name be revealed among the 5 cards to be able to add them to my hand?",
					"A:  No, if only either 1 of them are revealed, you can add just that to your hand.",
]

class BT6_047_B extends Card:
	func _init():
		name = "Morphomon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT6-047 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Insectoid"
		power = 1000
		effect_text = "[On Deletion] Reveal the top 5 cards of your deck. Add 1 [Menoa Bellucci] Tamer card and 1 Digimon card with [Eosmon] in its name among them to your hand.  Place the remaining cards at the bottom of your deck in any order."
		ruling = [
					"Q: For this card's effect, must both 1 [Menoa Bellucci] Tamer card and 1 Digimon card with [Eosmon] in its name be revealed among the 5 cards to be able to add them to my hand?",
					"A:  No, if only either 1 of them are revealed, you can add just that to your hand.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_048 extends Card:
	func _init():
		name = "Parasaurmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT6-048"
		play_cost = 3
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Dinosaur"
		power = 5000

class BT6_049 extends Card:
	func _init():
		name = "Arbormon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT6-049"
		play_cost = 5
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VARIABLE
		digimon_type = "Cyborg"
		power = 5000
		effect_text = "You may digivolve this card from your hand onto one of your green Tamers as if the Tamer is a level 3 green Digimon."
		ruling = [
					"Q: When this card has a Tamer card as a digivolution card, does that Tamer Card's [Security] effect become this card’s inherited effect?",
					"A: No, the Tamer card's [Security] effect does not become an inherited effect.",
					"Q: Can this card digivolve from aLV3 Digimon if the requirements are fulfilled instead of a Tamer Card?",
					"A: Yes you can.",
					"Q: If I use this card's effect to make a tamer card into a digivolution card, is that card affected by effects that say \"trash digivolution cards\"?",
					"A: Yes, it is. However, if the effect specifies Digimon cards, Digi-Egg cards, or any other type of card that isn't a tamer card, it can't be targeted by that effect.",
					"Q: When I digivolve a Tamer card into this card, do I draw a card from the digivolution bonus?",
					"A: Yes, you draw a card from the digivolution Bonus even when digivolving from a Tamer.",
					"Q: Can I attack with this card on the turn its digivolved from a Tamer?",
					"A: Yes, as digivolving is not Playing, it can attack.",
					"Q: Can I attack with this card after digivolving from a Tamer that was Played on the same turn?",
					"A: No, even though it digivolved from a Tamer, the restriction of being unable to attack the turn it is played still applies.",
					"Q: When this Digimon is deleted while having a Tamer card as a digivolution card, what happens to that Tamer card?",
					"A: It is trashed.",
					"Q: If I digivolve on top of a tamer with this effect can I use the effect of [BT3-103 Hidden Potential Discovered] to reduce the memory cost?",
					"A: Yes, you can.",
					"Q: Can I suspend the tamer for the effect of [BT3-103 Hidden Potential Discovered] to reduce the memory cost?",
					"A: No, you cannot. You must suspend another Digimon in the Battle Area.",
					"Q: If I digivolve my dual-coloured Red-Green Tamer into this card, if I use the effect of [EX1-071 Win Rate 60%]. Can I discard a Red Digimon card?",
					"A: No, this card's effect treats the tamer as a pure Green Digimon, so it is not counted as Red.",
]

class BT6_050 extends Card:
	func _init():
		name = "Petaldramon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT6-050"
		play_cost = 6
		level = 4
		stage_level = Stage.HYBRID
		attribute = Attribute.VARIABLE
		digimon_type = "Vegetation"
		power = 7000
		effect_text = "You may digivolve this card from your hand onto one of your green Tamers as if the Tamer is a level 3 green Digimon.\n<Piercing> (When this Digimon attacks and deletes an opponent's Digimon and survives the battle, it performs any security checks it normally would)."
		ruling = [
					"Q: When this card has a Tamer card as a digivolution card, does that Tamer Card's [Security] effect become this card’s inherited effect?",
					"A: No, the Tamer card's [Security] effect does not become an inherited effect.",
					"Q: Can this card digivolve from aLV3 Digimon if the requirements are fulfilled instead of a Tamer Card?",
					"A: Yes you can.",
					"Q: If I use this card's effect to make a tamer card into a digivolution card, is that card affected by effects that say \"trash digivolution cards\"?",
					"A: Yes, it is. However, if the effect specifies Digimon cards, Digi-Egg cards, or any other type of card that isn't a tamer card, it can't be targeted by that effect.",
					"Q: When I digivolve a Tamer card into this card, do I draw a card from the digivolution bonus?",
					"A: Yes, you draw a card from the digivolution Bonus even when digivolving from a Tamer.",
					"Q: Can I attack with this card on the turn its digivolved from a Tamer?",
					"A: Yes, as digivolving is not Playing, it can attack.",
					"Q: Can I attack with this card after digivolving from a Tamer that was Played on the same turn?",
					"A: No, even though it digivolved from a Tamer, the restriction of being unable to attack the turn it is played still applies.",
					"Q: When this Digimon is deleted while having a Tamer card as a digivolution card, what happens to that Tamer card?",
					"A: It is trashed.",
					"Q: If I digivolve on top of a tamer with this effect can I use the effect of [BT3-103 Hidden Potential Discovered] to reduce the memory cost?",
					"A: Yes, you can.",
					"Q: Can I suspend the tamer for the effect of [BT3-103 Hidden Potential Discovered] to reduce the memory cost?",
					"A: No, you cannot. You must suspend another Digimon in the Battle Area.",
					"Q: If I digivolve my dual-coloured Red-Green Tamer into this card, if I use the effect of [EX1-071 Win Rate 60%]. Can I discard a Red Digimon card?",
					"A: No, this card's effect treats the tamer as a pure Green Digimon, so it is not counted as Red.",
]

class BT6_051 extends Card:
	func _init():
		name = "Toropiamon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT6-051"
		play_cost = 5
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Vegetation"
		power = 6000
		inherited_effect_text = "[When Attacking] Suspend 1 of your opponent's Digimon with 5000 DP or less."

class BT6_052 extends Card:
	func _init():
		name = "Entmon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT6-052"
		play_cost = 8
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Vegetation"
		power = 8000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When this Digimon deletes an opponent's Digimon in battle and survives, unsuspend it."

class BT6_053 extends Card:
	func _init():
		name = "Eldradimon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT6-053"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 12000
		effect_text = "<Security Attack +1> (This Digimon checks 1 additional security card)\n[Opponent's Turn] Your opponent's effects can't reduce this Digimon's DP."
		ruling = [
					"Q: Can [BT1-105 Blast Fire] to set the DP of Eldradimon?",
					"A: Yes, Eldradimon's effect prevents the reduction of DP. But it does not prevent its original DP from being set to another number.",
					"Q: My opponent uses [BT3-101 Bifrost] and targets this card. Eldradimon is then hit by a <De-Digivolve>. Does the new Digimon have the decreased DP?",
					"A: Yes, the new Digimon has -3000 DP.",
					"Q: My opponent uses [BT3-101 Bifrost] and targets this card. I digivolve Eldradimon into a new Digimon. Does the new Digimon have the decreased DP?",
					"A: Yes, the new Digimon has -3000 DP.",
]

class BT6_054 extends Card:
	func _init():
		name = "AncientTroymon"
		type = Type.DIGIMON
		color = ColorGroup.GREEN
		rarity = Rarity.R
		id = "BT6-054"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Ancient Plant/Ten Warriors"
		power = 13000
		effect_text = "[Opponent's Turn] When an opponent's Digimon attacks, suspend up to 2 of their Digimon without <Blocker>.\n[On Deletion] You may play 1 green level 4 or lower Digimon card with [Hybrid] in its form from your hand without paying its memory cost."

class BT6_055 extends Card:
	func _init():
		name = "Junkmon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT6-055"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Puppet"
		power = 2000
		inherited_effect_text = "[On Deletion] Gain 1 memory."

class BT6_056 extends Card:
	func _init():
		name = "Chikurimon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-056"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Mine"
		power = 1000
		effect_text = "[Security] At the end of the battle, trigger <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."
		ruling = [
					"Q: Does this card's [Security] effect activate even if it loses the battle with the attacking Digimon?",
					"A:  Yes, it activates at the end of battle regardless of the outcome of the battle.",
					"Q: After the battle this card is checked from my opponent's Digimon's attack, if that Digimon still has remaining checks, does this card's [Security] effect activate first, or do the remaining checks happen first?",
					"A:  As this card's [Security] effect activates at the end of its battle, the effect activates before the next check happens.",
]

class BT6_057 extends Card:
	func _init():
		name = "ToyAgumon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-057"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Puppet"
		power = 2000
		inherited_effect_text = "[All Turns] While this Digimon has <Blocker>, it gets +1000 DP."

class BT6_058 extends Card:
	func _init():
		name = "Nanimon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-058"
		play_cost = 3
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Invader"
		power = 2000
		effect_text = "[Security] At the end of the battle, play this card without paying its memory cost."
		ruling = [
					"Q: Is this Digimon also counted as a security Digimon after it is played into the Battle Area via its effect?",
					"A:  No, at the point of time when this card is played by the effect, it is treated as a normal Digimon.",
					"Q: Does this card's [Security] effect activate even if it loses the battle with the attacking Digimon?",
					"A:  Yes, it activates at the end of battle regardless of the outcome of the battle.",
					"Q: After the battle this card is checked from my opponent's Digimon's attack, if that Digimon still has remaining checks, does this card's [Security] effect activate first, or do the remaining checks happen first?",
					"A:  As this card's [Security] effect activates at the end of its battle, the effect activates before the next check happens.",
]

class BT6_059 extends Card:
	func _init():
		name = "Machmon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT6-059"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digimon_type = "Cyborg"
		power = 4000
		effect_text = "<Decoy (Black)>  (When one of your other black Digimon would be deleted by an opponent's effect, you may delete this Digimon to prevent that deletion)."

class BT6_060 extends Card:
	func _init():
		name = "Deputymon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-060"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VACCINE
		digimon_type = "Mutant"
		power = 4000
		effect_text = "[On Play] Reveal the top 4 cards of your deck. Add 1 Digimon card with [Three Musketeers] in its type and 1 Option card with a memory cost of 7 among them to your hand. Trash the remaining cards.\n[Your Turn] This Digimon can digivolve into a Digimon card with [Three Musketeers] in its type from your hand for a memory cost of 6, ignoring its digivolution requirements."
		ruling = [
					"Q: For this card's effect, must both a Digimon with [Three Musketeers] in its type and a Cost 7 Option Card be revealed among the 4 cards to be able to add them to my hand?",
					"A: No, if only either 1 of them are revealed, you can add just that to your hand.",
					"Q: This card's effect reveals a Digimon card with [Three Musketeers] in its type and a Cost 7 Option card from my deck. Can I add only 1 of the cards to my hand?",
					"A: No, you must add both cards to your hand. This card's Japanese text does not specify \"/or\" in its card text.",
					"Q: This card's effect reveals a Digimon card with [Three Musketeers] in its type and a Cost 7 Option card from my deck. Can I add both cards to my hand?",
					"A: Yes, you can.",
]
		notes = "Revolmon"

class BT6_061 extends Card:
	func _init():
		name = "Gigadramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-061"
		play_cost = 6
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 4
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "[Your Turn] This Digimon is also treated as red."
		inherited_effect_text = "[Opponent's Turn] This Digimon gets +2000 DP."
		ruling = [
					"Q: Can I digivolve this Digimon into a Digimon with a digivolution requirement of “Red, level 5”?",
					"A:  Yes you can, as this Digimon is also treated as a Red Digimon on your turn.",
					"Q: When this card is in my Breeding Area, can I digivolve it into a Digimon that digivolves from a Red Digimon?",
					"A:  No, as [Your Turn] effects do not activate in the Breeding Area, this card is not treated as a Red Digimon in your Breeding Area.",
]

class BT6_062 extends Card:
	func _init():
		name = "Volcanomon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT6-062"
		play_cost = 6
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Cyborg"
		power = 7000
		inherited_effect_text = "[Your Turn] While your opponent has an unsuspended Digimon in play, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		ruling = [
					"Q: My opponent only has 1 unsuspended Digimon, and my Digimon with this card in its digivolution cards attacks. If my opponent then activates their <Blocker> effect, is this card's inherited effect of <Security Attack +1> then lost?",
					"A:  Yes, at the point of time when your opponent no longer has any unsuspended Digimon, the <Security Attack +1> is lost.",
]
		notes = "Volcamon"

class BT6_063 extends Card:
	func _init():
		name = "BigMamemon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-063"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 10000

class BT6_064 extends Card:
	func _init():
		name = "Mamemon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT6-064"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 6000
		effect_text = "<Decoy (Black)>  (When one of your other black Digimon would be deleted by an opponent's effect, you may delete this Digimon to prevent that deletion).\n[On Deletion] Delete 1 of your opponent's Digimon with a play cost of 7 or less."

class BT6_064_B extends Card:
	func _init():
		name = "Mamemon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT6-064 (B)"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.DATA
		digimon_type = "Mutant"
		power = 6000
		effect_text = "<Decoy (Black)>  (When one of your other black Digimon would be deleted by an opponent's effect, you may delete this Digimon to prevent that deletion).\n[On Deletion] Delete 1 of your opponent's Digimon with a play cost of 7 or less."
		is_parallel = true
		notes = "parallel promo"

class BT6_065 extends Card:
	func _init():
		name = "Gundramon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT6-065"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Machine/Three Musketeers"
		power = 11000
		effect_text = "<Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[When Digivolving] Reveal the top 5 cards of your deck. You may use 1 Option card with a memory cost of 7 among them without paying its memory cost. Trash the remaining cards. If you don't use an Option card with this effect, delete 1 of your opponent's Digimon with a play cost of 4 or less."
		ruling = [
					"Q: For this card's [When Digivolving] effect, if a Cost 7 Option Card was revealed, must I use that Option Card?",
					"A:  No, as this card's [When Digivolving] effect says \"You can use\", it is up to you to choose to use it or not. If you did not use it, you would then delete 1 of your opponent's Digimon with play Cost 4 or less.",
					"Q: If I have 4 or less cards in my deck, does this card's [When Digivolving] effect still activate?",
					"A:  Yes it does. In this case, you reveal as many cards as you can and resolve the remainder of the effect as per normal.",
					"Q: When I use a Cost 7 Option Card from this Digimon's [When Digivolving] effect, do I ignore the colour restriction?",
					"A:  No, you cannot ignore the colour restriction.",
					"Q: If I reveal [BT3-076 Candlemon] from the top and [ST6-16 Nail Bone]? Can I use Nail Bone's effect to play the Candlemon.",
					"A: As long as you have another Purple Digimon letting you use Purple Option cards, you can use the Option to play the Candlemon trashed by this card's effect.",
]

class BT6_066 extends Card:
	func _init():
		name = "PileVolcamon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT6-066"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Cyborg"
		power = 11000
		effect_text = "<Reboot> (Unsuspend this Digimon during your opponent's unsuspend phase).\n[Your Turn] (Once Per Turn) When one of your other Digimon is deleted, trigger <De-Digivolve  1> on 1 of your opponent's Digimon (Trash up to 1 card from the top of one of your opponent's Digimon. If it has no digivolution cards, or becomes a level 3 Digimon, you can't trash any more cards)."

class BT6_067 extends Card:
	func _init():
		name = "Gankoomon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT6-067"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Warrior/Royal Knight"
		power = 12000
		effect_text = "[When Digivolving] Delete all of your opponent's Digimon with the lowest play cost.\n[Your Turn] While your opponent has an unsuspended Digimon, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		ruling = [
					"Q: What does \"All of your opponent's Digimon with the lowest play Cost\" mean exactly?",
					"A:  Among all of your opponent's Digimon in the Battle Area, find which Digimon has a play Cost with the lowest number. If multiple Digimon has the same play Cost as that number, all of them are targeted.",
					"Q: My opponent only has 1 unsuspended Digimon, and this Digimon attacks. If my opponent then activates their <Blocker>, is this card's inherited effect of <Security Attack +1> then lost?",
					"A:  Yes, at the point of time when your opponent longer has any unsuspended Digimon, the <Security Attack +1> is lost.",
]

class BT6_067_B extends Card:
	func _init():
		name = "Gankoomon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SR
		id = "BT6-067 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.DATA
		digimon_type = "Holy Warrior/Royal Knight"
		power = 12000
		effect_text = "[When Digivolving] Delete all of your opponent's Digimon with the lowest play cost.\n[Your Turn] While your opponent has an unsuspended Digimon, this Digimon gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		ruling = [
					"Q: What does \"All of your opponent's Digimon with the lowest play Cost\" mean exactly?",
					"A:  Among all of your opponent's Digimon in the Battle Area, find which Digimon has a play Cost with the lowest number. If multiple Digimon has the same play Cost as that number, all of them are targeted.",
					"Q: My opponent only has 1 unsuspended Digimon, and this Digimon attacks. If my opponent then activates their <Blocker>, is this card's inherited effect of <Security Attack +1> then lost?",
					"A:  Yes, at the point of time when your opponent longer has any unsuspended Digimon, the <Security Attack +1> is lost.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_068 extends Card:
	func _init():
		name = "Impmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-068"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 2000
		effect_text = "[On Play] You may trash 1 card in your hand. If you do, return 1 Digimon card with [Seven Great Demon Lords] or [Three Musketeers] in its type from your trash to your hand."
		ruling = [
					"Q: For this card's effect, must I trash 1 card from my hand when this card is played?",
					"A: ' No, as it says \"You may trash\". It is up to you to choose to trash or not. However if you did not trash a card, you do not return a Digimon with [Seven Great Demon Lords] or [Three Musketeers] in its type from your trash to your hand.",
]

class BT6_068_B extends Card:
	func _init():
		name = "Impmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-068 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Evil"
		power = 2000
		effect_text = "[On Play] You may trash 1 card in your hand. If you do, return 1 Digimon card with [Seven Great Demon Lords] or [Three Musketeers] in its type from your trash to your hand."
		ruling = [
					"Q: For this card's effect, must I trash 1 card from my hand when this card is played?",
					"A: ' No, as it says \"You may trash\". It is up to you to choose to trash or not. However if you did not trash a card, you do not return a Digimon with [Seven Great Demon Lords] or [Three Musketeers] in its type from your trash to your hand.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_069 extends Card:
	func _init():
		name = "Goblimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-069"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Demon"
		power = 2000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When you trash a card in your hand using one of your effects, this Digimon gets +2000 DP for the turn."
		notes = "Goburimon"

class BT6_070 extends Card:
	func _init():
		name = "Elecmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-070"
		play_cost = 4
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VIRUS
		digimon_type = "Mammal"
		power = 2000
		effect_text = "[On Deletion] Delete 1 of your opponent's level 3 Digimon."

class BT6_071 extends Card:
	func _init():
		name = "Kinkakumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-071"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Demon"
		power = 5000
		inherited_effect_text = "[When Attacking] You may trash 1 card in your hand to delete 1 of your opponent's level 3 Digimon."

class BT6_072 extends Card:
	func _init():
		name = "Ogremon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT6-072"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Demon"
		power = 4000
		effect_text = "[On Play] You may trash 1 card in your hand to delete 1 of your opponent's level 4 or lower Digimon."
		ruling = [
					"Q: Can I activate this card’s effect when my hand is empty?",
					"A: No. You must trash a card in your hand in order to activate it.",
]

class BT6_073 extends Card:
	func _init():
		name = "Ginkakumon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-073"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Demon"
		power = 5000
		inherited_effect_text = "[Your Turn] (Once Per Turn) When you trash a card in your hand using one of your effects, gain 1 memory."
		ruling = [
					"Q: If I digivolve this card into a Level 5 Digimon while under the effects of [EX1-071 Win Rate 60%]. Does the [Your Turn] effect of the Digimon on top of this card activate?",
					"A: No, the Digimon does not have its [Your Turn] effect at the time of trashing a card in the hand.",
]

class BT6_074 extends Card:
	func _init():
		name = "Boogiemon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-074"
		play_cost = 5
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digimon_type = "Wizard"
		power = 7000

class BT6_075 extends Card:
	func _init():
		name = "Ginkakumon Promote"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-075"
		play_cost = 6
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 1
		digivolve_level_2 = 4
		digimon_type = "Demon"
		power = 6000
		effect_text = "<Rush> (This Digimon can attack the turn it comes into play).\n[On Play] You may place 1 [Kinkakumon] and/or 1 [Ginkakumon] from your trash in this card's digivolution cards in any order. If you place 2 cards with this effect, trigger <Draw 1> (Draw 1 card from your deck)."
		ruling = [
					"Q: Can I use this card’s [On Play] effect to place a [Ginkakumon Promote] from my trash in this card’s digivolution cards?",
					"A: No. This card’s [On Play] effect can only be used to place cards whose names match either [Kinkakumon] or [Ginkakumon] exactly.",
					"Q: If I have both [BT6-073 Ginkakumon] and [BT6-071 Kinkakumon] in my trash. Can I choose to place only 1 of them into this card's digivolution cards?",
					"A: No, if you choose to place cards underneath this card you must do as much as possible or none at all. If you have one, you can place one but if you have both you must place both.",
]

class BT6_076 extends Card:
	func _init():
		name = "Feresmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-076"
		play_cost = 6
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Fallen Angel"
		power = 9000

class BT6_077 extends Card:
	func _init():
		name = "Rebellimon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT6-077"
		play_cost = 7
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 4
		digimon_type = "Cyborg"
		power = 7000
		effect_text = "[When Digivolving] You may trash 1 card in your hand to have this Digimon gain <Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead) and <Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling) until the end of your opponent's next turn.\n[All Turns] This Digimon is also treated as black."
		ruling = [
					"Q: Rebellimon This card is in my breeding area. Can I digivolve it into a Digimon that requires a black Digimon?",
					"A: No, you can't. Effects don't activate from breeding areas, so the card isn't treated as a black card. You can't digivolve it into a Digimon that requires a black Digimon.",
					"Q: Can I activate this card’s effect when my hand is empty?",
					"A: No. You must trash a card in your hand in order to activate it.",
]

class BT6_078 extends Card:
	func _init():
		name = "SkullGreymon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT6-078"
		play_cost = 8
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Undead"
		power = 7000
		effect_text = "When you trash this card in your hand using one of your effects, you may place it under 1 of your purple Digimon at the bottom of its digivolution cards.\n[When Attacking] You may trash 1 card in your hand to have this Digimon get +3000 DP for the turn."
		inherited_effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling)."
		ruling = [
					"Q: If I digivolve my Level 5 Purple Digimon into [BT4-087 Anubismon] while under the effects of [EX1-071 Win Rate 60%], and trash this card from the hand. Can I use the [When Digivolving] effect of [BT4-087 Anubismon] before the \"when this card is trashed from your hand\" effect of SkullGreymon?",
					"A: Yes, they both trigger at the same time. So you can choose which effect to activate first.",
]

class BT6_078_B extends Card:
	func _init():
		name = "SkullGreymon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT6-078 (B)"
		play_cost = 8
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.VIRUS
		digimon_type = "Undead"
		power = 7000
		effect_text = "When you trash this card in your hand using one of your effects, you may place it under 1 of your purple Digimon at the bottom of its digivolution cards.\n[When Attacking] You may trash 1 card in your hand to have this Digimon get +3000 DP for the turn."
		inherited_effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling)."
		ruling = [
					"Q: If I digivolve my Level 5 Purple Digimon into [BT4-087 Anubismon] while under the effects of [EX1-071 Win Rate 60%], and trash this card from the hand. Can I use the [When Digivolving] effect of [BT4-087 Anubismon] before the \"when this card is trashed from your hand\" effect of SkullGreymon?",
					"A: Yes, they both trigger at the same time. So you can choose which effect to activate first.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_079 extends Card:
	func _init():
		name = "Murmukusmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-079"
		play_cost = 11
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Demon Lord"
		power = 10000
		effect_text = "<Retaliation> (When this Digimon is deleted after losing a battle, delete the Digimon it was battling).\n[On Deletion] If you have 10 or more cards in your trash, you may play 1 [Ornismon] from your trash without paying its memory cost."
		ruling = [
					"Q: I have 9 cards in my trash when this Digimon is deleted. If this results in my having 10 cards in my trash, does this card’s [On Deletion] effect activate?",
					"A: Yes. The [On Deletion] effect activates after the card moves to your trash, meeting the requirement for you to have 10 cards in your trash.",
]

class BT6_080 extends Card:
	func _init():
		name = "Ornismon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-080"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Ancient Bird"
		power = 12000
		effect_text = "<Security Attack +1> (This Digimon checks 1 additional security card)\n[On Play] Delete 1 of your opponent's level 5 or lower Digimon."

class BT6_081 extends Card:
	func _init():
		name = "Titamon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT6-081"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Shaman"
		power = 12000
		effect_text = "[When Digivolving] Trash 1 card in your hand. Then, you may play 1 purple level 4 or lower Digimon card from your trash without paying its memory cost.\n [Your Turn] (Once Per Turn) When you trash a card in your hand using one of your effects, this Digimon gets +2000 DP and <Security Attack +1> (This Digimon checks 1 additional security card) for the turn."
		ruling = [
					"Q: Does this card’s [When Digivolving] effect force me to trash 1 card in my hand when this card digivolves?",
					"A: Yes. If possible, you must trash 1 card in your hand for this card’s effect. “Then, you may play 1 purple Level 4 or lower Digimon card from your trash without paying its memory cost” is phrased “you may,” so you can choose whether or not to play a card using the effect.",
					"Q: Can I use this card’s [When Digivolving] effect to trash a purple Level 4 or lower Digimon card in my hand, then play it with this effect?",
					"A: Yes, you can.",
					"Q: I use this card’s [When Digivolving] effect to trash a card in my hand. Does this card’s [Your Turn] effect trigger?",
					"A: Yes, it does.",
					"Q: When happens when this card’s [When Digivolving] effect activates while my hand is empty?",
					"A: You can’t trash a card in your hand, but since you don’t need to trash a card to activate the second part of the effect, you can still play a purple Level 4 or lower Digimon card from your trash without paying its memory cost.",
]

class BT6_081_B extends Card:
	func _init():
		name = "Titamon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SR
		id = "BT6-081 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Shaman"
		power = 12000
		effect_text = "[When Digivolving] Trash 1 card in your hand. Then, you may play 1 purple level 4 or lower Digimon card from your trash without paying its memory cost.\n [Your Turn] (Once Per Turn) When you trash a card in your hand using one of your effects, this Digimon gets +2000 DP and <Security Attack +1> (This Digimon checks 1 additional security card) for the turn."
		ruling = [
					"Q: Does this card’s [When Digivolving] effect force me to trash 1 card in my hand when this card digivolves?",
					"A: Yes. If possible, you must trash 1 card in your hand for this card’s effect. “Then, you may play 1 purple Level 4 or lower Digimon card from your trash without paying its memory cost” is phrased “you may,” so you can choose whether or not to play a card using the effect.",
					"Q: Can I use this card’s [When Digivolving] effect to trash a purple Level 4 or lower Digimon card in my hand, then play it with this effect?",
					"A: Yes, you can.",
					"Q: I use this card’s [When Digivolving] effect to trash a card in my hand. Does this card’s [Your Turn] effect trigger?",
					"A: Yes, it does.",
					"Q: When happens when this card’s [When Digivolving] effect activates while my hand is empty?",
					"A: You can’t trash a card in your hand, but since you don’t need to trash a card to activate the second part of the effect, you can still play a purple Level 4 or lower Digimon card from your trash without paying its memory cost.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_082 extends Card:
	func _init():
		name = "Sistermon Blanc"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT6-082"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Puppet"
		power = 3000
		effect_text = "[All Turns] While you have a Digimon with [Huckmon] in its name or [Royal Knight] in its type in play, all of your Digimon with [Sistermon] in their name gain <Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[On Play] Trigger <Draw 1> (Draw 1 card from your deck)."

class BT6_082_B extends Card:
	func _init():
		name = "Sistermon Blanc"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT6-082 (B)"
		play_cost = 3
		level = 3
		stage_level = Stage.ROOKIE
		attribute = Attribute.VACCINE
		digimon_type = "Puppet"
		power = 3000
		effect_text = "[All Turns] While you have a Digimon with [Huckmon] in its name or [Royal Knight] in its type in play, all of your Digimon with [Sistermon] in their name gain <Blocker> (When an opponent's Digimon attacks, you may suspend this Digimon to force the opponent to attack it instead).\n[On Play] Trigger <Draw 1> (Draw 1 card from your deck)."
		is_parallel = true
		notes = "parallel promo"

class BT6_083 extends Card:
	func _init():
		name = "Eosmon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.C
		id = "BT6-083"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.UNKNOWN
		digimon_type = "Unknown"
		power = 4000
		effect_text = "[On Play] You may play 1 white Tamer card with a play cost of 4 or less from your hand without paying its memory cost. Then, your opponent may play 1 Tamer card from their hand without paying its memory cost."
		inherited_effect_text = "[When Attacking] You may play 1 white Tamer card with a play cost of 4 or less from your hand without paying its memory cost."
		ruling = [
					"Q: If I don’t play a Tamer using this card’s [On Play] effect, does that prevent my opponent from playing a Tamer card, as well?",
					"A: No. Even if you choose not to play a Tamer, your opponent can still use this card’s effect to play a Tamer of their own.",
]

class BT6_084 extends Card:
	func _init():
		name = "Sistermon Ciel"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT6-084"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digimon_type = "Puppet"
		power = 5000
		effect_text = "[All Turns] All of your Digimon with [Huckmon] in their name or [Royal Knight] in their types get +2000 DP.\n[On Play] Gain 1 memory."
		ruling = [
					"Q: If this card is in the hand or breeding area. Is this card still treated as \"[Sistermon Ciel] and [Data] Attribute\"?",
					"A: Yes, it is treated as \"[Sistermon Ciel] and [Data] Attribute\" because it is a special rule and not an effect.",
					"Q: Does this card have four traits, [Champion], [Puppet], [Virus], and [Virus]?",
					"A: Yes, this card is treated as both [Virus] and [Virus], but it is treated as one card number, and it is treated as having three traits in total including [Champion] and [Puppet].",
]

class BT6_084_B extends Card:
	func _init():
		name = "Sistermon Ciel"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT6-084 (B)"
		play_cost = 4
		level = 4
		stage_level = Stage.CHAMPION
		attribute = Attribute.DATA
		digimon_type = "Puppet"
		power = 5000
		effect_text = "[All Turns] All of your Digimon with [Huckmon] in their name or [Royal Knight] in their types get +2000 DP.\n[On Play] Gain 1 memory."
		ruling = [
					"Q: If this card is in the hand or breeding area. Is this card still treated as \"[Sistermon Ciel] and [Data] Attribute\"?",
					"A: Yes, it is treated as \"[Sistermon Ciel] and [Data] Attribute\" because it is a special rule and not an effect.",
					"Q: Does this card have four traits, [Champion], [Puppet], [Virus], and [Virus]?",
					"A: Yes, this card is treated as both [Virus] and [Virus], but it is treated as one card number, and it is treated as having three traits in total including [Champion] and [Puppet].",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_085 extends Card:
	func _init():
		name = "Eosmon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.C
		id = "BT6-085"
		play_cost = 5
		level = 5
		stage_level = Stage.ULTIMATE
		attribute = Attribute.UNKNOWN
		digivolve_color_2 = ""
		digivolve_cost_2 = 3
		digivolve_level_2 = 4
		digimon_type = "Unknown"
		power = 6000
		effect_text = "You can include up to 50 copies of cards with this card's card number in your deck.\n[When Attacking] You may play 1 level 5 or lower [Eosmon] from your hand without paying its memory cost."
		inherited_effect_text = "[Your Turn] This Digimon gets +1000 DP."
		ruling = [
					"Q: What does \"You can put up to 50 cards that has the same Card Number as this card in your Deck\" mean exactly?",
					"A:  Normally, you are only allowed to put up to 4 copies of a card of the same Card Number. This card's effect changes the number of copies of this exact card allowed in your deck to 50 instead.",
]

class BT6_086 extends Card:
	func _init():
		name = "Eosmon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT6-086"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digivolve_color_2 = ""
		digivolve_cost_2 = 5
		digivolve_level_2 = 5
		digimon_type = "Unknown"
		power = 13000
		effect_text = "[When Digivolving] For each Tamer in play, you may place 1 level 5 or lower [Eosmon] from your trash at the top of this Digimon's digivolution cards in any order. If you place 2 or more cards with this effect, delete 1 of your opponent's Digimon.\n[Your Turn] For every 3 digivolution cards this Digimon has, it gains <Security Attack +1> (This Digimon checks 1 additional security card)."

class BT6_086_B extends Card:
	func _init():
		name = "Eosmon"
		type = Type.DIGIMON
		color = ColorGroup.WHITE
		rarity = Rarity.SR
		id = "BT6-086 (B)"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.UNKNOWN
		digivolve_color_2 = ""
		digivolve_cost_2 = 5
		digivolve_level_2 = 5
		digimon_type = "Unknown"
		power = 13000
		effect_text = "[When Digivolving] For each Tamer in play, you may place 1 level 5 or lower [Eosmon] from your trash at the top of this Digimon's digivolution cards in any order. If you place 2 or more cards with this effect, delete 1 of your opponent's Digimon.\n[Your Turn] For every 3 digivolution cards this Digimon has, it gains <Security Attack +1> (This Digimon checks 1 additional security card)."
		is_parallel = true
		notes = "parallel promo"

class BT6_087 extends Card:
	func _init():
		name = "Tai Kamiya"
		type = Type.TAMER
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT6-087"
		play_cost = 3
		effect_text = "[Your Turn] When one of your Digimon with [Agumon] or [Greymon] in its name (other than [DoruGreymon], [BurningGreymon], [DexDoruGreymon]) moves from the breeding area to the battle area, gain 1 memory and trigger <Draw 1> (Draw 1 card from your deck).\n[Main] (Once Per Turn) You can digivolve your [Agumon] into 1 [Agumon - Bond of Bravery] in your hand for its digivolution cost, ignoring its level. If you do, trash the top 2 cards of your security stack. Then, if you have 1 or more security cards, delete that Digimon at the end of the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: If I have 1 or fewer security cards, does that mean I cannot activate this card's [Main] effect?",
					"A:  No, you can activate it. In this case, you trash as many security cards as you are able to.",
					"Q: For this card's [Main] effect, are cards like [Agumon Expert], or [ToyAgumon] etc, that have [Agumon] in their name be chosen as the targets?",
					"A:  No, this card's [Main] effect specifies to target only cards that are [Agumon].",
					"Q: I activate this card's [Main] effect and digivolve into an [Agumon - Bond of Bravery]. At this point of time I have 1 or more security cards, but on the same turn my security cards are reduced to 0 because of other effects. Does that mean I don't have to delete that [Agumon - Bond of Bravery] at the end of this turn?",
					"A:  No, as long as you had 1 or more security cards at the point of time after activating this effect, your [Agumon - Bond of Bravery] is deleted even if your security is 0 on the same turn afterwards.",
					"Q: I have 2 of this card. I use the [Main] effect of the 1st to digivolve a Digimon into [Agumon - Bond of Bravery] and have 1 or more security cards. I then use the [Main] effect of the 2nd copy of this card to digivolve another Digimon into another [Agumon - Bond of Bravery] and is left with 0 security cards. What happens to those [Agumon - Bond of Bravery] at the end of this turn in this scenario?",
					"A:  The [Agumon - Bond of Bravery] that was digivolved using the [Main] effect of the 1st one is deleted as you had 1 or more security cards after activating the effect. The [Agumon - Bond of Bravery] digivolved using the [Main] of the 2nd copy of this card is not deleted as you had 0 security cards after activating the effect.",
]
		notes = "Yagami Taichi"

class BT6_088 extends Card:
	func _init():
		name = "Matt Ishida"
		type = Type.TAMER
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT6-088"
		play_cost = 3
		effect_text = "[Your Turn] When one of your Digimon with [Gabumon] or [Garurumon] in its name (other than [KendoGarurumon]) moves from the breeding area to the battle area, gain 1 memory and trigger <Draw 1> (Draw 1 card from your deck).\n[Main] (Once Per Turn) You can digivolve your [Gabumon] into 1 [Gabumon - Bond of Friendship] in your hand for its digivolution cost, ignoring its level. If you do, trash the top 2 cards of your security stack. Then, if you have 1 or more security cards, delete that Digimon at the end of the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: If I have 1 or fewer security cards, does that mean I cannot activate this card's [Main] effect?",
					"A:  No, you can activate it. In this case, you trash as many security cards as you are able to.",
					"Q: I activate this card's [Main] effect and digivolve into a [Gabumon - Bond of Friendship]. At this point of time I have 1 or more security cards, but on the same turn my security cards are reduced to 0 because of other effects. Does that mean I don't have to delete that [Gabumon - Bond of Friendship] at the end of this turn?",
					"A:  No, as long as you had 1 or more security cards at the point of time after activating this effect, your [Gabumon - Bond of Friendship] is deleted even if your security is 0 on the same turn afterwards.",
					"Q: I have 2 of this card. I use the [Main] effect of the 1st to digivolve a Digimon into [Gabumon - Bond of Friendship] and have 1 or more security cards. I then use the [Main] effect of the 2nd copy of this card to digivolve another Digimon into another [Gabumon - Bond of Friendship] and is left with 0 security cards. What happens to those [Gabumon - Bond of Friendship] at the end of this turn in this scenario?",
					"A:  The [Gabumon - Bond of Friendship] that was digivolved using the [Main] effect of the 1st one is deleted as you had 1 or more security cards after activating the effect. The [Gabumon - Bond of Friendship] digivolved using the [Main] of the 2nd copy of this card is not deleted as you had 0 security cards after activating the effect.",
]
		notes = "Ishida Yamato"

class BT6_089 extends Card:
	func _init():
		name = "T.K. Takaishi & Kari Kamiya"
		type = Type.TAMER
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT6-089"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have fewer security cards than your opponent, gain 2 memory.\n[Your Turn] When one of your yellow Digimon attacks, you may suspend this Tamer to have 1 of your opponent's Digimon get -1000 DP for the turn."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: If I have the same number of security as my opponent, does this card's [Start of Your Turn] effect activate?",
					"A:  No, as the effect says you have to have fewer security cards than your opponent, having the same number of security cards do not activate this effect.",
]
		notes = "Takaishi Takeru & Yagami Hikari"

class BT6_090 extends Card:
	func _init():
		name = "Izzy Izumi & Joe Kido"
		type = Type.TAMER
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT6-090"
		play_cost = 4
		effect_text = "[Start of Your Turn] If your opponent has 2 or more Digimon in play, gain 2 memory.\n[Opponent's Turn] When one of your black Digimon is deleted, you may suspend this Tamer to trigger <Draw 1> (Draw 1 card from your deck)."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		notes = "Izumi Koshiro & Kido Jo"

class BT6_091 extends Card:
	func _init():
		name = "Sora Takenouchi & Mimi Tachikawa"
		type = Type.TAMER
		color = ColorGroup.PURPLE
		rarity = Rarity.R
		id = "BT6-091"
		play_cost = 4
		effect_text = "[Start of Your Turn] If your opponent doesn't have a level 4 or lower Digimon in play, gain 2 memory.\n[Your Turn] When one of your purple Digimon attacks, you may suspend this Tamer to trigger <Draw 1> (Draw 1 card from your deck). Then, trash 1 card in your hand."
		sec_effect_text = "[Security] Play this card without paying its memory cost."
		ruling = [
					"Q: Do I get gain 2 memory from this card's [Start of Your Turn] effect if my opponent has no Digimon at all in their Battle Area?",
					"A:  Yes you get gain 2 memory.",
]
		notes = "Takenouchi Sora & Tachikawa Mimi"

class BT6_092 extends Card:
	func _init():
		name = "Menoa Bellucci"
		type = Type.TAMER
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT6-092"
		play_cost = 4
		effect_text = "[Start of Your Turn] If you have 2 memory or less, set your memory to 3.\n[Your Turn] When you play an [Eosmon], you may suspend this Tamer to reveal the top 3 cards of your deck. Add 1 Tamer card or 1 Digimon card with [Eosmon] in its name among them to your hand. Place the remaining cards at the bottom of your deck in any order.\n[Opponent's Turn] While you have an [Eosmon] in play, your opponent's Tamers don't unsuspend during their unsuspend phase."
		sec_effect_text = "[Security] Play this card without paying its memory cost."

class BT6_093 extends Card:
	func _init():
		name = "Judgement of the Blade"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT6-093"
		play_cost = 1
		effect_text = "[Main] 1 of your Digimon with [Huckmon] in its name or [Royal Knight] in its type can attack your opponent's unsuspended Digimon for the turn."
		sec_effect_text = "[Security] You may play 1 Digimon card with [Sistermon] in its name from your hand or trash without paying its memory cost. Then, add this card to your hand."

class BT6_093_B extends Card:
	func _init():
		name = "Judgement of the Blade"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.C
		id = "BT6-093 (B)"
		play_cost = 1
		effect_text = "[Main] 1 of your Digimon with [Huckmon] in its name or [Royal Knight] in its type can attack your opponent's unsuspended Digimon for the turn."
		sec_effect_text = "[Security] You may play 1 Digimon card with [Sistermon] in its name from your hand or trash without paying its memory cost. Then, add this card to your hand."
		is_parallel = true
		notes = "parallel promo"

class BT6_094 extends Card:
	func _init():
		name = "Red Reamer"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.R
		id = "BT6-094"
		play_cost = 4
		effect_text = "[Main] Delete 1 of your opponent's Digimon with 6000 DP or less. If your opponent has 3 or more Digimon in play, delete 1 of your opponent's Digimon with 13000 DP or less instead."
		sec_effect_text = "[Security] Activate this card's [Main] effect."

class BT6_095 extends Card:
	func _init():
		name = "Happy Bullet Showering"
		type = Type.OPTION
		color = ColorGroup.RED
		rarity = Rarity.U
		id = "BT6-095"
		play_cost = 7
		effect_text = "If you have a Digimon with [Three Musketeers] in its type in play, you may use this Option card without meeting its color requirements. \n[Main] Delete all of your opponent's Digimon with the lowest DP."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: What does \"If you have Digimon with [Three Musketeers] in its type, you can Use this Option while ignoring the colour requirement\" mean exactly?",
					"A:  As long as you have any Digimon with [Three Musketeers] in its type in your Battle Area, you can use this Option even if you do not have any Red Digimon or Tamer in your Battle Area.",
					"Q: What does \"All of your opponent's Digimon with the lowest DP\" mean exactly?",
					"A: Among all of your opponent's Digimon in the Battle Area, find which Digimon has a DP with the smallest number. If multiple Digimon has their DP as that number, all of them are deleted.",
]

class BT6_096 extends Card:
	func _init():
		name = "Forbidden Trident"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.C
		id = "BT6-096"
		play_cost = 1
		effect_text = "[Main] 1 of your Digimon gets +2000 DP and\n\"[When Attacking] Return 1 of your opponent's level 3 Digimon to its owner's hand. Trash all of the digivolution cards of that Digimon\" for the turn."

class BT6_097 extends Card:
	func _init():
		name = "Howling Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.U
		id = "BT6-097"
		play_cost = 3
		effect_text = "[Main] Trash 2 digivolution cards from the bottom of 1 of your opponent's Digimon. Then, 1 of your opponent's Digimon with no digivolution cards can't attack or block until the end of your opponent's next turn. Then, place this card in your battle area.\n[Main] <Delay> (Trash this card in your battle area to activate the effect below. You can't activate this effect the turn this card enters play.)\n・Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		ruling = [
					"Q: A Digimon cannot attack and block after receiving the effect of this card. That Digimon then digivolves and gains a digivolution card. Can that Digimon now attack or block?",
					"A: No, as this card's effect has already activated, that Digimon cannot attack and block until the effect ends.",
					"Q: Can I choose a different Digimon from that one that had 2 of their digivolution cards trashed from the bottom from this card's effect to receive the effect of \"1 of your opponent's Digimon with no digivolution cards cannot attack and block until the end of your opponent's next turn\"?",
					"A:  Yes you can.",
					"Q: When I place this card in my battle area, can I use a blue Option card even if I have no other blue Digimon or Tamers in play?",
					"A: No. Having this card in your battle area doesn’t count toward your color requirements for Options.",
]

class BT6_098 extends Card:
	func _init():
		name = "Raddle Star"
		type = Type.OPTION
		color = ColorGroup.BLUE
		rarity = Rarity.R
		id = "BT6-098"
		play_cost = 5
		effect_text = "[Main] Return 1 of your opponent's level 5 or lower Digimon to its owner's hand. If your opponent has 3 or more Digimon in play, return 1 of your opponent's Digimon to the bottom of its owner's deck instead. Trash all of the digivolution cards of that Digimon."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: My opponent has 3 Digimon in play. Can I choose to put a Level 6 or higher Digimon on the bottom of my opponent's deck?",
					"A: Yes, you can.",
]

class BT6_099 extends Card:
	func _init():
		name = "Acid Injection"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.U
		id = "BT6-099"
		play_cost = 1
		effect_text = "[Main] Trash the top card of your security stack. Then, 1 of your opponent's Digimon gets -5000 DP for the turn."
		sec_effect_text = "[Security] Add this card to its owner's hand."
		ruling = [
					"Q: I have 0 security cards. Does that mean I cannot use this card?",
					"A: No, as it does not say \"You may do X to do Y\", and says \"Do X. Then, do Y.\" you can use this card even if you have 0 security cards.",
]

class BT6_100 extends Card:
	func _init():
		name = "Reinforcing Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.C
		id = "BT6-100"
		play_cost = 6
		effect_text = "[Main] Reveal the top 2 cards of your deck. Place 1 of them on top of your security stack face down. Add the remaining card to your hand. Then, place this card in your battle area.\n[Main] <Delay> (Trash this card in your battle area to activate the effect below. You can't activate this effect the turn this card enters play.)\n・Gain 3 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		ruling = [
					"Q: Must I show my opponent the card I am placing on top of my security stack from this card's effect?",
					"A:  Yes, as cards revealed from your deck are public information until they are placed to your security stack face-down, you have to show your opponent which of the 2 cards revealed you are putting on top of your security stack.",
					"Q: Can I use this card if I only have 1 or less cards in my deck?",
					"A:  Yes, you can. In this case you reveal as many cards as you can from your deck and perform the remainder of the effect as per normal.",
					"Q: When I place this card in my battle area, can I use a yellow Option card even if I have no other yellow Digimon or Tamers in play?",
					"A: No. Having this card in your battle area doesn’t count toward color requirements for Options.",
					"Q: If I am placed under an effect that prevents me from placing cards in my security, such as [BT9-103 Kongou]. What happens to the cards revealed by this effect?",
					"A: Both cards will go to your hand instead of one card going into your security stack.",
]
		notes = "Reinforce・Memory Boost!!"

class BT6_101 extends Card:
	func _init():
		name = "Wyvern's Breath"
		type = Type.OPTION
		color = ColorGroup.YELLOW
		rarity = Rarity.R
		id = "BT6-101"
		play_cost = 8
		effect_text = "[Main] 1 of your opponent's Digimon gets -15000 DP for the turn."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Breath・of・Wyvern"

class BT6_102 extends Card:
	func _init():
		name = "Tropical Venom"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.C
		id = "BT6-102"
		play_cost = 0
		effect_text = "[Main] 1 of your opponent's Digimon gains \"[On Deletion] Lose 2 memory\" until the end of their next turn."
		ruling = [
					"Q: When my opponent's Digimon that was given the effect \"[On Deletion] Lose 2 memory\" from the effect of this card is deleted, how do we move the Memory?",
					"A:  Your opponent must lose 2 memory. Which means when your opponent's Digimon under the effect of this card is deleted, move the memory counter by 2 towards your side.",
]

class BT6_103 extends Card:
	func _init():
		name = "Blasted Disaster"
		type = Type.OPTION
		color = ColorGroup.GREEN
		rarity = Rarity.U
		id = "BT6-103"
		play_cost = 6
		effect_text = "[Main] Suspend all of your opponent's Digimon. Then, gain 1 memory for each of your opponent's suspended Digimon."
		sec_effect_text = "[Security] Suspend 1 of your opponent's Digimon."

class BT6_104 extends Card:
	func _init():
		name = "Parabolic Junk"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.C
		id = "BT6-104"
		play_cost = 0
		effect_text = "[Main] 1 of your Digimon gains \"[On Deletion] Gain 2 memory\" until the end of your opponent's next turn."
		sec_effect_text = "[Security] Add this card to its owner's hand."

class BT6_105 extends Card:
	func _init():
		name = "Gewalt Schwärmer"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.U
		id = "BT6-105"
		play_cost = 7
		effect_text = "If you have a Digimon with [Three Musketeers] in its type in play, you may use this Option card without meeting its color requirements.\n[Main] Delete all Digimon with play costs of 7 or less."
		sec_effect_text = "[Security] Add this card to its owner's hand."
		ruling = [
					"Q: What does \"If you have a Digimon with [Three Musketeers] in its type, you can Use this Option while ignoring the colour requirement\" mean exactly?",
					"A:  As long as you have any Digimon with [Three Musketeers] in its type in your Battle Area, you can use this Option even if you do not have any Black Digimon or Tamer in your Battle Area.",
					"Q: Do my own Digimon with play Cost of 7 or less also get deleted by this card's effect?",
					"A:  Yes, both you and your opponent's Digimon with play Cost of 7 or less are deleted.",
]

class BT6_106 extends Card:
	func _init():
		name = "Iron-Fisted Onslaught"
		type = Type.OPTION
		color = ColorGroup.BLACK
		rarity = Rarity.R
		id = "BT6-106"
		play_cost = 8
		effect_text = "[Main] Delete all of your opponent's Digimon with the highest play cost."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: What does \"All of your opponent's Digimon with the highest play Cost\" mean exactly?",
					"A:  Among all of your opponent's Digimon in the Battle Area, find which Digimon has a play Cost with the biggest number. If multiple Digimon has the same play Cost as that number, all of them are targeted.",
]

class BT6_107 extends Card:
	func _init():
		name = "Glaive Memory Boost!"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-107"
		play_cost = 3
		effect_text = "[Main] Return 1 purple Digimon card from your trash to your hand. Then, place this card in your battle area.\n[Main] <Delay> (Trash this card in your battle area to activate the effect below. You can't activate this effect the turn this card enters play.)\n・Gain 2 memory."
		sec_effect_text = "[Security] Place this card in its owner's battle area."
		ruling = [
					"Q: I have no Digimon Cards at all in my trash. Does that mean I cannot use this card?",
					"A:  No, as it does not say \"You may return\", you can use this this card even if you have no Digimon Cards in your trash.",
					"Q: When I place this card in my battle area, can I use a purple Option card even if I have no other purple Digimon or Tamers in play?",
					"A: No. Having this card in your battle area doesn’t count toward color requirements.",
]
		notes = "Grave・Memory Boost!!"

class BT6_108 extends Card:
	func _init():
		name = "Underworld's Call"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.C
		id = "BT6-108"
		play_cost = 4
		effect_text = "When you trash this card in your hand using one of your effects, trigger <Draw 1> (Draw 1 card from your deck).\n[Main] You may play 1 purple level 4 or lower Digimon card from your trash without paying its memory cost."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		notes = "Pact with the Dark Army"

class BT6_109 extends Card:
	func _init():
		name = "Fly Bullet"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-109"
		play_cost = 7
		effect_text = "If you have a Digimon with [Three Musketeers] in its type in play, you may use this Option card without meeting its color requirements.\n[Main] Delete 1 of your opponent's level 6 or lower Digimon."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: What does \"If you have Digimon with [Three Musketeers] in its type, you can Use this Option while ignoring the colour requirement\" mean exactly?",
					"A:  As long as you have any Digimon with [Three Musketeers] in its type in your Battle Area, you can use this Option even if you do not have any Purple Digimon or Tamer in your Battle Area.",
]

class BT6_109_B extends Card:
	func _init():
		name = "Fly Bullet"
		type = Type.OPTION
		color = ColorGroup.PURPLE
		rarity = Rarity.U
		id = "BT6-109 (B)"
		play_cost = 7
		effect_text = "If you have a Digimon with [Three Musketeers] in its type in play, you may use this Option card without meeting its color requirements.\n[Main] Delete 1 of your opponent's level 6 or lower Digimon."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: What does \"If you have Digimon with [Three Musketeers] in its type, you can Use this Option while ignoring the colour requirement\" mean exactly?",
					"A:  As long as you have any Digimon with [Three Musketeers] in its type in your Battle Area, you can use this Option even if you do not have any Purple Digimon or Tamer in your Battle Area.",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_110 extends Card:
	func _init():
		name = "Cutting Edge"
		type = Type.OPTION
		color = ColorGroup.WHITE
		rarity = Rarity.R
		id = "BT6-110"
		play_cost = 6
		effect_text = "[Main] You may play 1 level 5 or lower [Eosmon] from your hand without paying its memory cost. Then, delete 1 of your opponent's Digimon with DP less than or equal to the Digimon played with this effect."
		sec_effect_text = "[Security] Activate this card's [Main] effect."
		ruling = [
					"Q: I have 1 [ST1-12 Tai Kamiya] when using this card. A [BT6-085 Eosmon] is played from my hand will get +1000 DP to become 7000 DP. Does that mean I can delete my opponent's Digimon with 7000 DP or less?",
					"A:  Yes, as the DP plus takes effect at the point off time your Digimon is played, the boosted DP is used for this card's effect.",
]

class BT6_111 extends Card:
	func _init():
		name = "Alphamon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SEC
		id = "BT6-111"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digimon_type = "Holy Warrior/Royal Knight/X Antibody"
		power = 11000
		effect_text = "[Security] At the end of the battle, add this card to your hand. Then, if a Digimon with [Royal Knight] or [X Antibody] in its type is in play, up to 12 of your opponent's Digimon can't attack players for the turn.\n[When Attacking] You may pay up to 5 memory. If you do, this Digimon gets +1000 DP for the turn for each memory paid.\n[End of Attack] Gain 2 memory."
		ruling = [
					"Q: Does this card's [Security] effect activate even if it loses the battle with the attacking Digimon?",
					"A:  Yes, it activates at the end of battle regardless of the outcome of the battle.",
					"Q: If the attacking Digimon receives this card's [Security] effect of \"Cannot attack player\" does this effect end that attack even if there are remaining Checks no done yet?",
					"A:  No, even if the attacking Digimon cannot attack player, the attack that was already declared is not interrupted or stopped and resolves as per normal.",
					"Q: My Digimon under this card's effect of \"Cannot attack player\" has the effect of <Piercing>. If that Digimon attacks and defeats a Digimon and survives the battle, does <Piercing> still let me perform a security Check?",
					"A:  Yes it does.",
					"Q: I have 11 or less Digimon in the Battle Area; my opponent then activates this card's [Security] effect. Afterwards on the same turn, I play a new Digimon with <Rush> Can that Digimon attack?",
					"A:  Yes it can. Digimon that are not present at the time of the activation of this card's [Security] effect are not targeted.",
					"Q: Does this card's [End of Attack] effect activate if it is deleted after attacking?",
					"A:  No it does not.",
					"Q: My [BT8-066 Hisyaryumon] attacks, and digivolves into [BT6-111 Alphamon] via it's own effect. Can I use [BT6-111 Alphamon]'s [When Attacking] effect?",
					"A: No, you cannot. As the timing for [When Attacking] effects to trigger has already passed. (From Card Rulings:EX1-040)",
]

class BT6_111_B extends Card:
	func _init():
		name = "Alphamon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SEC
		id = "BT6-111 (B)"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digimon_type = "Holy Warrior/Royal Knight/X Antibody"
		power = 11000
		effect_text = "[Security] At the end of the battle, add this card to your hand. Then, if a Digimon with [Royal Knight] or [X Antibody] in its type is in play, up to 12 of your opponent's Digimon can't attack players for the turn.\n[When Attacking] You may pay up to 5 memory. If you do, this Digimon gets +1000 DP for the turn for each memory paid.\n[End of Attack] Gain 2 memory."
		ruling = [
					"Q: Does this card's [Security] effect activate even if it loses the battle with the attacking Digimon?",
					"A:  Yes, it activates at the end of battle regardless of the outcome of the battle.",
					"Q: If the attacking Digimon receives this card's [Security] effect of \"Cannot attack player\" does this effect end that attack even if there are remaining Checks no done yet?",
					"A:  No, even if the attacking Digimon cannot attack player, the attack that was already declared is not interrupted or stopped and resolves as per normal.",
					"Q: My Digimon under this card's effect of \"Cannot attack player\" has the effect of <Piercing>. If that Digimon attacks and defeats a Digimon and survives the battle, does <Piercing> still let me perform a security Check?",
					"A:  Yes it does.",
					"Q: I have 11 or less Digimon in the Battle Area; my opponent then activates this card's [Security] effect. Afterwards on the same turn, I play a new Digimon with <Rush> Can that Digimon attack?",
					"A:  Yes it can. Digimon that are not present at the time of the activation of this card's [Security] effect are not targeted.",
					"Q: Does this card's [End of Attack] effect activate if it is deleted after attacking?",
					"A:  No it does not.",
					"Q: My [BT8-066 Hisyaryumon] attacks, and digivolves into [BT6-111 Alphamon] via it's own effect. Can I use [BT6-111 Alphamon]'s [When Attacking] effect?",
					"A: No, you cannot. As the timing for [When Attacking] effects to trigger has already passed. (From Card Rulings:EX1-040)",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_111_C extends Card:
	func _init():
		name = "Alphamon"
		type = Type.DIGIMON
		color = ColorGroup.BLACK
		rarity = Rarity.SEC
		id = "BT6-111 (C)"
		play_cost = 13
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VACCINE
		digimon_type = "Holy Warrior/Royal Knight/X Antibody"
		power = 11000
		effect_text = "[Security] At the end of the battle, add this card to your hand. Then, if a Digimon with [Royal Knight] or [X Antibody] in its type is in play, up to 12 of your opponent's Digimon can't attack players for the turn.\n[When Attacking] You may pay up to 5 memory. If you do, this Digimon gets +1000 DP for the turn for each memory paid.\n[End of Attack] Gain 2 memory."
		ruling = [
					"Q: Does this card's [Security] effect activate even if it loses the battle with the attacking Digimon?",
					"A:  Yes, it activates at the end of battle regardless of the outcome of the battle.",
					"Q: If the attacking Digimon receives this card's [Security] effect of \"Cannot attack player\" does this effect end that attack even if there are remaining Checks no done yet?",
					"A:  No, even if the attacking Digimon cannot attack player, the attack that was already declared is not interrupted or stopped and resolves as per normal.",
					"Q: My Digimon under this card's effect of \"Cannot attack player\" has the effect of <Piercing>. If that Digimon attacks and defeats a Digimon and survives the battle, does <Piercing> still let me perform a security Check?",
					"A:  Yes it does.",
					"Q: I have 11 or less Digimon in the Battle Area; my opponent then activates this card's [Security] effect. Afterwards on the same turn, I play a new Digimon with <Rush> Can that Digimon attack?",
					"A:  Yes it can. Digimon that are not present at the time of the activation of this card's [Security] effect are not targeted.",
					"Q: Does this card's [End of Attack] effect activate if it is deleted after attacking?",
					"A:  No it does not.",
					"Q: My [BT8-066 Hisyaryumon] attacks, and digivolves into [BT6-111 Alphamon] via it's own effect. Can I use [BT6-111 Alphamon]'s [When Attacking] effect?",
					"A: No, you cannot. As the timing for [When Attacking] effects to trigger has already passed. (From Card Rulings:EX1-040)",
]
		is_parallel = true
		notes = "parallel promo"

class BT6_112 extends Card:
	func _init():
		name = "BeelStarmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SEC
		id = "BT6-112"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Wizard/Three Musketeers"
		power = 11000
		effect_text = "When playing this card from your hand, reduce its play cost by 1 for each [Three Musketeers] Digimon card and Option card with a memory cost of 7 in your trash.\n[On Play] Return 1 Option card with a memory cost of 7 from your trash to your hand. Then, use 1 Option card with a memory cost of 7 in your hand without paying its memory cost."
		ruling = [
					"Q: When I use a Cost 7 Option Card from this Digimon's [On Play] effect, do I ignore the colour restriction?",
					"A:  No, you cannot ignore the colour restriction.",
					"Q: Does this card’s [On Play] effect force me to use an Option card?",
					"A: No. The cards in your hand count as private information, so you don’t have to reveal whether you have an Option card you can use in your hand. As such, you can choose not to use an Option card regardless of whether you have one you can use in your hand. (For example, after using this card’s [On Play] effect to return a 7-cost Option card from your trash to your hand.)",
					"Q: I use this card’s [On Play] effect to return an Option card from my trash to my hand. Do I have to use that card with this card’s effect?",
					"A: No, you can use a different card.",
					"Q: If I have 1 memory and only 1 [Three Musketeers] card in my trash. Can I play this card from my hand?",
					"A: Yes, you can.",
]
		notes = "BelleStarmon"

class BT6_112_B extends Card:
	func _init():
		name = "BeelStarmon"
		type = Type.DIGIMON
		color = ColorGroup.PURPLE
		rarity = Rarity.SEC
		id = "BT6-112 (B)"
		play_cost = 12
		level = 6
		stage_level = Stage.MEGA
		attribute = Attribute.VIRUS
		digimon_type = "Wizard/Three Musketeers"
		power = 11000
		effect_text = "When playing this card from your hand, reduce its play cost by 1 for each [Three Musketeers] Digimon card and Option card with a memory cost of 7 in your trash.\n[On Play] Return 1 Option card with a memory cost of 7 from your trash to your hand. Then, use 1 Option card with a memory cost of 7 in your hand without paying its memory cost."
		ruling = [
					"Q: When I use a Cost 7 Option Card from this Digimon's [On Play] effect, do I ignore the colour restriction?",
					"A:  No, you cannot ignore the colour restriction.",
					"Q: Does this card’s [On Play] effect force me to use an Option card?",
					"A: No. The cards in your hand count as private information, so you don’t have to reveal whether you have an Option card you can use in your hand. As such, you can choose not to use an Option card regardless of whether you have one you can use in your hand. (For example, after using this card’s [On Play] effect to return a 7-cost Option card from your trash to your hand.)",
					"Q: I use this card’s [On Play] effect to return an Option card from my trash to my hand. Do I have to use that card with this card’s effect?",
					"A: No, you can use a different card.",
					"Q: If I have 1 memory and only 1 [Three Musketeers] card in my trash. Can I play this card from my hand?",
					"A: Yes, you can.",
]
		is_parallel = true
		notes = "parallel promo BelleStarmon"

